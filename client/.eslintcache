[{"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\accessToken.ts":"1","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\routes.tsx":"2","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Login.tsx":"3","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Message.tsx":"4","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\reportWebVitals.ts":"5","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Header.tsx":"6","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\generated\\graphql.tsx":"7","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Register.tsx":"8","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Header2.tsx":"9","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\index.tsx":"10","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\App.tsx":"11","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Home.tsx":"12","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Test.tsx":"13","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\LoginFrom.tsx":"14","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\RegisterForm.tsx":"15","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\Skeleton.tsx":"16","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Footer.tsx":"17","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\LinkBox.tsx":"18","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Modal.tsx":"19","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\Spinners.tsx":"20","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Profile.tsx":"21","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Topics.tsx":"22"},{"size":231,"mtime":1607976985837,"results":"23","hashOfConfig":"24"},{"size":703,"mtime":1625809443263,"results":"25","hashOfConfig":"24"},{"size":2812,"mtime":1625804871637,"results":"26","hashOfConfig":"24"},{"size":246,"mtime":1625721792159,"results":"27","hashOfConfig":"24"},{"size":425,"mtime":1607784182783,"results":"28","hashOfConfig":"24"},{"size":2262,"mtime":1625804572053,"results":"29","hashOfConfig":"24"},{"size":14698,"mtime":1608234208985,"results":"30","hashOfConfig":"24"},{"size":1661,"mtime":1625978682307,"results":"31","hashOfConfig":"24"},{"size":4653,"mtime":1626006281192,"results":"32","hashOfConfig":"24"},{"size":3636,"mtime":1625722027519,"results":"33","hashOfConfig":"24"},{"size":1143,"mtime":1625808979486,"results":"34","hashOfConfig":"24"},{"size":3310,"mtime":1626004639371,"results":"35","hashOfConfig":"24"},{"size":733,"mtime":1625978033033,"results":"36","hashOfConfig":"24"},{"size":2650,"mtime":1625978332727,"results":"37","hashOfConfig":"24"},{"size":2104,"mtime":1625977947590,"results":"38","hashOfConfig":"24"},{"size":245,"mtime":1626002484382,"results":"39","hashOfConfig":"24"},{"size":435,"mtime":1625991756430,"results":"40","hashOfConfig":"24"},{"size":743,"mtime":1625995208895,"results":"41","hashOfConfig":"24"},{"size":1565,"mtime":1625977509089,"results":"42","hashOfConfig":"24"},{"size":415,"mtime":1625819687862,"results":"43","hashOfConfig":"24"},{"size":166,"mtime":1625809384497,"results":"44","hashOfConfig":"24"},{"size":865,"mtime":1626002822880,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},"11skg4y",{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\accessToken.ts",["98"],"import jwtDecode from \"jwt-decode\"\r\n\r\nexport const getAccessToken = () => {\r\n    return localStorage.getItem(\"accessToken\")\r\n}\r\n\r\nexport const setAccessToken = (token: string) => {\r\n    localStorage.setItem(\"accessToken\", token)\r\n}","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\routes.tsx",["99"],"import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nimport { Register } from \"./pages/Register\";\r\nimport { Home } from \"./pages/Home\";\r\nimport { Test } from \"./pages/Test\";\r\nimport { Login } from \"./pages/Login\";\r\nimport { Profile } from \"./pages/Profile\";\r\n\r\nimport { Header } from \"./components/Header\";\r\nexport const BaseRouter: React.FC = () => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/\" component={Home} />\r\n      <Route path=\"/test\" component={Test} />\r\n      <Route exact path=\"/register\" component={Register} />\r\n      <Route exact path=\"/login\" component={Login} />\r\n      <Route exact path=\"/profile\" component={Profile} />\r\n    </Switch>\r\n  );\r\n};\r\n",["100","101"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Login.tsx",["102","103","104","105","106","107","108","109","110"],"import React, { useState, useEffect, useMemo, useCallback } from 'react'\r\nimport { RouteComponentProps } from \"react-router-dom\"\r\nimport { setAccessToken } from '../accessToken'\r\nimport { Message } from '../components/Message'\r\nimport { IsUserLoggedInDocument, IsUserLoggedInQuery, MeDocument, MeQuery, useIsUserLoggedInQuery, useLoginMutation } from '../generated/graphql'\r\nimport { ApolloError } from \"@apollo/client/errors\"\r\n\r\n\r\nexport const Login: React.FC<RouteComponentProps> = ({ history }) => {\r\n\r\n    const [username, setUsername] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [showMessage, setShowMessage] = useState({\r\n        show: false,\r\n        value: \"\"\r\n    })\r\n    const [login, { data, client }] = useLoginMutation()\r\n\r\n    const loginUser = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n        e.preventDefault()\r\n        try {\r\n\r\n            const response = await login({\r\n                variables: {\r\n                    username,\r\n                    password\r\n                },\r\n                update: (cache, { data }) => {\r\n                    if (!data) {\r\n                        return null;\r\n                    }\r\n                    cache.writeQuery<MeQuery>({\r\n                        query: MeDocument,\r\n                        data: {\r\n                            me: data.loginUser?.user\r\n                        }\r\n                    })\r\n                    cache.writeQuery<IsUserLoggedInQuery>({\r\n                        query: IsUserLoggedInDocument,\r\n                        data: {\r\n                            isUserLoggedIn: true\r\n                        }\r\n                    })\r\n\r\n                },\r\n            })\r\n            if (response && response.data) {\r\n                setAccessToken(response.data.loginUser?.accessToken!)\r\n                history.push(\"/\")\r\n                setUsername(\"\")\r\n                setPassword(\"\")\r\n            }\r\n        } catch (error) {\r\n            setShowMessage({ show: true, value: error.message })\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form className=\"login-form\">\r\n                {showMessage.show && (\r\n                    <Message message={showMessage.value} />\r\n                )}\r\n                <label htmlFor=\"username\">username: </label>\r\n                <input id=\"username\" type=\"text\" value={username} onChange={e => setUsername(e.target.value)} />\r\n                <label htmlFor=\"password\">password: </label>\r\n                <input id=\"password\" type=\"password\" value={password} onChange={e => setPassword(e.target.value)} />\r\n                <button onClick={e => loginUser(e)}>Login</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Message.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\reportWebVitals.ts",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Header.tsx",["111","112","113","114","115"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\generated\\graphql.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Register.tsx",["116"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Header2.tsx",["117","118","119","120","121","122","123","124"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\index.tsx",["125","126"],"import \"./index.css\";\nimport App from \"./App\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\n\nimport {\n  ApolloProvider,\n  ApolloClient,\n  InMemoryCache,\n  gql,\n  createHttpLink,\n  HttpLink,\n  ApolloLink,\n  Observable,\n} from \"@apollo/client\";\nimport { onError } from \"@apollo/client/link/error\";\nimport { TokenRefreshLink } from \"apollo-link-token-refresh\";\nimport jwtDecode from \"jwt-decode\";\n\nimport { getAccessToken, setAccessToken } from \"./accessToken\";\n\n// import { onError } from '@apollo/client/link/error';\n\n// const authMiddlewareLink = new ApolloLink((operation, forward) => {\n//   const accessToken = getAccessToken()\n//   operation.setContext({\n//     headers: {\n//       authorization: `Bearer ${accessToken}`,\n//     },\n//   })\n//   return forward(operation);\n// });\n\nconst cache = new InMemoryCache();\nconst httpLink = new HttpLink({\n  uri: \"http://localhost:8000/graphql\",\n  credentials: \"include\",\n});\n\nconst requestLink = new ApolloLink(\n  (operation, forward) =>\n    new Observable((observer) => {\n      let handle: any;\n      Promise.resolve(operation)\n        .then((operation) => {\n          const accessToken = getAccessToken();\n          if (accessToken) {\n            operation.setContext({\n              headers: {\n                authorization: `Bearer ${accessToken}`,\n              },\n            });\n          }\n        })\n        .then(() => {\n          handle = forward(operation).subscribe({\n            next: observer.next.bind(observer),\n            error: observer.error.bind(observer),\n            complete: observer.complete.bind(observer),\n          });\n        })\n        .catch(observer.error.bind(observer));\n\n      return () => {\n        if (handle) handle.unsubscribe();\n      };\n    })\n);\n\nconst tokenRefreshLink = new TokenRefreshLink({\n  accessTokenField: \"accessToken\",\n  isTokenValidOrUndefined: () => {\n    const token = getAccessToken();\n    if (!token) {\n      return true;\n    }\n    try {\n      const tokenDecoded: any = jwtDecode(token);\n      const expDate: number = tokenDecoded.exp;\n      if (Date.now() >= expDate * 1000) {\n        return false;\n      } else {\n        return true;\n      }\n    } catch {\n      return false;\n    }\n  },\n  fetchAccessToken: () => {\n    return fetch(\"http://localhost:8000/refresh_token\", {\n      method: \"POST\",\n      credentials: \"include\",\n    });\n  },\n  handleFetch: (accessToken) => {\n    setAccessToken(accessToken);\n  },\n  handleError: (err) => {\n    console.warn(\"Your refresh token is invalid. Try to relogin\");\n    console.error(err);\n  },\n});\n\nexport const client = new ApolloClient({\n  cache,\n\n  link: ApolloLink.from([\n    onError(({ graphQLErrors, networkError }) => {\n      if (graphQLErrors) {\n        graphQLErrors.map(({ message, locations, path }) =>\n          console.log(\n            `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`\n          )\n        );\n      }\n\n      if (networkError) {\n        console.log(`[Network error]: ${networkError}`);\n      }\n    }),\n    tokenRefreshLink,\n    requestLink,\n    httpLink,\n  ]),\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider >\n      <ApolloProvider client={client}>\n        <App />\n      </ApolloProvider>\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\App.tsx",["127","128"],"import React, { useState, useEffect, useRef } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { setAccessToken } from \"./accessToken\";\n\nimport { Header2 } from \"./components/Header2\";\nimport {Footer} from \"./components/Footer\"\nimport { Skeleton } from \"./smallComps/Skeleton\";\n\nimport { useIsUserLoggedInQuery } from \"./generated/graphql\";\nimport { BaseRouter } from \"./routes\";\n\nfunction App() {\n  const [appLoading, setAppLoading] = useState(true);\n\n  useEffect(() => {\n    fetch(\"http://localhost:8000/refresh_token\", {\n      credentials: \"include\",\n      method: \"POST\",\n    }).then(async (x) => {\n      const resposne = await x.json();\n      setAccessToken(resposne.accessToken);\n      setAppLoading(false);\n    });\n  }, []);\n\n  return (\n    <div className=\"app\">\n      {appLoading ? (\n        <div>app is loading.....</div>\n      ) : (\n        <>\n          <BrowserRouter>\n            {/* <Header /> */}\n            <Header2 />\n            <Skeleton>\n              <BaseRouter />\n            </Skeleton>\n            <Footer />\n          </BrowserRouter>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Home.tsx",["129","130","131","132","133","134","135","136","137"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Test.tsx",["138","139","140","141","142","143"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\LoginFrom.tsx",["144","145","146","147","148","149"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  VStack,\r\n  Button,\r\n  Center,\r\n} from \"@chakra-ui/react\";\r\nimport {\r\n  IsUserLoggedInDocument,\r\n  IsUserLoggedInQuery,\r\n  useLoginMutation,\r\n} from \"../generated/graphql\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { setAccessToken } from \"../accessToken\";\r\n\r\nexport const LoginFrom = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [showMessage, setShowMessage] = useState({\r\n    show: false,\r\n    value: \"\",\r\n  });\r\n  const [login, { data, client }] = useLoginMutation();\r\n\r\n  const history = useHistory();\r\n  const submitLoginForm = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    console.log(\"submit form\");\r\n    try {\r\n      const response = await login({\r\n        variables: {\r\n          username,\r\n          password,\r\n        },\r\n        update: (cache, { data }) => {\r\n          if (!data) {\r\n            return null;\r\n          }\r\n          // cache.writeQuery<MeQuery>({\r\n          //     query: MeDocument,\r\n          //     data: {\r\n          //         me: data.loginUser?.user\r\n          //     }\r\n          // })\r\n          cache.writeQuery<IsUserLoggedInQuery>({\r\n            query: IsUserLoggedInDocument,\r\n            data: {\r\n              isUserLoggedIn: true,\r\n            },\r\n          });\r\n        },\r\n      });\r\n      if (response && response.data) {\r\n        console.log(response.data);\r\n\r\n        setAccessToken(response.data.loginUser?.accessToken!);\r\n        history.push(\"/\");\r\n        setUsername(\"\");\r\n        setPassword(\"\");\r\n      }\r\n    } catch (error) {\r\n      setShowMessage({ show: true, value: error.message });\r\n      console.log(error);\r\n    }\r\n  };\r\n  return (\r\n    <VStack padding=\"0.4rem\" color=\"green.400\" shadow=\"xl\">\r\n      <form onSubmit={(e) => submitLoginForm(e)}>\r\n        <FormControl id=\"username\" isRequired my=\"5px\">\r\n          <FormLabel>Username</FormLabel>\r\n          <Input\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n        </FormControl>\r\n\r\n        <FormControl id=\"password\" isRequired my=\"5px\">\r\n          <FormLabel>Password</FormLabel>\r\n          <Input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </FormControl>\r\n        <Center>\r\n          <Button my=\"10px\" p=\"10px\" type=\"submit\">\r\n            login\r\n          </Button>\r\n        </Center>\r\n      </form>\r\n    </VStack>\r\n  );\r\n};\r\n","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\RegisterForm.tsx",["150"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\Skeleton.tsx",["151"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Footer.tsx",["152"],"import React from \"react\";\r\nimport { Container, Flex } from \"@chakra-ui/react\";\r\nexport const Footer = () => {\r\n  return (\r\n    <Flex\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      p=\"1rem\"\r\n      marginTop=\"1rem\"\r\n      bgColor=\"green.300\"\r\n      fontSize=\"medium\"\r\n      fontWeight=\"bold\"\r\n      position=\"relative\"\r\n      width=\"100%\"\r\n      bottom=\"1px\"\r\n    >\r\n        This is the footer\r\n    </Flex>\r\n  );\r\n};\r\n","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\LinkBox.tsx",["153","154","155"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Modal.tsx",["156","157","158"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\Spinners.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Profile.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Topics.tsx",["159","160","161","162","163","164","165","166","167","168"],{"ruleId":"169","severity":1,"message":"170","line":1,"column":8,"nodeType":"171","messageId":"172","endLine":1,"endColumn":17},{"ruleId":"169","severity":1,"message":"173","line":10,"column":10,"nodeType":"171","messageId":"172","endLine":10,"endColumn":16},{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"169","severity":1,"message":"178","line":1,"column":27,"nodeType":"171","messageId":"172","endLine":1,"endColumn":36},{"ruleId":"169","severity":1,"message":"179","line":1,"column":38,"nodeType":"171","messageId":"172","endLine":1,"endColumn":45},{"ruleId":"169","severity":1,"message":"180","line":1,"column":47,"nodeType":"171","messageId":"172","endLine":1,"endColumn":58},{"ruleId":"169","severity":1,"message":"181","line":5,"column":76,"nodeType":"171","messageId":"172","endLine":5,"endColumn":98},{"ruleId":"169","severity":1,"message":"182","line":6,"column":10,"nodeType":"171","messageId":"172","endLine":6,"endColumn":21},{"ruleId":"169","severity":1,"message":"183","line":12,"column":12,"nodeType":"171","messageId":"172","endLine":12,"endColumn":17},{"ruleId":"169","severity":1,"message":"184","line":12,"column":19,"nodeType":"171","messageId":"172","endLine":12,"endColumn":27},{"ruleId":"169","severity":1,"message":"185","line":18,"column":21,"nodeType":"171","messageId":"172","endLine":18,"endColumn":25},{"ruleId":"169","severity":1,"message":"186","line":18,"column":27,"nodeType":"171","messageId":"172","endLine":18,"endColumn":33},{"ruleId":"169","severity":1,"message":"187","line":3,"column":3,"nodeType":"171","messageId":"172","endLine":3,"endColumn":25},{"ruleId":"169","severity":1,"message":"188","line":4,"column":3,"nodeType":"171","messageId":"172","endLine":4,"endColumn":22},{"ruleId":"169","severity":1,"message":"189","line":11,"column":10,"nodeType":"171","messageId":"172","endLine":11,"endColumn":15},{"ruleId":"190","severity":1,"message":"191","line":15,"column":47,"nodeType":"192","messageId":"193","endLine":15,"endColumn":49},{"ruleId":"169","severity":1,"message":"194","line":31,"column":7,"nodeType":"171","messageId":"172","endLine":31,"endColumn":16},{"ruleId":"190","severity":1,"message":"191","line":5,"column":57,"nodeType":"192","messageId":"193","endLine":5,"endColumn":59},{"ruleId":"169","severity":1,"message":"178","line":1,"column":27,"nodeType":"171","messageId":"172","endLine":1,"endColumn":36},{"ruleId":"169","severity":1,"message":"195","line":3,"column":3,"nodeType":"171","messageId":"172","endLine":3,"endColumn":12},{"ruleId":"169","severity":1,"message":"196","line":8,"column":3,"nodeType":"171","messageId":"172","endLine":8,"endColumn":9},{"ruleId":"169","severity":1,"message":"197","line":18,"column":3,"nodeType":"171","messageId":"172","endLine":18,"endColumn":13},{"ruleId":"169","severity":1,"message":"198","line":35,"column":11,"nodeType":"171","messageId":"172","endLine":35,"endColumn":17},{"ruleId":"169","severity":1,"message":"199","line":35,"column":19,"nodeType":"171","messageId":"172","endLine":35,"endColumn":25},{"ruleId":"169","severity":1,"message":"186","line":72,"column":24,"nodeType":"171","messageId":"172","endLine":72,"endColumn":30},{"ruleId":"190","severity":1,"message":"191","line":109,"column":49,"nodeType":"192","messageId":"193","endLine":109,"endColumn":51},{"ruleId":"169","severity":1,"message":"200","line":12,"column":3,"nodeType":"171","messageId":"172","endLine":12,"endColumn":6},{"ruleId":"169","severity":1,"message":"201","line":13,"column":3,"nodeType":"171","messageId":"172","endLine":13,"endColumn":17},{"ruleId":"169","severity":1,"message":"202","line":1,"column":38,"nodeType":"171","messageId":"172","endLine":1,"endColumn":44},{"ruleId":"169","severity":1,"message":"181","line":9,"column":10,"nodeType":"171","messageId":"172","endLine":9,"endColumn":32},{"ruleId":"169","severity":1,"message":"178","line":1,"column":27,"nodeType":"171","messageId":"172","endLine":1,"endColumn":36},{"ruleId":"169","severity":1,"message":"181","line":2,"column":10,"nodeType":"171","messageId":"172","endLine":2,"endColumn":32},{"ruleId":"169","severity":1,"message":"195","line":6,"column":3,"nodeType":"171","messageId":"172","endLine":6,"endColumn":12},{"ruleId":"169","severity":1,"message":"203","line":8,"column":3,"nodeType":"171","messageId":"172","endLine":8,"endColumn":9},{"ruleId":"169","severity":1,"message":"204","line":14,"column":10,"nodeType":"171","messageId":"172","endLine":14,"endColumn":19},{"ruleId":"169","severity":1,"message":"205","line":15,"column":10,"nodeType":"171","messageId":"172","endLine":15,"endColumn":22},{"ruleId":"169","severity":1,"message":"206","line":17,"column":11,"nodeType":"171","messageId":"172","endLine":17,"endColumn":20},{"ruleId":"169","severity":1,"message":"207","line":20,"column":10,"nodeType":"171","messageId":"172","endLine":20,"endColumn":14},{"ruleId":"169","severity":1,"message":"208","line":20,"column":16,"nodeType":"171","messageId":"172","endLine":20,"endColumn":23},{"ruleId":"169","severity":1,"message":"209","line":2,"column":10,"nodeType":"171","messageId":"172","endLine":2,"endColumn":24},{"ruleId":"169","severity":1,"message":"210","line":4,"column":10,"nodeType":"171","messageId":"172","endLine":4,"endColumn":13},{"ruleId":"169","severity":1,"message":"211","line":4,"column":26,"nodeType":"171","messageId":"172","endLine":4,"endColumn":30},{"ruleId":"169","severity":1,"message":"203","line":4,"column":32,"nodeType":"171","messageId":"172","endLine":4,"endColumn":38},{"ruleId":"169","severity":1,"message":"212","line":4,"column":40,"nodeType":"171","messageId":"172","endLine":4,"endColumn":46},{"ruleId":"169","severity":1,"message":"213","line":10,"column":17,"nodeType":"171","messageId":"172","endLine":10,"endColumn":22},{"ruleId":"169","severity":1,"message":"178","line":1,"column":27,"nodeType":"171","messageId":"172","endLine":1,"endColumn":36},{"ruleId":"169","severity":1,"message":"183","line":20,"column":10,"nodeType":"171","messageId":"172","endLine":20,"endColumn":15},{"ruleId":"169","severity":1,"message":"184","line":20,"column":17,"nodeType":"171","messageId":"172","endLine":20,"endColumn":25},{"ruleId":"169","severity":1,"message":"214","line":22,"column":10,"nodeType":"171","messageId":"172","endLine":22,"endColumn":21},{"ruleId":"169","severity":1,"message":"185","line":26,"column":19,"nodeType":"171","messageId":"172","endLine":26,"endColumn":23},{"ruleId":"169","severity":1,"message":"186","line":26,"column":25,"nodeType":"171","messageId":"172","endLine":26,"endColumn":31},{"ruleId":"169","severity":1,"message":"178","line":1,"column":27,"nodeType":"171","messageId":"172","endLine":1,"endColumn":36},{"ruleId":"169","severity":1,"message":"195","line":2,"column":15,"nodeType":"171","messageId":"172","endLine":2,"endColumn":24},{"ruleId":"169","severity":1,"message":"195","line":2,"column":10,"nodeType":"171","messageId":"172","endLine":2,"endColumn":19},{"ruleId":"169","severity":1,"message":"195","line":2,"column":10,"nodeType":"171","messageId":"172","endLine":2,"endColumn":19},{"ruleId":"169","severity":1,"message":"211","line":2,"column":21,"nodeType":"171","messageId":"172","endLine":2,"endColumn":25},{"ruleId":"169","severity":1,"message":"196","line":2,"column":27,"nodeType":"171","messageId":"172","endLine":2,"endColumn":33},{"ruleId":"169","severity":1,"message":"215","line":9,"column":3,"nodeType":"171","messageId":"172","endLine":9,"endColumn":14},{"ruleId":"169","severity":1,"message":"216","line":11,"column":3,"nodeType":"171","messageId":"172","endLine":11,"endColumn":16},{"ruleId":"169","severity":1,"message":"217","line":12,"column":3,"nodeType":"171","messageId":"172","endLine":12,"endColumn":10},{"ruleId":"169","severity":1,"message":"218","line":1,"column":17,"nodeType":"171","messageId":"172","endLine":1,"endColumn":25},{"ruleId":"169","severity":1,"message":"178","line":1,"column":27,"nodeType":"171","messageId":"172","endLine":1,"endColumn":36},{"ruleId":"169","severity":1,"message":"181","line":2,"column":10,"nodeType":"171","messageId":"172","endLine":2,"endColumn":32},{"ruleId":"169","severity":1,"message":"195","line":6,"column":3,"nodeType":"171","messageId":"172","endLine":6,"endColumn":12},{"ruleId":"169","severity":1,"message":"211","line":7,"column":3,"nodeType":"171","messageId":"172","endLine":7,"endColumn":7},{"ruleId":"169","severity":1,"message":"203","line":8,"column":3,"nodeType":"171","messageId":"172","endLine":8,"endColumn":9},{"ruleId":"169","severity":1,"message":"212","line":9,"column":3,"nodeType":"171","messageId":"172","endLine":9,"endColumn":9},{"ruleId":"169","severity":1,"message":"219","line":10,"column":3,"nodeType":"171","messageId":"172","endLine":10,"endColumn":14},{"ruleId":"169","severity":1,"message":"220","line":11,"column":3,"nodeType":"171","messageId":"172","endLine":11,"endColumn":12},{"ruleId":"169","severity":1,"message":"221","line":12,"column":3,"nodeType":"171","messageId":"172","endLine":12,"endColumn":8},"@typescript-eslint/no-unused-vars","'jwtDecode' is defined but never used.","Identifier","unusedVar","'Header' is defined but never used.","no-native-reassign",["222"],"no-negated-in-lhs",["223"],"'useEffect' is defined but never used.","'useMemo' is defined but never used.","'useCallback' is defined but never used.","'useIsUserLoggedInQuery' is defined but never used.","'ApolloError' is defined but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'data' is assigned a value but never used.","'client' is assigned a value but never used.","'IsUserLoggedInDocument' is defined but never used.","'IsUserLoggedInQuery' is defined but never used.","'Login' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'isMounted' is assigned a value but never used.","'Container' is defined but never used.","'Center' is defined but never used.","'useMeQuery' is defined but never used.","'isOpen' is assigned a value but never used.","'onOpen' is assigned a value but never used.","'gql' is defined but never used.","'createHttpLink' is defined but never used.","'useRef' is defined but never used.","'VStack' is defined but never used.","'LoginFrom' is defined but never used.","'RegisterFrom' is defined but never used.","'HomeProps' is defined but never used.","'date' is assigned a value but never used.","'setDate' is assigned a value but never used.","'getAccessToken' is defined but never used.","'Box' is defined but never used.","'Flex' is defined but never used.","'Button' is defined but never used.","'error' is assigned a value but never used.","'showMessage' is assigned a value but never used.","'ModalHeader' is defined but never used.","'useDisclosure' is defined but never used.","'Heading' is defined but never used.","'useState' is defined but never used.","'FormControl' is defined but never used.","'FormLabel' is defined but never used.","'Input' is defined but never used.","no-global-assign","no-unsafe-negation"]