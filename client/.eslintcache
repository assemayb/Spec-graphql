[{"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\accessToken.ts":"1","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\routes.tsx":"2","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Login.tsx":"3","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Message.tsx":"4","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\reportWebVitals.ts":"5","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Header.tsx":"6","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\generated\\graphql.tsx":"7","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Register.tsx":"8","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Header2.tsx":"9","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\index.tsx":"10","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\App.tsx":"11","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Home.tsx":"12","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Test.tsx":"13","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\LoginFrom.tsx":"14","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\RegisterForm.tsx":"15","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\Skeleton.tsx":"16","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Footer.tsx":"17","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\LinkBox.tsx":"18","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Modal.tsx":"19","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\Spinners.tsx":"20","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Profile.tsx":"21","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Topics.tsx":"22","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\theme.tsx":"23"},{"size":231,"mtime":1607976985837,"results":"24","hashOfConfig":"25"},{"size":755,"mtime":1626002465598,"results":"26","hashOfConfig":"25"},{"size":2812,"mtime":1625804871637,"results":"27","hashOfConfig":"25"},{"size":246,"mtime":1625721792159,"results":"28","hashOfConfig":"25"},{"size":425,"mtime":1607784182783,"results":"29","hashOfConfig":"25"},{"size":2262,"mtime":1625804572053,"results":"30","hashOfConfig":"25"},{"size":18406,"mtime":1626272726100,"results":"31","hashOfConfig":"25"},{"size":1661,"mtime":1625978682307,"results":"32","hashOfConfig":"25"},{"size":4653,"mtime":1626006281192,"results":"33","hashOfConfig":"25"},{"size":3681,"mtime":1626271623063,"results":"34","hashOfConfig":"25"},{"size":1143,"mtime":1625808979486,"results":"35","hashOfConfig":"25"},{"size":4406,"mtime":1626272839944,"results":"36","hashOfConfig":"25"},{"size":733,"mtime":1625978033033,"results":"37","hashOfConfig":"25"},{"size":2650,"mtime":1625978332727,"results":"38","hashOfConfig":"25"},{"size":2104,"mtime":1625977947590,"results":"39","hashOfConfig":"25"},{"size":237,"mtime":1626070254089,"results":"40","hashOfConfig":"25"},{"size":436,"mtime":1626017149513,"results":"41","hashOfConfig":"25"},{"size":712,"mtime":1625995329087,"results":"42","hashOfConfig":"25"},{"size":1565,"mtime":1625977509089,"results":"43","hashOfConfig":"25"},{"size":415,"mtime":1625819687862,"results":"44","hashOfConfig":"25"},{"size":166,"mtime":1625809384497,"results":"45","hashOfConfig":"25"},{"size":899,"mtime":1626262272994,"results":"46","hashOfConfig":"25"},{"size":203,"mtime":1626271603935,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},"11skg4y",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"54"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\accessToken.ts",["109"],"import jwtDecode from \"jwt-decode\"\r\n\r\nexport const getAccessToken = () => {\r\n    return localStorage.getItem(\"accessToken\")\r\n}\r\n\r\nexport const setAccessToken = (token: string) => {\r\n    localStorage.setItem(\"accessToken\", token)\r\n}",["110","111"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\routes.tsx",[],["112","113"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Login.tsx",["114","115","116","117","118","119","120","121","122"],"import React, { useState, useEffect, useMemo, useCallback } from 'react'\r\nimport { RouteComponentProps } from \"react-router-dom\"\r\nimport { setAccessToken } from '../accessToken'\r\nimport { Message } from '../components/Message'\r\nimport { IsUserLoggedInDocument, IsUserLoggedInQuery, MeDocument, MeQuery, useIsUserLoggedInQuery, useLoginMutation } from '../generated/graphql'\r\nimport { ApolloError } from \"@apollo/client/errors\"\r\n\r\n\r\nexport const Login: React.FC<RouteComponentProps> = ({ history }) => {\r\n\r\n    const [username, setUsername] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [showMessage, setShowMessage] = useState({\r\n        show: false,\r\n        value: \"\"\r\n    })\r\n    const [login, { data, client }] = useLoginMutation()\r\n\r\n    const loginUser = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n        e.preventDefault()\r\n        try {\r\n\r\n            const response = await login({\r\n                variables: {\r\n                    username,\r\n                    password\r\n                },\r\n                update: (cache, { data }) => {\r\n                    if (!data) {\r\n                        return null;\r\n                    }\r\n                    cache.writeQuery<MeQuery>({\r\n                        query: MeDocument,\r\n                        data: {\r\n                            me: data.loginUser?.user\r\n                        }\r\n                    })\r\n                    cache.writeQuery<IsUserLoggedInQuery>({\r\n                        query: IsUserLoggedInDocument,\r\n                        data: {\r\n                            isUserLoggedIn: true\r\n                        }\r\n                    })\r\n\r\n                },\r\n            })\r\n            if (response && response.data) {\r\n                setAccessToken(response.data.loginUser?.accessToken!)\r\n                history.push(\"/\")\r\n                setUsername(\"\")\r\n                setPassword(\"\")\r\n            }\r\n        } catch (error) {\r\n            setShowMessage({ show: true, value: error.message })\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form className=\"login-form\">\r\n                {showMessage.show && (\r\n                    <Message message={showMessage.value} />\r\n                )}\r\n                <label htmlFor=\"username\">username: </label>\r\n                <input id=\"username\" type=\"text\" value={username} onChange={e => setUsername(e.target.value)} />\r\n                <label htmlFor=\"password\">password: </label>\r\n                <input id=\"password\" type=\"password\" value={password} onChange={e => setPassword(e.target.value)} />\r\n                <button onClick={e => loginUser(e)}>Login</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Message.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\reportWebVitals.ts",[],["123","124"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Header.tsx",["125","126","127","128","129"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\generated\\graphql.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Register.tsx",["130"],"import React, { useState } from \"react\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport { useRegisterMutation } from \"../generated/graphql\";\r\n\r\nexport const Register: React.FC<RouteComponentProps> = ({}) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const [register] = useRegisterMutation();\r\n\r\n  const registerNewUser = (\r\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>\r\n  ) => {\r\n    e.preventDefault();\r\n    \r\n    if (!username || !email || !password) {\r\n      return console.log(\"enter some data\");\r\n    }\r\n    register({\r\n      variables: {\r\n        username,\r\n        email,\r\n        password,\r\n      },\r\n    }).then((response) => {\r\n      console.log(response);\r\n    });\r\n    setEmail(\"\");\r\n    setUsername(\"\");\r\n    setPassword(\"\");\r\n  };\r\n  return (\r\n    <div>\r\n      <form className=\"signup-form\">\r\n        <label htmlFor=\"username\">username: </label>\r\n        <input\r\n          id=\"username\"\r\n          type=\"text\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n        />\r\n        <label htmlFor=\"password\">password: </label>\r\n        <input\r\n          id=\"password\"\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <label htmlFor=\"email\">email: </label>\r\n        <input\r\n          type=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <button onClick={(e) => registerNewUser(e)}>Register</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Header2.tsx",["131","132","133","134","135","136","137","138"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  Flex,\r\n  Button,\r\n  useColorMode,\r\n  useDisclosure,\r\n  Center,\r\n  Box,\r\n} from \"@chakra-ui/react\";\r\nimport { MoonIcon, SunIcon } from \"@chakra-ui/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  IsUserLoggedInDocument,\r\n  IsUserLoggedInQuery,\r\n  useIsUserLoggedInQuery,\r\n  useLogoutMutation,\r\n  useMeQuery,\r\n} from \"../generated/graphql\";\r\n\r\nimport { setAccessToken } from \"../accessToken\";\r\nimport { AiFillHome, AiOutlineUser } from \"react-icons/ai\";\r\nimport { BiBookContent } from \"react-icons/bi\";\r\n\r\nimport { ModalComponent } from \"../components/Modal\";\r\nimport { LinkBox } from \"../smallComps/LinkBox\";\r\nimport { SmallSpinner } from \"../smallComps/Spinners\";\r\n\r\ninterface ProfileButtonProps {\r\n  isUserLogged: boolean;\r\n}\r\n\r\nconst ProfileButton: React.FC<ProfileButtonProps> = ({ isUserLogged }) => {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const { isOpen, onOpen, onClose } = useDisclosure({\r\n    onClose: () => setShowModal(false),\r\n    onOpen: () => console.log(\"Modal is Open\"),\r\n  });\r\n\r\n  const router = useHistory();\r\n  const handleProfileClick = () => {\r\n    if (isUserLogged === true) {\r\n      router.push(\"/profile\");\r\n    } else {\r\n      setShowModal(true);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <ModalComponent showModal={showModal} onClose={onClose} />\r\n      <Button\r\n        onClick={() => handleProfileClick()}\r\n        height=\"50%\"\r\n        fontSize=\"medium\"\r\n        fontWeight=\"bold\"\r\n        bgColor=\"green.400\"\r\n        _hover={{\r\n          bgColor: \"green.500\",\r\n        }}\r\n        mx=\"0.4rem\"\r\n      >\r\n        <AiOutlineUser width=\"40px\" />\r\n\r\n        <span style={{ marginLeft: \"4px\" }}>profile</span>\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\ninterface LogoutButtonProps extends ProfileButtonProps {}\r\nconst LogoutButton: React.FC<LogoutButtonProps> = ({ isUserLogged }) => {\r\n  const [logoutUser, { client }] = useLogoutMutation();\r\n\r\n  const handleLogout = async () => {\r\n    if (isUserLogged) {\r\n      await logoutUser({\r\n        update: (cache, _) => {\r\n          cache.writeQuery<IsUserLoggedInQuery>({\r\n            query: IsUserLoggedInDocument,\r\n            data: {\r\n              isUserLoggedIn: false,\r\n            },\r\n          });\r\n        },\r\n      });\r\n      setAccessToken(\"\");\r\n      // await client.resetStore();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Button\r\n      onClick={() => handleLogout()}\r\n      height=\"50%\"\r\n      fontSize=\"medium\"\r\n      fontWeight=\"bold\"\r\n      bgColor=\"green.400\"\r\n      _hover={{\r\n        bgColor: \"green.500\",\r\n      }}\r\n      mx=\"0.4rem\"\r\n    >\r\n      Logout\r\n    </Button>\r\n  );\r\n};\r\n\r\ninterface Header2Props {}\r\nexport const Header2: React.FC<Header2Props> = ({}) => {\r\n  // const { data, loading, error } = useMeQuery();\r\n\r\n  const currentMode = useColorMode();\r\n  const loginState = useIsUserLoggedInQuery({\r\n    fetchPolicy: \"network-only\",\r\n  });\r\n\r\n  // useEffect(() => {\r\n  //   const { called, stopPolling } = loginState;\r\n  //   console.log(called);\r\n  //   console.log(loginState.data?.isUserLoggedIn);\r\n  // }, [loginState]);\r\n\r\n  return (\r\n    <Flex\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      bgColor=\"green.200\"\r\n      height=\"80px\"\r\n      fontSize=\"xl\"\r\n      fontWeight=\"bold\"\r\n      color=\"white\"\r\n      position=\"relative\"\r\n      width=\"100%\"\r\n    >\r\n      <Flex ml=\"1rem\" position=\"absolute\" left=\"2px\">\r\n        <LinkBox route=\"Home\" icon={<AiFillHome width=\"20px\" />} />\r\n        <LinkBox route=\"topics\" icon={<BiBookContent width=\"20px\" />} />\r\n        <LinkBox route=\"test\" />\r\n      </Flex>\r\n\r\n      <Flex\r\n        marginRight=\"8px\"\r\n        height=\"100px\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        position=\"absolute\"\r\n        right=\"8px\"\r\n      >\r\n        <Button\r\n          onClick={() => currentMode.toggleColorMode()}\r\n          bgColor=\"green.400\"\r\n          _hover={{\r\n            bgColor: \"green.500\",\r\n          }}\r\n          height=\"50%\"\r\n        >\r\n          {currentMode.colorMode === \"light\" ? <MoonIcon /> : <SunIcon />}\r\n        </Button>\r\n\r\n        {loginState && loginState.loading && (\r\n          <Box marginLeft=\"5px\">\r\n            <SmallSpinner />\r\n          </Box>\r\n        )}\r\n        {loginState && !loginState.data?.isUserLoggedIn ? (\r\n          <ProfileButton isUserLogged={loginState.data?.isUserLoggedIn!} />\r\n        ) : (\r\n          <>\r\n            <ProfileButton isUserLogged={loginState.data?.isUserLoggedIn!} />\r\n            <LogoutButton isUserLogged={loginState.data?.isUserLoggedIn!} />\r\n          </>\r\n        )}\r\n      </Flex>\r\n    </Flex>\r\n  );\r\n};\r\n","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\index.tsx",["139","140"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\App.tsx",["141","142"],"import React, { useState, useEffect, useRef } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { setAccessToken } from \"./accessToken\";\n\nimport { Header2 } from \"./components/Header2\";\nimport {Footer} from \"./components/Footer\"\nimport { Skeleton } from \"./smallComps/Skeleton\";\n\nimport { useIsUserLoggedInQuery } from \"./generated/graphql\";\nimport { BaseRouter } from \"./routes\";\n\nfunction App() {\n  const [appLoading, setAppLoading] = useState(true);\n\n  useEffect(() => {\n    fetch(\"http://localhost:8000/refresh_token\", {\n      credentials: \"include\",\n      method: \"POST\",\n    }).then(async (x) => {\n      const resposne = await x.json();\n      setAccessToken(resposne.accessToken);\n      setAppLoading(false);\n    });\n  }, []);\n\n  return (\n    <div className=\"app\">\n      {appLoading ? (\n        <div>app is loading.....</div>\n      ) : (\n        <>\n          <BrowserRouter>\n            {/* <Header /> */}\n            <Header2 />\n            <Skeleton>\n              <BaseRouter />\n            </Skeleton>\n            <Footer />\n          </BrowserRouter>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Home.tsx",["143","144","145","146","147","148","149","150","151","152","153","154","155","156"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  useCreateThreadMutation,\r\n  useIsUserLoggedInQuery,\r\n  useListThreadsQuery,\r\n} from \"../generated/graphql\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport {\r\n  Box,\r\n  Container,\r\n  Flex,\r\n  VStack,\r\n  Button,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Heading,\r\n} from \"@chakra-ui/react\";\r\nimport { LoginFrom } from \"../components/LoginFrom\";\r\nimport { RegisterFrom } from \"../components/RegisterForm\";\r\n\r\nimport { FiUser, FiCalendar } from \"react-icons/fi\";\r\ninterface QuestionFormProps {}\r\nconst QuestionForm: React.FC<QuestionFormProps> = () => {\r\n  const [question, setQuestion] = useState(\"\");\r\n  const [specilization, setSpecilization] = useState(\"\");\r\n\r\n  const [createQuestion, { client, data, error, loading }] =\r\n    useCreateThreadMutation();\r\n\r\n  const submitQuestion = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    console.log(\"sbmmmmiit\");\r\n\r\n    try {\r\n      await createQuestion({\r\n        variables: {\r\n          question,\r\n          spec: specilization,\r\n        },\r\n      });\r\n    } catch (error) {\r\n      console.log(error.messge);\r\n    }\r\n  };\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\" p=\"8px\" my=\"10px\" shadow=\"base\">\r\n      <form onSubmit={(e) => submitQuestion(e)}>\r\n        <FormControl isRequired>\r\n          <FormLabel color=\"green.400\" fontWeight=\"bold\">\r\n            {\" \"}\r\n            question\r\n          </FormLabel>\r\n          <Input\r\n            type=\"text\"\r\n            value={question}\r\n            onChange={(e) => setQuestion(e.target.value)}\r\n          />\r\n        </FormControl>\r\n        <FormControl isRequired>\r\n          <FormLabel color=\"green.400\" fontWeight=\"bold\">\r\n            specilization\r\n          </FormLabel>\r\n          <Input\r\n            type=\"text\"\r\n            value={specilization}\r\n            onChange={(e) => setSpecilization(e.target.value)}\r\n          />\r\n        </FormControl>\r\n        <Button type=\"submit\" marginTop=\"12px\" marginX=\"auto\">\r\n          submit\r\n        </Button>\r\n      </form>\r\n    </Box>\r\n  );\r\n};\r\n\r\ninterface QuestionBoxProps {}\r\nconst QuestionBox: React.FC<QuestionBoxProps> = () => {\r\n  return (\r\n    <Box\r\n      pos=\"relative\"\r\n      width=\"100%\"\r\n      p=\"1rem\"\r\n      my=\"5px\"\r\n      shadow=\"inner\"\r\n      _hover={{ bgColor: \"gray.50\" }}\r\n    >\r\n      <Heading as=\"h5\" size=\"xs\" color=\"gray.300\" display=\"flex\">\r\n        <FiUser size=\"15px\" />\r\n        <Box ml=\"4px\">username</Box>\r\n      </Heading>\r\n      <Heading\r\n        as=\"h3\"\r\n        boxShadow=\"sm\"\r\n        size=\"md\"\r\n        my=\"5px\"\r\n        p=\"10px\"\r\n        cursor=\"pointer\"\r\n        _hover={{\r\n          color: \"green.500\",\r\n        }}\r\n      >\r\n        what is this question taking about?\r\n      </Heading>\r\n      <Heading\r\n        pos=\"absolute\"\r\n        right=\"20px\"\r\n        bottom=\"1px\"\r\n        color=\"gray.200\"\r\n        fontSize=\"12px\"\r\n      >\r\n        12-2-2021\r\n      </Heading>\r\n    </Box>\r\n  );\r\n};\r\n\r\ninterface HomeProps {}\r\nexport const Home: React.FC<RouteComponentProps> = ({ history, location }) => {\r\n  const [date, setDate] = useState(\"2018-07-22\");\r\n  const { data, loading, error } = useListThreadsQuery();\r\n\r\n  useEffect(() => {\r\n    if (loading) {\r\n      console.log(\"loading.....\");\r\n    }\r\n    if (data?.listThreads) {\r\n      console.log(data?.listThreads);\r\n    }\r\n  });\r\n  return (\r\n    <>\r\n      <Flex marginRight=\"auto\" marginLeft=\"auto\" marginTop=\"2rem\">\r\n        <Flex\r\n          justifyContent=\"center\"\r\n          flexDirection=\"column\"\r\n          alignItems=\"center\"\r\n          flex=\"4\"\r\n          shadow=\"base\"\r\n          p=\"0.5rem\"\r\n        >\r\n          <QuestionBox />\r\n          <QuestionBox />\r\n          <QuestionBox />\r\n          <QuestionBox />\r\n          <QuestionBox />\r\n          <QuestionBox />\r\n          <QuestionBox />\r\n          <QuestionBox />\r\n          <QuestionBox />\r\n          <QuestionBox />\r\n          <QuestionBox />\r\n          <QuestionBox />\r\n        </Flex>\r\n\r\n        <Flex\r\n          flex=\"1\"\r\n          p=\"0.5rem\"\r\n          flexDirection=\"column\"\r\n          maxH=\"auto\"\r\n          marginX=\"8px\"\r\n        >\r\n          <Box p=\"8px\" shadow=\"base\">\r\n            <Box>the filtering and display btns</Box>\r\n            <Box>the filtering and display btns</Box>\r\n          </Box>\r\n          <QuestionForm />\r\n        </Flex>\r\n      </Flex>\r\n    </>\r\n  );\r\n};\r\n","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Test.tsx",["157","158","159","160","161","162"],"import React from \"react\";\r\nimport { getAccessToken } from \"../accessToken\";\r\nimport { useUsersListQuery } from \"../generated/graphql\";\r\nimport { Box, Container, Flex, VStack, Button } from \"@chakra-ui/react\";\r\n\r\n\r\ninterface TestProps {}\r\n\r\nexport const Test: React.FC<TestProps> = () => {\r\n  const { data, error, loading } = useUsersListQuery({\r\n    fetchPolicy: \"network-only\",\r\n  });\r\n\r\n  if (loading) {\r\n    return <div>loading......</div>;\r\n  }\r\n\r\n  return (\r\n    <Container p=\"2rem\" m=\"1rem\">\r\n      <h1>Current Users:</h1>\r\n      <ul>\r\n        {data?.getAllUsers?.map((user, idx) => (\r\n          <li key={idx}>\r\n            {user.email}, {user.username}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </Container>\r\n  );\r\n};\r\n","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\LoginFrom.tsx",["163","164","165","166","167","168"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  VStack,\r\n  Button,\r\n  Center,\r\n} from \"@chakra-ui/react\";\r\nimport {\r\n  IsUserLoggedInDocument,\r\n  IsUserLoggedInQuery,\r\n  useLoginMutation,\r\n} from \"../generated/graphql\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { setAccessToken } from \"../accessToken\";\r\n\r\nexport const LoginFrom = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [showMessage, setShowMessage] = useState({\r\n    show: false,\r\n    value: \"\",\r\n  });\r\n  const [login, { data, client }] = useLoginMutation();\r\n\r\n  const history = useHistory();\r\n  const submitLoginForm = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    console.log(\"submit form\");\r\n    try {\r\n      const response = await login({\r\n        variables: {\r\n          username,\r\n          password,\r\n        },\r\n        update: (cache, { data }) => {\r\n          if (!data) {\r\n            return null;\r\n          }\r\n          // cache.writeQuery<MeQuery>({\r\n          //     query: MeDocument,\r\n          //     data: {\r\n          //         me: data.loginUser?.user\r\n          //     }\r\n          // })\r\n          cache.writeQuery<IsUserLoggedInQuery>({\r\n            query: IsUserLoggedInDocument,\r\n            data: {\r\n              isUserLoggedIn: true,\r\n            },\r\n          });\r\n        },\r\n      });\r\n      if (response && response.data) {\r\n        console.log(response.data);\r\n\r\n        setAccessToken(response.data.loginUser?.accessToken!);\r\n        history.push(\"/\");\r\n        setUsername(\"\");\r\n        setPassword(\"\");\r\n      }\r\n    } catch (error) {\r\n      setShowMessage({ show: true, value: error.message });\r\n      console.log(error);\r\n    }\r\n  };\r\n  return (\r\n    <VStack padding=\"0.4rem\" color=\"green.400\" shadow=\"xl\">\r\n      <form onSubmit={(e) => submitLoginForm(e)}>\r\n        <FormControl id=\"username\" isRequired my=\"5px\">\r\n          <FormLabel>Username</FormLabel>\r\n          <Input\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n        </FormControl>\r\n\r\n        <FormControl id=\"password\" isRequired my=\"5px\">\r\n          <FormLabel>Password</FormLabel>\r\n          <Input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </FormControl>\r\n        <Center>\r\n          <Button my=\"10px\" p=\"10px\" type=\"submit\">\r\n            login\r\n          </Button>\r\n        </Center>\r\n      </form>\r\n    </VStack>\r\n  );\r\n};\r\n","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\RegisterForm.tsx",["169"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\Skeleton.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Footer.tsx",["170"],"import React from \"react\";\r\nimport { Container, Flex } from \"@chakra-ui/react\";\r\nexport const Footer = () => {\r\n  return (\r\n    <Flex\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      p=\"1rem\"\r\n      marginTop=\"1rem\"\r\n      bgColor=\"green.300\"\r\n      fontSize=\"medium\"\r\n      fontWeight=\"bold\"\r\n      // pos=\"relative\"\r\n      width=\"100%\"\r\n      // bottom=\"1px\"\r\n    >\r\n        This is the footer\r\n    </Flex>\r\n  );\r\n};\r\n","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\LinkBox.tsx",["171","172","173"],"import React from \"react\";\r\nimport { Container, Flex, Center, Box } from \"@chakra-ui/react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ReactNode } from \"react\";\r\n\r\ninterface NavLink {\r\n  route: string;\r\n  icon?: ReactNode;\r\n}\r\n\r\nexport const LinkBox: React.FC<NavLink> = ({ route, icon }) => {\r\n  return (\r\n    <Link to={route !== \"Home\" ? route : \"/\"}>\r\n      <Box\r\n        // mx=\"0.4rem\"\r\n        _hover={{\r\n          bgColor: \"green.400\",\r\n          borderRadius: \"5px\",\r\n        }}\r\n        padding=\"1rem\"\r\n      >\r\n        <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\r\n          <Box marginRight=\"6px\">{icon}</Box> {route}\r\n        </Box>\r\n      </Box>\r\n    </Link>\r\n  );\r\n};\r\n","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Modal.tsx",["174","175","176"],"import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  ModalContent,\r\n  ModalOverlay,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  useDisclosure,\r\n  Heading,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport { LoginFrom } from \"./LoginFrom\";\r\nimport { RegisterFrom } from \"./RegisterForm\";\r\ninterface ModalComponentProps {\r\n  showModal: boolean;\r\n  onClose: () => void;\r\n}\r\n\r\nexport const ModalComponent: React.FC<ModalComponentProps> = ({\r\n  showModal,\r\n  onClose,\r\n}) => {\r\n  const [displayedForm, setDisplayedForm] = useState(\"loginForm\");\r\n  return (\r\n    <>\r\n      <Modal isOpen={showModal} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent marginTop=\"8rem\">\r\n          <ModalCloseButton />\r\n\r\n          <ModalBody margin=\"2rem\" padding=\"1rem\">\r\n            {displayedForm === \"loginForm\" ? <LoginFrom /> : <RegisterFrom />}\r\n          </ModalBody>\r\n\r\n          <ModalFooter display=\"flex\" justifyContent=\"center\">\r\n            <Button\r\n              bgColor=\"blue.200\"\r\n              textAlign=\"center\"\r\n              onClick={() => {\r\n                if (displayedForm === \"loginForm\") {\r\n                  setDisplayedForm(\"signupForm\");\r\n                } else {\r\n                  setDisplayedForm(\"loginForm\");\r\n                }\r\n              }}\r\n            >\r\n              {displayedForm === \"loginForm\"\r\n                ? \"create an account\"\r\n                : \"login to your acccount\"}\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\Spinners.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Profile.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Topics.tsx",["177","178","179","180","181","182","183","184","185","186"],"import React, { useState, useEffect, FC } from \"react\";\r\nimport { useIsUserLoggedInQuery } from \"../generated/graphql\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport {\r\n  Box,\r\n  Container,\r\n  Flex,\r\n  VStack,\r\n  Button,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Grid,\r\n} from \"@chakra-ui/react\";\r\n\r\n\r\ninterface TopicBoxProps {}\r\nconst TopicBox: FC<TopicBoxProps> = () => {\r\n    return <Box w=\"100%\" h=\"40\" bg=\"gray.300\" borderRadius=\"4px\" shadow=\"inner\" />;\r\n};\r\n\r\nexport const Topics: React.FC<RouteComponentProps> = () => {\r\n  return (\r\n    <Box p=\"1rem\" marginTop=\"2rem\">\r\n      <Grid templateColumns=\"repeat(4, 1fr)\" gap={6}>\r\n      <TopicBox ></TopicBox>\r\n      <TopicBox ></TopicBox>\r\n      <TopicBox ></TopicBox>\r\n      <TopicBox ></TopicBox>\r\n      <TopicBox ></TopicBox>\r\n      <TopicBox ></TopicBox>\r\n      <TopicBox ></TopicBox>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\theme.tsx",[],{"ruleId":"187","severity":1,"message":"188","line":1,"column":8,"nodeType":"189","messageId":"190","endLine":1,"endColumn":17},{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","replacedBy":"194"},{"ruleId":"191","replacedBy":"195"},{"ruleId":"193","replacedBy":"196"},{"ruleId":"187","severity":1,"message":"197","line":1,"column":27,"nodeType":"189","messageId":"190","endLine":1,"endColumn":36},{"ruleId":"187","severity":1,"message":"198","line":1,"column":38,"nodeType":"189","messageId":"190","endLine":1,"endColumn":45},{"ruleId":"187","severity":1,"message":"199","line":1,"column":47,"nodeType":"189","messageId":"190","endLine":1,"endColumn":58},{"ruleId":"187","severity":1,"message":"200","line":5,"column":76,"nodeType":"189","messageId":"190","endLine":5,"endColumn":98},{"ruleId":"187","severity":1,"message":"201","line":6,"column":10,"nodeType":"189","messageId":"190","endLine":6,"endColumn":21},{"ruleId":"187","severity":1,"message":"202","line":12,"column":12,"nodeType":"189","messageId":"190","endLine":12,"endColumn":17},{"ruleId":"187","severity":1,"message":"203","line":12,"column":19,"nodeType":"189","messageId":"190","endLine":12,"endColumn":27},{"ruleId":"187","severity":1,"message":"204","line":18,"column":21,"nodeType":"189","messageId":"190","endLine":18,"endColumn":25},{"ruleId":"187","severity":1,"message":"205","line":18,"column":27,"nodeType":"189","messageId":"190","endLine":18,"endColumn":33},{"ruleId":"191","replacedBy":"206"},{"ruleId":"193","replacedBy":"207"},{"ruleId":"187","severity":1,"message":"208","line":3,"column":3,"nodeType":"189","messageId":"190","endLine":3,"endColumn":25},{"ruleId":"187","severity":1,"message":"209","line":4,"column":3,"nodeType":"189","messageId":"190","endLine":4,"endColumn":22},{"ruleId":"187","severity":1,"message":"210","line":11,"column":10,"nodeType":"189","messageId":"190","endLine":11,"endColumn":15},{"ruleId":"211","severity":1,"message":"212","line":15,"column":47,"nodeType":"213","messageId":"214","endLine":15,"endColumn":49},{"ruleId":"187","severity":1,"message":"215","line":31,"column":7,"nodeType":"189","messageId":"190","endLine":31,"endColumn":16},{"ruleId":"211","severity":1,"message":"212","line":5,"column":57,"nodeType":"213","messageId":"214","endLine":5,"endColumn":59},{"ruleId":"187","severity":1,"message":"197","line":1,"column":27,"nodeType":"189","messageId":"190","endLine":1,"endColumn":36},{"ruleId":"187","severity":1,"message":"216","line":3,"column":3,"nodeType":"189","messageId":"190","endLine":3,"endColumn":12},{"ruleId":"187","severity":1,"message":"217","line":8,"column":3,"nodeType":"189","messageId":"190","endLine":8,"endColumn":9},{"ruleId":"187","severity":1,"message":"218","line":18,"column":3,"nodeType":"189","messageId":"190","endLine":18,"endColumn":13},{"ruleId":"187","severity":1,"message":"219","line":35,"column":11,"nodeType":"189","messageId":"190","endLine":35,"endColumn":17},{"ruleId":"187","severity":1,"message":"220","line":35,"column":19,"nodeType":"189","messageId":"190","endLine":35,"endColumn":25},{"ruleId":"187","severity":1,"message":"205","line":72,"column":24,"nodeType":"189","messageId":"190","endLine":72,"endColumn":30},{"ruleId":"211","severity":1,"message":"212","line":109,"column":49,"nodeType":"213","messageId":"214","endLine":109,"endColumn":51},{"ruleId":"187","severity":1,"message":"221","line":14,"column":3,"nodeType":"189","messageId":"190","endLine":14,"endColumn":6},{"ruleId":"187","severity":1,"message":"222","line":15,"column":3,"nodeType":"189","messageId":"190","endLine":15,"endColumn":17},{"ruleId":"187","severity":1,"message":"223","line":1,"column":38,"nodeType":"189","messageId":"190","endLine":1,"endColumn":44},{"ruleId":"187","severity":1,"message":"200","line":9,"column":10,"nodeType":"189","messageId":"190","endLine":9,"endColumn":32},{"ruleId":"187","severity":1,"message":"200","line":4,"column":3,"nodeType":"189","messageId":"190","endLine":4,"endColumn":25},{"ruleId":"187","severity":1,"message":"216","line":10,"column":3,"nodeType":"189","messageId":"190","endLine":10,"endColumn":12},{"ruleId":"187","severity":1,"message":"224","line":12,"column":3,"nodeType":"189","messageId":"190","endLine":12,"endColumn":9},{"ruleId":"187","severity":1,"message":"225","line":19,"column":10,"nodeType":"189","messageId":"190","endLine":19,"endColumn":19},{"ruleId":"187","severity":1,"message":"226","line":20,"column":10,"nodeType":"189","messageId":"190","endLine":20,"endColumn":22},{"ruleId":"187","severity":1,"message":"227","line":22,"column":18,"nodeType":"189","messageId":"190","endLine":22,"endColumn":28},{"ruleId":"187","severity":1,"message":"205","line":28,"column":28,"nodeType":"189","messageId":"190","endLine":28,"endColumn":34},{"ruleId":"187","severity":1,"message":"204","line":28,"column":36,"nodeType":"189","messageId":"190","endLine":28,"endColumn":40},{"ruleId":"187","severity":1,"message":"228","line":28,"column":42,"nodeType":"189","messageId":"190","endLine":28,"endColumn":47},{"ruleId":"187","severity":1,"message":"229","line":28,"column":49,"nodeType":"189","messageId":"190","endLine":28,"endColumn":56},{"ruleId":"187","severity":1,"message":"230","line":119,"column":11,"nodeType":"189","messageId":"190","endLine":119,"endColumn":20},{"ruleId":"187","severity":1,"message":"231","line":121,"column":10,"nodeType":"189","messageId":"190","endLine":121,"endColumn":14},{"ruleId":"187","severity":1,"message":"232","line":121,"column":16,"nodeType":"189","messageId":"190","endLine":121,"endColumn":23},{"ruleId":"187","severity":1,"message":"228","line":122,"column":26,"nodeType":"189","messageId":"190","endLine":122,"endColumn":31},{"ruleId":"187","severity":1,"message":"233","line":2,"column":10,"nodeType":"189","messageId":"190","endLine":2,"endColumn":24},{"ruleId":"187","severity":1,"message":"234","line":4,"column":10,"nodeType":"189","messageId":"190","endLine":4,"endColumn":13},{"ruleId":"187","severity":1,"message":"235","line":4,"column":26,"nodeType":"189","messageId":"190","endLine":4,"endColumn":30},{"ruleId":"187","severity":1,"message":"224","line":4,"column":32,"nodeType":"189","messageId":"190","endLine":4,"endColumn":38},{"ruleId":"187","severity":1,"message":"236","line":4,"column":40,"nodeType":"189","messageId":"190","endLine":4,"endColumn":46},{"ruleId":"187","severity":1,"message":"228","line":10,"column":17,"nodeType":"189","messageId":"190","endLine":10,"endColumn":22},{"ruleId":"187","severity":1,"message":"197","line":1,"column":27,"nodeType":"189","messageId":"190","endLine":1,"endColumn":36},{"ruleId":"187","severity":1,"message":"202","line":20,"column":10,"nodeType":"189","messageId":"190","endLine":20,"endColumn":15},{"ruleId":"187","severity":1,"message":"203","line":20,"column":17,"nodeType":"189","messageId":"190","endLine":20,"endColumn":25},{"ruleId":"187","severity":1,"message":"237","line":22,"column":10,"nodeType":"189","messageId":"190","endLine":22,"endColumn":21},{"ruleId":"187","severity":1,"message":"204","line":26,"column":19,"nodeType":"189","messageId":"190","endLine":26,"endColumn":23},{"ruleId":"187","severity":1,"message":"205","line":26,"column":25,"nodeType":"189","messageId":"190","endLine":26,"endColumn":31},{"ruleId":"187","severity":1,"message":"197","line":1,"column":27,"nodeType":"189","messageId":"190","endLine":1,"endColumn":36},{"ruleId":"187","severity":1,"message":"216","line":2,"column":10,"nodeType":"189","messageId":"190","endLine":2,"endColumn":19},{"ruleId":"187","severity":1,"message":"216","line":2,"column":10,"nodeType":"189","messageId":"190","endLine":2,"endColumn":19},{"ruleId":"187","severity":1,"message":"235","line":2,"column":21,"nodeType":"189","messageId":"190","endLine":2,"endColumn":25},{"ruleId":"187","severity":1,"message":"217","line":2,"column":27,"nodeType":"189","messageId":"190","endLine":2,"endColumn":33},{"ruleId":"187","severity":1,"message":"238","line":9,"column":3,"nodeType":"189","messageId":"190","endLine":9,"endColumn":14},{"ruleId":"187","severity":1,"message":"239","line":11,"column":3,"nodeType":"189","messageId":"190","endLine":11,"endColumn":16},{"ruleId":"187","severity":1,"message":"240","line":12,"column":3,"nodeType":"189","messageId":"190","endLine":12,"endColumn":10},{"ruleId":"187","severity":1,"message":"241","line":1,"column":17,"nodeType":"189","messageId":"190","endLine":1,"endColumn":25},{"ruleId":"187","severity":1,"message":"197","line":1,"column":27,"nodeType":"189","messageId":"190","endLine":1,"endColumn":36},{"ruleId":"187","severity":1,"message":"200","line":2,"column":10,"nodeType":"189","messageId":"190","endLine":2,"endColumn":32},{"ruleId":"187","severity":1,"message":"216","line":6,"column":3,"nodeType":"189","messageId":"190","endLine":6,"endColumn":12},{"ruleId":"187","severity":1,"message":"235","line":7,"column":3,"nodeType":"189","messageId":"190","endLine":7,"endColumn":7},{"ruleId":"187","severity":1,"message":"224","line":8,"column":3,"nodeType":"189","messageId":"190","endLine":8,"endColumn":9},{"ruleId":"187","severity":1,"message":"236","line":9,"column":3,"nodeType":"189","messageId":"190","endLine":9,"endColumn":9},{"ruleId":"187","severity":1,"message":"242","line":10,"column":3,"nodeType":"189","messageId":"190","endLine":10,"endColumn":14},{"ruleId":"187","severity":1,"message":"243","line":11,"column":3,"nodeType":"189","messageId":"190","endLine":11,"endColumn":12},{"ruleId":"187","severity":1,"message":"244","line":12,"column":3,"nodeType":"189","messageId":"190","endLine":12,"endColumn":8},"@typescript-eslint/no-unused-vars","'jwtDecode' is defined but never used.","Identifier","unusedVar","no-native-reassign",["245"],"no-negated-in-lhs",["246"],["245"],["246"],"'useEffect' is defined but never used.","'useMemo' is defined but never used.","'useCallback' is defined but never used.","'useIsUserLoggedInQuery' is defined but never used.","'ApolloError' is defined but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'data' is assigned a value but never used.","'client' is assigned a value but never used.",["245"],["246"],"'IsUserLoggedInDocument' is defined but never used.","'IsUserLoggedInQuery' is defined but never used.","'Login' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'isMounted' is assigned a value but never used.","'Container' is defined but never used.","'Center' is defined but never used.","'useMeQuery' is defined but never used.","'isOpen' is assigned a value but never used.","'onOpen' is assigned a value but never used.","'gql' is defined but never used.","'createHttpLink' is defined but never used.","'useRef' is defined but never used.","'VStack' is defined but never used.","'LoginFrom' is defined but never used.","'RegisterFrom' is defined but never used.","'FiCalendar' is defined but never used.","'error' is assigned a value but never used.","'loading' is assigned a value but never used.","'HomeProps' is defined but never used.","'date' is assigned a value but never used.","'setDate' is assigned a value but never used.","'getAccessToken' is defined but never used.","'Box' is defined but never used.","'Flex' is defined but never used.","'Button' is defined but never used.","'showMessage' is assigned a value but never used.","'ModalHeader' is defined but never used.","'useDisclosure' is defined but never used.","'Heading' is defined but never used.","'useState' is defined but never used.","'FormControl' is defined but never used.","'FormLabel' is defined but never used.","'Input' is defined but never used.","no-global-assign","no-unsafe-negation"]