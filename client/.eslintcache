[{"F:\\stuff\\code\\NewSpec\\client\\src\\App.tsx":"1","F:\\stuff\\code\\NewSpec\\client\\src\\index.tsx":"2","F:\\stuff\\code\\NewSpec\\client\\src\\reportWebVitals.ts":"3","F:\\stuff\\code\\NewSpec\\client\\src\\generated\\graphql.tsx":"4","F:\\stuff\\code\\NewSpec\\client\\src\\routes.tsx":"5","F:\\stuff\\code\\NewSpec\\client\\src\\pages\\Register.tsx":"6","F:\\stuff\\code\\NewSpec\\client\\src\\pages\\Home.tsx":"7","F:\\stuff\\code\\NewSpec\\client\\src\\pages\\Test.tsx":"8","F:\\stuff\\code\\NewSpec\\client\\src\\pages\\Login.tsx":"9","F:\\stuff\\code\\NewSpec\\client\\src\\components\\Header.tsx":"10","F:\\stuff\\code\\NewSpec\\client\\src\\accessToken.ts":"11"},{"size":1047,"mtime":1608141113950,"results":"12","hashOfConfig":"13"},{"size":2740,"mtime":1607976970721,"results":"14","hashOfConfig":"13"},{"size":425,"mtime":1607784182783,"results":"15","hashOfConfig":"13"},{"size":11403,"mtime":1607961231645,"results":"16","hashOfConfig":"13"},{"size":698,"mtime":1607961665852,"results":"17","hashOfConfig":"13"},{"size":1752,"mtime":1607878239773,"results":"18","hashOfConfig":"13"},{"size":220,"mtime":1607877591089,"results":"19","hashOfConfig":"13"},{"size":743,"mtime":1608140112951,"results":"20","hashOfConfig":"13"},{"size":2251,"mtime":1607977692539,"results":"21","hashOfConfig":"13"},{"size":686,"mtime":1607975285698,"results":"22","hashOfConfig":"13"},{"size":231,"mtime":1607976985837,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1a8898h",{"filePath":"26","messages":"27","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},"F:\\stuff\\code\\NewSpec\\client\\src\\App.tsx",["51","52","53","54"],"F:\\stuff\\code\\NewSpec\\client\\src\\index.tsx",["55","56","57","58"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport {\n  ApolloProvider, ApolloClient, InMemoryCache, gql, createHttpLink,\n  HttpLink, ApolloLink, Observable, concat, from\n} from '@apollo/client';\nimport { onError } from '@apollo/client/link/error';\nimport { TokenRefreshLink } from \"apollo-link-token-refresh\"\nimport jwtDecode from \"jwt-decode\";\n\nimport { getAccessToken, setAccessToken } from './accessToken';\n\n// import { onError } from '@apollo/client/link/error';\n\n// const link = createHttpLink({\n//   uri: 'http://localhost:8000/graphql',\n//   // useGETForQueries: true,\n//   credentials: 'include'\n// })\nconst cache = new InMemoryCache()\nconst httpLink = new HttpLink({\n  uri: 'http://localhost:8000/graphql',\n  credentials: 'include'\n})\nconst authMiddlewareLink = new ApolloLink((operation, forward) => {\n  const accessToken = getAccessToken()\n  operation.setContext({\n    headers: {\n      authorization: `Bearer ${accessToken}`,\n    },\n  })\n  return forward(operation);\n});\n\nconst tokenRefreshLink = new TokenRefreshLink({\n  accessTokenField: \"accessToken\",\n  isTokenValidOrUndefined: () => {\n    const token = getAccessToken();\n    if (!token) {\n      return true;\n    }\n    try {\n      const tokenDecoded: any = jwtDecode(token);\n      const expDate: number = tokenDecoded.exp\n\n      if (Date.now() >= expDate * 1000) {\n        return false;\n      } else {\n        return true;\n      }\n    } catch {\n      return false;\n    }\n  },\n  fetchAccessToken: () => {\n    return fetch(\"http://localhost:8000/refresh_token\", {\n      method: \"POST\",\n      credentials: \"include\"\n    });\n  },\n  handleFetch: accessToken => {\n    setAccessToken(accessToken);\n  },\n  handleError: err => {\n    console.warn(\"Your refresh token is invalid. Try to relogin\");\n    console.error(err);\n  }\n})\n\n\nexport const client = new ApolloClient(\n  {\n    cache,\n    link: from([\n      tokenRefreshLink,\n      onError(({ graphQLErrors, networkError }) => {\n        console.log(graphQLErrors);\n        console.log(networkError);\n      }),\n      authMiddlewareLink,\n      httpLink,\n    ])\n  });\n\n\n// client\n//   .query({\n//     query: gql`\n//      query {\n//       hello\n//      }\n//     `\n//   })\n//   .then(result => console.log(result.data));\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","F:\\stuff\\code\\NewSpec\\client\\src\\reportWebVitals.ts",[],["59","60"],"F:\\stuff\\code\\NewSpec\\client\\src\\generated\\graphql.tsx",[],"F:\\stuff\\code\\NewSpec\\client\\src\\routes.tsx",[],"F:\\stuff\\code\\NewSpec\\client\\src\\pages\\Register.tsx",["61"],"F:\\stuff\\code\\NewSpec\\client\\src\\pages\\Home.tsx",["62"],"import React from 'react'\r\n\r\ninterface HomeProps {\r\n\r\n}\r\n\r\nexport const Home: React.FC<HomeProps> = ({ }) => {\r\n    return (\r\n        <div>\r\n            <h1>hey there this is the home page</h1>\r\n        </div>\r\n    );\r\n}","F:\\stuff\\code\\NewSpec\\client\\src\\pages\\Test.tsx",["63","64"],"F:\\stuff\\code\\NewSpec\\client\\src\\pages\\Login.tsx",["65","66","67"],"F:\\stuff\\code\\NewSpec\\client\\src\\components\\Header.tsx",["68","69","70","71"],"F:\\stuff\\code\\NewSpec\\client\\src\\accessToken.ts",["72"],"import jwtDecode from \"jwt-decode\"\r\n\r\nexport const getAccessToken = () => {\r\n    return localStorage.getItem(\"accessToken\")\r\n}\r\n\r\nexport const setAccessToken = (token: string) => {\r\n    localStorage.setItem(\"accessToken\", token)\r\n}",["73","74"],{"ruleId":"75","severity":1,"message":"76","line":5,"column":10,"nodeType":"77","messageId":"78","endLine":5,"endColumn":23},{"ruleId":"75","severity":1,"message":"79","line":5,"column":25,"nodeType":"77","messageId":"78","endLine":5,"endColumn":42},{"ruleId":"75","severity":1,"message":"80","line":7,"column":8,"nodeType":"77","messageId":"78","endLine":7,"endColumn":17},{"ruleId":"75","severity":1,"message":"81","line":11,"column":10,"nodeType":"77","messageId":"78","endLine":11,"endColumn":17},{"ruleId":"75","severity":1,"message":"82","line":8,"column":48,"nodeType":"77","messageId":"78","endLine":8,"endColumn":51},{"ruleId":"75","severity":1,"message":"83","line":8,"column":53,"nodeType":"77","messageId":"78","endLine":8,"endColumn":67},{"ruleId":"75","severity":1,"message":"84","line":9,"column":25,"nodeType":"77","messageId":"78","endLine":9,"endColumn":35},{"ruleId":"75","severity":1,"message":"85","line":9,"column":37,"nodeType":"77","messageId":"78","endLine":9,"endColumn":43},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":6,"column":57,"nodeType":"92","messageId":"93","endLine":6,"endColumn":60},{"ruleId":"90","severity":1,"message":"91","line":7,"column":43,"nodeType":"92","messageId":"93","endLine":7,"endColumn":46},{"ruleId":"75","severity":1,"message":"94","line":2,"column":10,"nodeType":"77","messageId":"78","endLine":2,"endColumn":24},{"ruleId":"75","severity":1,"message":"95","line":10,"column":19,"nodeType":"77","messageId":"78","endLine":10,"endColumn":24},{"ruleId":"90","severity":1,"message":"91","line":8,"column":54,"nodeType":"92","messageId":"93","endLine":8,"endColumn":57},{"ruleId":"75","severity":1,"message":"96","line":10,"column":12,"nodeType":"77","messageId":"78","endLine":10,"endColumn":17},{"ruleId":"75","severity":1,"message":"97","line":10,"column":19,"nodeType":"77","messageId":"78","endLine":10,"endColumn":27},{"ruleId":"75","severity":1,"message":"82","line":3,"column":9,"nodeType":"77","messageId":"78","endLine":3,"endColumn":12},{"ruleId":"75","severity":1,"message":"98","line":3,"column":14,"nodeType":"77","messageId":"78","endLine":3,"endColumn":22},{"ruleId":"90","severity":1,"message":"91","line":9,"column":47,"nodeType":"92","messageId":"93","endLine":9,"endColumn":50},{"ruleId":"75","severity":1,"message":"95","line":10,"column":19,"nodeType":"77","messageId":"78","endLine":10,"endColumn":24},{"ruleId":"75","severity":1,"message":"80","line":1,"column":8,"nodeType":"77","messageId":"78","endLine":1,"endColumn":17},{"ruleId":"86","replacedBy":"99"},{"ruleId":"88","replacedBy":"100"},"@typescript-eslint/no-unused-vars","'useHelloQuery' is defined but never used.","Identifier","unusedVar","'useUsersListQuery' is defined but never used.","'jwtDecode' is defined but never used.","'loading' is assigned a value but never used.","'gql' is defined but never used.","'createHttpLink' is defined but never used.","'Observable' is defined but never used.","'concat' is defined but never used.","no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'getAccessToken' is defined but never used.","'error' is assigned a value but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'useQuery' is defined but never used.",["101"],["102"],"no-global-assign","no-unsafe-negation"]