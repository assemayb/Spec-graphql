[{"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\accessToken.ts":"1","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\routes.tsx":"2","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Login.tsx":"3","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Message.tsx":"4","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\reportWebVitals.ts":"5","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\generated\\graphql.tsx":"6","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Register.tsx":"7","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Header2.tsx":"8","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\index.tsx":"9","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\App.tsx":"10","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Home.tsx":"11","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Test.tsx":"12","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\LoginFrom.tsx":"13","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\RegisterForm.tsx":"14","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\Skeleton.tsx":"15","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Footer.tsx":"16","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\LinkBox.tsx":"17","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Modal.tsx":"18","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\Spinners.tsx":"19","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Profile.tsx":"20","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Topics.tsx":"21","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\theme.tsx":"22","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\QuestionForm.tsx":"23","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\QuestionBox.tsx":"24","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\SortBtn.tsx":"25","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\ProfileModal.tsx":"26","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\InteractionsSection.tsx":"27","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\OptionsPopover.tsx":"28","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\SignleTopicPage.tsx":"29"},{"size":231,"mtime":1607976985837,"results":"30","hashOfConfig":"31"},{"size":885,"mtime":1627073131241,"results":"32","hashOfConfig":"31"},{"size":2848,"mtime":1627078808958,"results":"33","hashOfConfig":"31"},{"size":246,"mtime":1625721792159,"results":"34","hashOfConfig":"31"},{"size":425,"mtime":1607784182783,"results":"35","hashOfConfig":"31"},{"size":26085,"mtime":1627078596809,"results":"36","hashOfConfig":"31"},{"size":1661,"mtime":1625978682307,"results":"37","hashOfConfig":"31"},{"size":4746,"mtime":1627079094641,"results":"38","hashOfConfig":"31"},{"size":3470,"mtime":1626530353730,"results":"39","hashOfConfig":"31"},{"size":1382,"mtime":1627078933640,"results":"40","hashOfConfig":"31"},{"size":3616,"mtime":1627079247778,"results":"41","hashOfConfig":"31"},{"size":647,"mtime":1627079266812,"results":"42","hashOfConfig":"31"},{"size":2642,"mtime":1627078775257,"results":"43","hashOfConfig":"31"},{"size":4088,"mtime":1627078789007,"results":"44","hashOfConfig":"31"},{"size":237,"mtime":1626070254089,"results":"45","hashOfConfig":"31"},{"size":426,"mtime":1626443446668,"results":"46","hashOfConfig":"31"},{"size":729,"mtime":1627073282317,"results":"47","hashOfConfig":"31"},{"size":1567,"mtime":1626446748611,"results":"48","hashOfConfig":"31"},{"size":382,"mtime":1626377368932,"results":"49","hashOfConfig":"31"},{"size":3224,"mtime":1627078853939,"results":"50","hashOfConfig":"31"},{"size":2557,"mtime":1627078832959,"results":"51","hashOfConfig":"31"},{"size":244,"mtime":1626435092133,"results":"52","hashOfConfig":"31"},{"size":3662,"mtime":1627078815703,"results":"53","hashOfConfig":"31"},{"size":3322,"mtime":1627072168165,"results":"54","hashOfConfig":"31"},{"size":489,"mtime":1626812343616,"results":"55","hashOfConfig":"31"},{"size":821,"mtime":1626877042325,"results":"56","hashOfConfig":"31"},{"size":666,"mtime":1627070945379,"results":"57","hashOfConfig":"31"},{"size":1720,"mtime":1627078864692,"results":"58","hashOfConfig":"31"},{"size":318,"mtime":1627072962219,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},"11skg4y",{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"79"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"63"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"79"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"63"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"63"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"63"},"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\accessToken.ts",["133"],"import jwtDecode from \"jwt-decode\"\r\n\r\nexport const getAccessToken = () => {\r\n    return localStorage.getItem(\"accessToken\")\r\n}\r\n\r\nexport const setAccessToken = (token: string) => {\r\n    localStorage.setItem(\"accessToken\", token)\r\n}",["134","135"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\routes.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Login.tsx",["136","137","138","139","140","141","142","143","144","145","146","147","148"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Message.tsx",[],["149","150"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\reportWebVitals.ts",[],["151","152"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\generated\\graphql.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Register.tsx",["153"],"import React, { useState } from \"react\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport { useRegisterMutation } from \"../generated/graphql\";\r\n\r\nexport const Register: React.FC<RouteComponentProps> = ({}) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const [register] = useRegisterMutation();\r\n\r\n  const registerNewUser = (\r\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>\r\n  ) => {\r\n    e.preventDefault();\r\n    \r\n    if (!username || !email || !password) {\r\n      return console.log(\"enter some data\");\r\n    }\r\n    register({\r\n      variables: {\r\n        username,\r\n        email,\r\n        password,\r\n      },\r\n    }).then((response) => {\r\n      console.log(response);\r\n    });\r\n    setEmail(\"\");\r\n    setUsername(\"\");\r\n    setPassword(\"\");\r\n  };\r\n  return (\r\n    <div>\r\n      <form className=\"signup-form\">\r\n        <label htmlFor=\"username\">username: </label>\r\n        <input\r\n          id=\"username\"\r\n          type=\"text\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n        />\r\n        <label htmlFor=\"password\">password: </label>\r\n        <input\r\n          id=\"password\"\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <label htmlFor=\"email\">email: </label>\r\n        <input\r\n          type=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <button onClick={(e) => registerNewUser(e)}>Register</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n",["154","155"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Header2.tsx",["156","157","158","159","160","161","162","163","164","165"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\index.tsx",["166","167"],"import \"./index.css\";\nimport App from \"./App\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport {theme} from \"./theme\"\n\n\nimport {\n  ApolloProvider,\n  ApolloClient,\n  InMemoryCache,\n  gql,\n  createHttpLink,\n  HttpLink,\n  ApolloLink,\n  Observable,\n} from \"@apollo/client\";\nimport { onError } from \"@apollo/client/link/error\";\nimport { TokenRefreshLink } from \"apollo-link-token-refresh\";\nimport jwtDecode from \"jwt-decode\";\n\nimport { getAccessToken, setAccessToken } from \"./accessToken\";\n\n// import { onError } from '@apollo/client/link/error';\n\n// const authMiddlewareLink = new ApolloLink((operation, forward) => {\n//   const accessToken = getAccessToken()\n//   operation.setContext({\n//     headers: {\n//       authorization: `Bearer ${accessToken}`,\n//     },\n//   })\n//   return forward(operation);\n// });\n\nconst cache = new InMemoryCache();\nconst httpLink = new HttpLink({\n  uri: \"http://localhost:8000/graphql\",\n  credentials: \"include\",\n});\n\nconst requestLink = new ApolloLink(\n  (operation, forward) =>\n    new Observable((observer) => {\n      let handle: any;\n      Promise.resolve(operation)\n        .then((operation) => {\n          const accessToken = getAccessToken();\n          if (accessToken) {\n            operation.setContext({\n              headers: {\n                authorization: `Bearer ${accessToken}`,\n              },\n            });\n          }\n        })\n        .then(() => {\n          handle = forward(operation).subscribe({\n            next: observer.next.bind(observer),\n            error: observer.error.bind(observer),\n            complete: observer.complete.bind(observer),\n          });\n        })\n        .catch(observer.error.bind(observer));\n\n      return () => {\n        if (handle) handle.unsubscribe();\n      };\n    })\n);\n\nconst tokenRefreshLink = new TokenRefreshLink({\n  accessTokenField: \"accessToken\",\n  isTokenValidOrUndefined: () => {\n    const token = getAccessToken();\n    if (!token) {\n      return true;\n    }\n    try {\n      const tokenDecoded: any = jwtDecode(token);\n      const expDate: number = tokenDecoded.exp;\n      if (Date.now() >= expDate * 1000) {\n        return false;\n      } else {\n        return true;\n      }\n    } catch {\n      return false;\n    }\n  },\n  fetchAccessToken: () => {\n    return fetch(\"http://localhost:8000/refresh_token\", {\n      method: \"POST\",\n      credentials: \"include\",\n    });\n  },\n  handleFetch: (accessToken) => {\n    setAccessToken(accessToken);\n  },\n  handleError: (err) => {\n    console.warn(\"Your refresh token is invalid. Try to relogin\");\n    console.error(err);\n  },\n});\n\nexport const client = new ApolloClient({\n  cache,\n\n  link: ApolloLink.from([\n    onError(({ graphQLErrors, networkError }) => {\n      if (graphQLErrors) {\n        graphQLErrors.map(({ message, locations, path }) =>\n          console.log(\n            `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`\n          )\n        );\n      }\n\n      if (networkError) {\n        console.log(`[Network error]: ${networkError}`);\n      }\n    }),\n    tokenRefreshLink,\n    requestLink,\n    httpLink,\n  ]),\n});\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider theme={theme}>\n      <ApolloProvider client={client}>\n        <App />\n      </ApolloProvider>\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n\nreportWebVitals();\n","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\App.tsx",["168","169","170"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Home.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Test.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\LoginFrom.tsx",["171","172","173","174","175"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\RegisterForm.tsx",["176"],"import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport {\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Container,\r\n  Button,\r\n  Center,\r\n  Switch,\r\n  Select,\r\n} from \"@chakra-ui/react\";\r\nimport { useRegisterMutation } from \"../generated/graphql\";\r\nimport { topicsQuery } from \"../pages/Topics\";\r\n\r\ninterface RegisterFromProps {}\r\n\r\nexport const RegisterFrom: React.FC<RegisterFromProps> = () => {\r\n  const { data } = useQuery(topicsQuery);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const [specOptions, setSpecOptions] = useState({\r\n    showField: false,\r\n    fieldValue: \"\",\r\n  });\r\n\r\n  const [register] = useRegisterMutation({});\r\n  const submitRegisterForm = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    if (!username || !email || !password) {\r\n      return console.log(\"enter some data\");\r\n    }\r\n    const isUserSpec = specOptions.showField!;\r\n    const spec = specOptions.fieldValue!;\r\n    register({\r\n      variables: {\r\n        username,\r\n        email,\r\n        password,\r\n        isSpec: isUserSpec,\r\n        spec,\r\n      },\r\n    }).then((response) => {\r\n      console.log(response);\r\n    });\r\n    setEmail(\"\");\r\n    setUsername(\"\");\r\n    setPassword(\"\");\r\n  };\r\n  return (\r\n    <Container padding=\"0.4rem\" color=\"green.600\">\r\n      <form onSubmit={(e) => submitRegisterForm(e)}>\r\n        <FormControl id=\"username\" isRequired my=\"5px\" mx=\"2px\">\r\n          <FormLabel>username</FormLabel>\r\n          <Input\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n        </FormControl>\r\n\r\n        <FormControl id=\"email\" isRequired my=\"5px\">\r\n          <FormLabel>email</FormLabel>\r\n          <Input value={email} onChange={(e) => setEmail(e.target.value)} />\r\n        </FormControl>\r\n\r\n        <FormControl id=\"password\" isRequired my=\"5px\">\r\n          <FormLabel>password</FormLabel>\r\n          <Input\r\n            value={password}\r\n            type=\"password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </FormControl>\r\n        {specOptions.showField === true && (\r\n          <FormControl id=\"spec-value\" isRequired my=\"5px\">\r\n            <FormLabel>specialization</FormLabel>\r\n            <Select\r\n              onChange={(e) =>\r\n                setSpecOptions((value) => {\r\n                  return {\r\n                    ...value,\r\n                    fieldValue: e.target.value,\r\n                  };\r\n                })}\r\n              fontSize=\"16px\"\r\n              defaultValue={\"disabled\"}\r\n              name=\"topic\"\r\n              variant=\"flushed\"\r\n            >\r\n              <option value=\"disabled\" disabled>\r\n                choose a topic\r\n              </option>\r\n              {data.listTopics &&\r\n                data.listTopics.map((topic: string, idx: number) => (\r\n                  <option key={idx} value={topic}>\r\n                    {topic}\r\n                  </option>\r\n                ))}\r\n            </Select>\r\n            {/* <Input\r\n              value={specOptions.fieldValue}\r\n              onChange={(e) =>\r\n                setSpecOptions((value) => {\r\n                  return {\r\n                    ...value,\r\n                    fieldValue: e.target.value,\r\n                  };\r\n                })\r\n              }\r\n            /> */}\r\n          </FormControl>\r\n        )}\r\n        <FormControl display=\"flex\" alignItems=\"center\" my=\"5px\">\r\n          <FormLabel htmlFor=\"email-alerts\" mb=\"0\">\r\n            Creating a specialist account?\r\n          </FormLabel>\r\n          <Switch\r\n            onChange={(e) =>\r\n              setSpecOptions((value) => {\r\n                return { ...value, showField: !value.showField };\r\n              })\r\n            }\r\n          />\r\n        </FormControl>\r\n\r\n        <Center>\r\n          <Button my=\"10px\" p=\"10px\" type=\"submit\">\r\n            register\r\n          </Button>\r\n        </Center>\r\n      </form>\r\n    </Container>\r\n  );\r\n};\r\n","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\Skeleton.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Footer.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\LinkBox.tsx",["177","178","179"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Modal.tsx",["180","181","182","183"],"import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  ModalContent,\r\n  ModalOverlay,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  useDisclosure,\r\n  Heading,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport { LoginFrom } from \"./LoginFrom\";\r\nimport { RegisterFrom } from \"./RegisterForm\";\r\ninterface ModalComponentProps {\r\n  showModal: boolean;\r\n  onClose: () => void;\r\n}\r\n\r\nexport const ModalComponent: React.FC<ModalComponentProps> = ({\r\n  showModal,\r\n  onClose,\r\n}) => {\r\n  const [displayedForm, setDisplayedForm] = useState(\"loginForm\");\r\n  return (\r\n    <>\r\n      <Modal isOpen={showModal} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent marginTop=\"8rem\">\r\n          <ModalCloseButton />\r\n\r\n          <ModalBody margin=\"1rem\">\r\n            {displayedForm === \"loginForm\" ? <LoginFrom /> : <RegisterFrom />}\r\n          </ModalBody>\r\n\r\n          {/* <ModalFooter display=\"flex\" justifyContent=\"center\"> */}\r\n            <Button\r\n              bgColor=\"green.200\"\r\n              textAlign=\"center\"\r\n              onClick={() => {\r\n                if (displayedForm === \"loginForm\") {\r\n                  setDisplayedForm(\"signupForm\");\r\n                } else {\r\n                  setDisplayedForm(\"loginForm\");\r\n                }\r\n              }}\r\n            >\r\n              {displayedForm === \"loginForm\"\r\n                ? \"create an account\"\r\n                : \"login to your acccount\"}\r\n            </Button>\r\n          {/* </ModalFooter> */}\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\Spinners.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Profile.tsx",["184","185","186","187","188","189"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Topics.tsx",["190","191","192","193","194","195","196","197","198"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\theme.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\QuestionForm.tsx",["199"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  ListThreadsQuery,\r\n  useCreateThreadMutation,\r\n  useIsUserLoggedInQuery,\r\n} from \"../generated/graphql\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  FormControl,\r\n  FormLabel,\r\n  Heading,\r\n  Input,\r\n  Select,\r\n} from \"@chakra-ui/react\";\r\nimport { ApolloQueryResult } from \"@apollo/client\";\r\nimport { AiFillEdit } from \"react-icons/ai\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { topicsQuery } from \"../pages/Topics\";\r\ninterface QuestionFormProps {\r\n  refetch?: () => Promise<ApolloQueryResult<ListThreadsQuery>>;\r\n  clickedFromProfilePage?: boolean;\r\n}\r\nexport const QuestionForm: React.FC<QuestionFormProps> = ({\r\n  refetch,\r\n  clickedFromProfilePage,\r\n}) => {\r\n  const [question, setQuestion] = useState(\"\");\r\n  const [specilization, setSpecilization] = useState(\"\");\r\n\r\n  const { data } = useQuery(topicsQuery);\r\n  const [topicsArr, setTopicsArr] = useState([]);\r\n  useEffect(() => {\r\n    setTopicsArr(data?.listTopics);\r\n  }, [data]);\r\n\r\n  const [createQuestion] = useCreateThreadMutation();\r\n  const userLogginData = useIsUserLoggedInQuery();\r\n  const submitQuestion = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    try {\r\n      await createQuestion({\r\n        variables: {\r\n          question,\r\n          spec: specilization,\r\n        },\r\n      });\r\n      if (refetch !== undefined) {\r\n        refetch();\r\n      }\r\n    } catch (error) {\r\n      console.log(error.messge);\r\n    }\r\n  };\r\n  return (\r\n    <Box>\r\n      <Heading\r\n        as=\"h3\"\r\n        fontSize=\"20px\"\r\n        textAlign=\"center\"\r\n        textColor=\"gray.400\"\r\n        marginBottom=\"4px\"\r\n      >\r\n        {/* <AiFillEdit size=\"15px\"/> */}\r\n        Create Thread\r\n      </Heading>\r\n\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        p=\"1rem\"\r\n        my=\"10px\"\r\n        // bgColor=\"gray.50\"\r\n\r\n        shadow={clickedFromProfilePage ? \"\" : \"md\"}\r\n        textAlign=\"center\"\r\n      >\r\n        <form onSubmit={(e) => submitQuestion(e)}>\r\n          <FormControl isRequired>\r\n            <FormLabel color=\"green.400\" fontWeight=\"bold\">\r\n              {\" \"}\r\n              question\r\n            </FormLabel>\r\n            <Input\r\n              borderRadius=\"-10px\"\r\n              type=\"text\"\r\n              value={question}\r\n              onChange={(e) => setQuestion(e.target.value)}\r\n            />\r\n          </FormControl>\r\n          <FormControl isRequired>\r\n            <FormLabel color=\"green.400\" fontWeight=\"bold\">\r\n              specilization\r\n            </FormLabel>\r\n            <Select\r\n              onChange={(e) => setSpecilization(e.target.value)}\r\n              fontSize=\"16px\"\r\n              defaultValue={\"disabled\"}\r\n              name=\"topic\"\r\n              variant=\"flushed\"\r\n            >\r\n              <option value=\"disabled\" disabled>\r\n                choose a topic\r\n              </option>\r\n              {topicsArr && topicsArr.map((topic, idx) => (\r\n                <option key={idx} value={topic} >\r\n                  {topic}\r\n                </option>\r\n              ))}\r\n            </Select>\r\n            {/* <Input\r\n              borderRadius=\"-10px\"\r\n              type=\"text\"\r\n              value={specilization}\r\n              onChange={(e) => setSpecilization(e.target.value)}\r\n            /> */}\r\n          </FormControl>\r\n          <Button\r\n            isDisabled={!userLogginData.data?.isUserLoggedIn}\r\n            type=\"submit\"\r\n            borderRadius=\"-20px\"\r\n            marginTop=\"12px\"\r\n            marginX=\"auto\"\r\n          >\r\n            submit\r\n          </Button>\r\n        </form>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\QuestionBox.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\SortBtn.tsx",["200","201","202","203"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Box, Divider, Flex } from \"@chakra-ui/react\";\r\n\r\n\r\n\r\nexport const SortBtn: React.FC = ({ children }) => {\r\n  return (\r\n    <Box\r\n      textAlign=\"center\"\r\n      p=\"0.8rem\"\r\n      bgColor=\"green.300\"\r\n      color=\"Window\"\r\n      borderRadius=\"-10px\"\r\n      fontWeight=\"bold\"\r\n      cursor=\"pointer\"\r\n      _hover={{\r\n        bgColor: \"green.500\",\r\n      }}\r\n      marginY=\"3px\"\r\n    >\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n",["204","205"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\ProfileModal.tsx",["206","207","208","209","210"],"import React from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  ModalContent,\r\n  ModalOverlay,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  useDisclosure,\r\n  Heading,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport {QuestionForm} from \"../smallComps/QuestionForm\"\r\n\r\ninterface ProfileModalProps {\r\n  showModal: boolean;\r\n  onClose: () => void;\r\n}\r\n\r\nexport const ProfileModal: React.FC<ProfileModalProps> = ({\r\n    onClose,\r\n    showModal\r\n }) => {\r\n\r\n  return (\r\n    <>\r\n      <Modal isOpen={showModal} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent marginTop=\"8rem\">\r\n          <ModalCloseButton />\r\n\r\n          <ModalBody margin=\"1rem\">\r\n                <QuestionForm clickedFromProfilePage={true}/>\r\n          </ModalBody>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\InteractionsSection.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\OptionsPopover.tsx",["211"],"import React from \"react\";\r\n\r\nimport {\r\n  Flex,\r\n  Popover,\r\n  PopoverTrigger,\r\n  PopoverContent,\r\n  PopoverBody,\r\n  PopoverArrow,\r\n  Button,\r\n} from \"@chakra-ui/react\";\r\nimport { FiTrash2 } from \"react-icons/fi\";\r\n\r\nimport {\r\n  ListUserThreadsQuery,\r\n  useDeleteThreadMutation,\r\n} from \"../generated/graphql\";\r\nimport { ApolloQueryResult } from \"@apollo/client\";\r\n\r\ninterface OptionsPopoverProps {\r\n  threadId: number;\r\n  refetch: () => Promise<ApolloQueryResult<ListUserThreadsQuery>>;\r\n  setShowThreadOptions?: any;\r\n}\r\nexport const OptionsPopover: React.FC<OptionsPopoverProps> = ({\r\n  children,\r\n  threadId,\r\n  refetch,\r\n  setShowThreadOptions\r\n}) => {\r\n  const [deleteReq] = useDeleteThreadMutation({\r\n    update: () => {\r\n    setShowThreadOptions(false);\r\n    refetch();\r\n    },\r\n  });\r\n  const deleteThread = () => {\r\n    deleteReq({\r\n      variables: {\r\n        id: threadId,\r\n      },\r\n    });\r\n  };\r\n\r\n  const editThread = () => {};\r\n\r\n  return (\r\n    <Popover>\r\n      <PopoverTrigger>\r\n        {children}\r\n        {/* <Button>Trigger</Button> */}\r\n      </PopoverTrigger>\r\n      <PopoverContent maxW=\"120px\">\r\n        <PopoverArrow />\r\n        <PopoverBody padding=\"6px\">\r\n          <Flex justify=\"center\" direction=\"column\">\r\n            <Button\r\n              bgColor=\"green.300\"\r\n              _hover={{\r\n                color: \"white\",\r\n                bgColor: \"green.400\",\r\n              }}\r\n              onClick={() => deleteThread()}\r\n            >\r\n              <FiTrash2 style={{ marginRight: \"3px\" }} />\r\n              delete\r\n            </Button>\r\n            <Button marginTop=\"6px\">edit</Button>\r\n          </Flex>\r\n        </PopoverBody>\r\n      </PopoverContent>\r\n    </Popover>\r\n  );\r\n};\r\n","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\SignleTopicPage.tsx",["212"],"import React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\ninterface SignleTopicPageProps {}\r\n\r\nexport const SignleTopicPage: React.FC<SignleTopicPageProps> = ({}) => {\r\n  const params = useParams();\r\n  useEffect(() => {\r\n    console.log(params);\r\n  });\r\n  return <h1>pages</h1>;\r\n};\r\n",{"ruleId":"213","severity":1,"message":"214","line":1,"column":8,"nodeType":"215","messageId":"216","endLine":1,"endColumn":17},{"ruleId":"217","replacedBy":"218"},{"ruleId":"219","replacedBy":"220"},{"ruleId":"213","severity":1,"message":"221","line":1,"column":27,"nodeType":"215","messageId":"216","endLine":1,"endColumn":36},{"ruleId":"213","severity":1,"message":"222","line":1,"column":38,"nodeType":"215","messageId":"216","endLine":1,"endColumn":45},{"ruleId":"213","severity":1,"message":"223","line":1,"column":47,"nodeType":"215","messageId":"216","endLine":1,"endColumn":58},{"ruleId":"213","severity":1,"message":"224","line":5,"column":10,"nodeType":"215","messageId":"216","endLine":5,"endColumn":32},{"ruleId":"213","severity":1,"message":"225","line":5,"column":34,"nodeType":"215","messageId":"216","endLine":5,"endColumn":53},{"ruleId":"213","severity":1,"message":"226","line":5,"column":55,"nodeType":"215","messageId":"216","endLine":5,"endColumn":65},{"ruleId":"213","severity":1,"message":"227","line":5,"column":67,"nodeType":"215","messageId":"216","endLine":5,"endColumn":74},{"ruleId":"213","severity":1,"message":"228","line":5,"column":76,"nodeType":"215","messageId":"216","endLine":5,"endColumn":98},{"ruleId":"213","severity":1,"message":"229","line":6,"column":10,"nodeType":"215","messageId":"216","endLine":6,"endColumn":21},{"ruleId":"213","severity":1,"message":"230","line":12,"column":12,"nodeType":"215","messageId":"216","endLine":12,"endColumn":17},{"ruleId":"213","severity":1,"message":"231","line":12,"column":19,"nodeType":"215","messageId":"216","endLine":12,"endColumn":27},{"ruleId":"213","severity":1,"message":"232","line":18,"column":21,"nodeType":"215","messageId":"216","endLine":18,"endColumn":25},{"ruleId":"213","severity":1,"message":"233","line":18,"column":27,"nodeType":"215","messageId":"216","endLine":18,"endColumn":33},{"ruleId":"217","replacedBy":"234"},{"ruleId":"219","replacedBy":"235"},{"ruleId":"217","replacedBy":"236"},{"ruleId":"219","replacedBy":"237"},{"ruleId":"238","severity":1,"message":"239","line":5,"column":57,"nodeType":"240","messageId":"241","endLine":5,"endColumn":59},{"ruleId":"217","replacedBy":"242"},{"ruleId":"219","replacedBy":"243"},{"ruleId":"213","severity":1,"message":"244","line":3,"column":3,"nodeType":"215","messageId":"216","endLine":3,"endColumn":12},{"ruleId":"213","severity":1,"message":"245","line":8,"column":3,"nodeType":"215","messageId":"216","endLine":8,"endColumn":9},{"ruleId":"213","severity":1,"message":"246","line":11,"column":10,"nodeType":"215","messageId":"216","endLine":11,"endColumn":18},{"ruleId":"213","severity":1,"message":"247","line":11,"column":20,"nodeType":"215","messageId":"216","endLine":11,"endColumn":27},{"ruleId":"213","severity":1,"message":"248","line":18,"column":3,"nodeType":"215","messageId":"216","endLine":18,"endColumn":13},{"ruleId":"213","severity":1,"message":"249","line":35,"column":11,"nodeType":"215","messageId":"216","endLine":35,"endColumn":17},{"ruleId":"213","severity":1,"message":"250","line":35,"column":19,"nodeType":"215","messageId":"216","endLine":35,"endColumn":25},{"ruleId":"213","severity":1,"message":"233","line":73,"column":24,"nodeType":"215","messageId":"216","endLine":73,"endColumn":30},{"ruleId":"238","severity":1,"message":"239","line":122,"column":49,"nodeType":"240","messageId":"241","endLine":122,"endColumn":51},{"ruleId":"213","severity":1,"message":"251","line":125,"column":9,"nodeType":"215","messageId":"216","endLine":125,"endColumn":20},{"ruleId":"213","severity":1,"message":"252","line":14,"column":3,"nodeType":"215","messageId":"216","endLine":14,"endColumn":6},{"ruleId":"213","severity":1,"message":"253","line":15,"column":3,"nodeType":"215","messageId":"216","endLine":15,"endColumn":17},{"ruleId":"213","severity":1,"message":"254","line":1,"column":38,"nodeType":"215","messageId":"216","endLine":1,"endColumn":44},{"ruleId":"213","severity":1,"message":"228","line":9,"column":10,"nodeType":"215","messageId":"216","endLine":9,"endColumn":32},{"ruleId":"213","severity":1,"message":"255","line":11,"column":21,"nodeType":"215","messageId":"216","endLine":11,"endColumn":28},{"ruleId":"213","severity":1,"message":"221","line":1,"column":27,"nodeType":"215","messageId":"216","endLine":1,"endColumn":36},{"ruleId":"213","severity":1,"message":"256","line":6,"column":3,"nodeType":"215","messageId":"216","endLine":6,"endColumn":9},{"ruleId":"213","severity":1,"message":"230","line":21,"column":10,"nodeType":"215","messageId":"216","endLine":21,"endColumn":15},{"ruleId":"213","severity":1,"message":"231","line":21,"column":17,"nodeType":"215","messageId":"216","endLine":21,"endColumn":25},{"ruleId":"213","severity":1,"message":"257","line":23,"column":10,"nodeType":"215","messageId":"216","endLine":23,"endColumn":21},{"ruleId":"213","severity":1,"message":"221","line":1,"column":27,"nodeType":"215","messageId":"216","endLine":1,"endColumn":36},{"ruleId":"213","severity":1,"message":"244","line":2,"column":10,"nodeType":"215","messageId":"216","endLine":2,"endColumn":19},{"ruleId":"213","severity":1,"message":"258","line":2,"column":21,"nodeType":"215","messageId":"216","endLine":2,"endColumn":25},{"ruleId":"213","severity":1,"message":"245","line":2,"column":27,"nodeType":"215","messageId":"216","endLine":2,"endColumn":33},{"ruleId":"213","severity":1,"message":"259","line":9,"column":3,"nodeType":"215","messageId":"216","endLine":9,"endColumn":14},{"ruleId":"213","severity":1,"message":"260","line":10,"column":3,"nodeType":"215","messageId":"216","endLine":10,"endColumn":14},{"ruleId":"213","severity":1,"message":"261","line":11,"column":3,"nodeType":"215","messageId":"216","endLine":11,"endColumn":16},{"ruleId":"213","severity":1,"message":"262","line":12,"column":3,"nodeType":"215","messageId":"216","endLine":12,"endColumn":10},{"ruleId":"213","severity":1,"message":"221","line":1,"column":27,"nodeType":"215","messageId":"216","endLine":1,"endColumn":36},{"ruleId":"213","severity":1,"message":"228","line":3,"column":3,"nodeType":"215","messageId":"216","endLine":3,"endColumn":25},{"ruleId":"213","severity":1,"message":"263","line":4,"column":3,"nodeType":"215","messageId":"216","endLine":4,"endColumn":22},{"ruleId":"213","severity":1,"message":"264","line":9,"column":10,"nodeType":"215","messageId":"216","endLine":9,"endColumn":22},{"ruleId":"213","severity":1,"message":"249","line":19,"column":11,"nodeType":"215","messageId":"216","endLine":19,"endColumn":17},{"ruleId":"213","severity":1,"message":"250","line":19,"column":19,"nodeType":"215","messageId":"216","endLine":19,"endColumn":25},{"ruleId":"213","severity":1,"message":"228","line":2,"column":10,"nodeType":"215","messageId":"216","endLine":2,"endColumn":32},{"ruleId":"213","severity":1,"message":"244","line":6,"column":3,"nodeType":"215","messageId":"216","endLine":6,"endColumn":12},{"ruleId":"213","severity":1,"message":"258","line":7,"column":3,"nodeType":"215","messageId":"216","endLine":7,"endColumn":7},{"ruleId":"213","severity":1,"message":"256","line":8,"column":3,"nodeType":"215","messageId":"216","endLine":8,"endColumn":9},{"ruleId":"213","severity":1,"message":"265","line":9,"column":3,"nodeType":"215","messageId":"216","endLine":9,"endColumn":9},{"ruleId":"213","severity":1,"message":"266","line":10,"column":3,"nodeType":"215","messageId":"216","endLine":10,"endColumn":14},{"ruleId":"213","severity":1,"message":"267","line":11,"column":3,"nodeType":"215","messageId":"216","endLine":11,"endColumn":12},{"ruleId":"213","severity":1,"message":"268","line":12,"column":3,"nodeType":"215","messageId":"216","endLine":12,"endColumn":8},{"ruleId":"213","severity":1,"message":"255","line":14,"column":3,"nodeType":"215","messageId":"216","endLine":14,"endColumn":10},{"ruleId":"213","severity":1,"message":"269","line":18,"column":10,"nodeType":"215","messageId":"216","endLine":18,"endColumn":20},{"ruleId":"213","severity":1,"message":"270","line":1,"column":17,"nodeType":"215","messageId":"216","endLine":1,"endColumn":25},{"ruleId":"213","severity":1,"message":"221","line":1,"column":27,"nodeType":"215","messageId":"216","endLine":1,"endColumn":36},{"ruleId":"213","severity":1,"message":"271","line":3,"column":15,"nodeType":"215","messageId":"216","endLine":3,"endColumn":22},{"ruleId":"213","severity":1,"message":"258","line":3,"column":24,"nodeType":"215","messageId":"216","endLine":3,"endColumn":28},{"ruleId":"217","replacedBy":"272"},{"ruleId":"219","replacedBy":"273"},{"ruleId":"213","severity":1,"message":"265","line":3,"column":3,"nodeType":"215","messageId":"216","endLine":3,"endColumn":9},{"ruleId":"213","severity":1,"message":"259","line":9,"column":3,"nodeType":"215","messageId":"216","endLine":9,"endColumn":14},{"ruleId":"213","severity":1,"message":"260","line":10,"column":3,"nodeType":"215","messageId":"216","endLine":10,"endColumn":14},{"ruleId":"213","severity":1,"message":"261","line":11,"column":3,"nodeType":"215","messageId":"216","endLine":11,"endColumn":16},{"ruleId":"213","severity":1,"message":"262","line":12,"column":3,"nodeType":"215","messageId":"216","endLine":12,"endColumn":10},{"ruleId":"213","severity":1,"message":"274","line":45,"column":9,"nodeType":"215","messageId":"216","endLine":45,"endColumn":19},{"ruleId":"238","severity":1,"message":"239","line":6,"column":65,"nodeType":"240","messageId":"241","endLine":6,"endColumn":67},"@typescript-eslint/no-unused-vars","'jwtDecode' is defined but never used.","Identifier","unusedVar","no-native-reassign",["275"],"no-negated-in-lhs",["276"],"'useEffect' is defined but never used.","'useMemo' is defined but never used.","'useCallback' is defined but never used.","'IsUserLoggedInDocument' is defined but never used.","'IsUserLoggedInQuery' is defined but never used.","'MeDocument' is defined but never used.","'MeQuery' is defined but never used.","'useIsUserLoggedInQuery' is defined but never used.","'ApolloError' is defined but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'data' is assigned a value but never used.","'client' is assigned a value but never used.",["275"],["276"],["275"],["276"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected",["275"],["276"],"'Container' is defined but never used.","'Center' is defined but never used.","'MoonIcon' is defined but never used.","'SunIcon' is defined but never used.","'useMeQuery' is defined but never used.","'isOpen' is assigned a value but never used.","'onOpen' is assigned a value but never used.","'currentMode' is assigned a value but never used.","'gql' is defined but never used.","'createHttpLink' is defined but never used.","'useRef' is defined but never used.","'Spinner' is defined but never used.","'VStack' is defined but never used.","'showMessage' is assigned a value but never used.","'Flex' is defined but never used.","'ModalHeader' is defined but never used.","'ModalFooter' is defined but never used.","'useDisclosure' is defined but never used.","'Heading' is defined but never used.","'useListThreadsQuery' is defined but never used.","'QuestionForm' is defined but never used.","'Button' is defined but never used.","'FormControl' is defined but never used.","'FormLabel' is defined but never used.","'Input' is defined but never used.","'AiFillEdit' is defined but never used.","'useState' is defined but never used.","'Divider' is defined but never used.",["275"],["276"],"'editThread' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]e":"217","messageId":"218","endLine":11,"endColumn":28},{"ruleId":"215","severity":1,"message":"225","line":1,"column":27,"nodeType":"217","messageId":"218","endLine":1,"endColumn":36},{"ruleId":"215","severity":1,"message":"256","line":6,"column":3,"nodeType":"217","messageId":"218","endLine":6,"endColumn":9},{"ruleId":"215","severity":1,"message":"234","line":21,"column":10,"nodeType":"217","messageId":"218","endLine":21,"endColumn":15},{"ruleId":"215","severity":1,"message":"235","line":21,"column":17,"nodeType":"217","messageId":"218","endLine":21,"endColumn":25},{"ruleId":"215","severity":1,"message":"257","line":23,"column":10,"nodeType":"217","messageId":"218","endLine":23,"endColumn":21},{"ruleId":"215","severity":1,"message":"225","line":1,"column":27,"nodeType":"217","messageId":"218","endLine":1,"endColumn":36},{"ruleId":"215","severity":1,"message":"244","line":2,"column":10,"nodeType":"217","messageId":"218","endLine":2,"endColumn":19},{"ruleId":"215","severity":1,"message":"258","line":2,"column":21,"nodeType":"217","messageId":"218","endLine":2,"endColumn":25},{"ruleId":"215","severity":1,"message":"245","line":2,"column":27,"nodeType":"217","messageId":"218","endLine":2,"endColumn":33},{"ruleId":"215","severity":1,"message":"259","line":9,"column":3,"nodeType":"217","messageId":"218","endLine":9,"endColumn":14},{"ruleId":"215","severity":1,"message":"260","line":10,"column":3,"nodeType":"217","messageId":"218","endLine":10,"endColumn":14},{"ruleId":"215","severity":1,"message":"261","line":11,"column":3,"nodeType":"217","messageId":"218","endLine":11,"endColumn":16},{"ruleId":"215","severity":1,"message":"262","line":12,"column":3,"nodeType":"217","messageId":"218","endLine":12,"endColumn":10},{"ruleId":"215","severity":1,"message":"225","line":1,"column":27,"nodeType":"217","messageId":"218","endLine":1,"endColumn":36},{"ruleId":"215","severity":1,"message":"232","line":3,"column":3,"nodeType":"217","messageId":"218","endLine":3,"endColumn":25},{"ruleId":"215","severity":1,"message":"263","line":4,"column":3,"nodeType":"217","messageId":"218","endLine":4,"endColumn":22},{"ruleId":"215","severity":1,"message":"264","line":9,"column":10,"nodeType":"217","messageId":"218","endLine":9,"endColumn":22},{"ruleId":"215","severity":1,"message":"249","line":19,"column":11,"nodeType":"217","messageId":"218","endLine":19,"endColumn":17},{"ruleId":"215","severity":1,"message":"250","line":19,"column":19,"nodeType":"217","messageId":"218","endLine":19,"endColumn":25},{"ruleId":"215","severity":1,"message":"232","line":2,"column":10,"nodeType":"217","messageId":"218","endLine":2,"endColumn":32},{"ruleId":"215","severity":1,"message":"244","line":6,"column":3,"nodeType":"217","messageId":"218","endLine":6,"endColumn":12},{"ruleId":"215","severity":1,"message":"258","line":7,"column":3,"nodeType":"217","messageId":"218","endLine":7,"endColumn":7},{"ruleId":"215","severity":1,"message":"256","line":8,"column":3,"nodeType":"217","messageId":"218","endLine":8,"endColumn":9},{"ruleId":"215","severity":1,"message":"265","line":9,"column":3,"nodeType":"217","messageId":"218","endLine":9,"endColumn":9},{"ruleId":"215","severity":1,"message":"266","line":10,"column":3,"nodeType":"217","messageId":"218","endLine":10,"endColumn":14},{"ruleId":"215","severity":1,"message":"267","line":11,"column":3,"nodeType":"217","messageId":"218","endLine":11,"endColumn":12},{"ruleId":"215","severity":1,"message":"268","line":12,"column":3,"nodeType":"217","messageId":"218","endLine":12,"endColumn":8},{"ruleId":"215","severity":1,"message":"255","line":14,"column":3,"nodeType":"217","messageId":"218","endLine":14,"endColumn":10},{"ruleId":"215","severity":1,"message":"269","line":18,"column":10,"nodeType":"217","messageId":"218","endLine":18,"endColumn":20},{"ruleId":"215","severity":1,"message":"270","line":1,"column":17,"nodeType":"217","messageId":"218","endLine":1,"endColumn":25},{"ruleId":"215","severity":1,"message":"225","line":1,"column":27,"nodeType":"217","messageId":"218","endLine":1,"endColumn":36},{"ruleId":"215","severity":1,"message":"271","line":3,"column":15,"nodeType":"217","messageId":"218","endLine":3,"endColumn":22},{"ruleId":"215","severity":1,"message":"258","line":3,"column":24,"nodeType":"217","messageId":"218","endLine":3,"endColumn":28},{"ruleId":"219","replacedBy":"272"},{"ruleId":"221","replacedBy":"273"},{"ruleId":"215","severity":1,"message":"265","line":3,"column":3,"nodeType":"217","messageId":"218","endLine":3,"endColumn":9},{"ruleId":"215","severity":1,"message":"259","line":9,"column":3,"nodeType":"217","messageId":"218","endLine":9,"endColumn":14},{"ruleId":"215","severity":1,"message":"260","line":10,"column":3,"nodeType":"217","messageId":"218","endLine":10,"endColumn":14},{"ruleId":"215","severity":1,"message":"261","line":11,"column":3,"nodeType":"217","messageId":"218","endLine":11,"endColumn":16},{"ruleId":"215","severity":1,"message":"262","line":12,"column":3,"nodeType":"217","messageId":"218","endLine":12,"endColumn":10},{"ruleId":"219","replacedBy":"274"},{"ruleId":"221","replacedBy":"275"},{"ruleId":"215","severity":1,"message":"276","line":45,"column":9,"nodeType":"217","messageId":"218","endLine":45,"endColumn":19},{"ruleId":"240","severity":1,"message":"241","line":6,"column":65,"nodeType":"242","messageId":"243","endLine":6,"endColumn":67},"@typescript-eslint/no-unused-vars","'jwtDecode' is defined but never used.","Identifier","unusedVar","no-native-reassign",["277"],"no-negated-in-lhs",["278"],["277"],["278"],"'useEffect' is defined but never used.","'useMemo' is defined but never used.","'useCallback' is defined but never used.","'IsUserLoggedInDocument' is defined but never used.","'IsUserLoggedInQuery' is defined but never used.","'MeDocument' is defined but never used.","'MeQuery' is defined but never used.","'useIsUserLoggedInQuery' is defined but never used.","'ApolloError' is defined but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'data' is assigned a value but never used.","'client' is assigned a value but never used.",["277"],["278"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'Container' is defined but never used.","'Center' is defined but never used.","'MoonIcon' is defined but never used.","'SunIcon' is defined but never used.","'useMeQuery' is defined but never used.","'isOpen' is assigned a value but never used.","'onOpen' is assigned a value but never used.","'currentMode' is assigned a value but never used.","'gql' is defined but never used.","'createHttpLink' is defined but never used.","'useRef' is defined but never used.","'Spinner' is defined but never used.","'VStack' is defined but never used.","'showMessage' is assigned a value but never used.","'Flex' is defined but never used.","'ModalHeader' is defined but never used.","'ModalFooter' is defined but never used.","'useDisclosure' is defined but never used.","'Heading' is defined but never used.","'useListThreadsQuery' is defined but never used.","'QuestionForm' is defined but never used.","'Button' is defined but never used.","'FormControl' is defined but never used.","'FormLabel' is defined but never used.","'Input' is defined but never used.","'AiFillEdit' is defined but never used.","'useState' is defined but never used.","'Divider' is defined but never used.",["277"],["278"],["277"],["278"],"'editThread' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]