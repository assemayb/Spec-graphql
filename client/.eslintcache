[{"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\accessToken.ts":"1","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\routes.tsx":"2","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Login.tsx":"3","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Message.tsx":"4","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\reportWebVitals.ts":"5","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Header.tsx":"6","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\generated\\graphql.tsx":"7","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Register.tsx":"8","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Header2.tsx":"9","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\index.tsx":"10","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\App.tsx":"11","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Home.tsx":"12","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Test.tsx":"13","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\LoginFrom.tsx":"14","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\RegisterForm.tsx":"15","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\Skeleton.tsx":"16","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Footer.tsx":"17","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\LinkBox.tsx":"18","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Modal.tsx":"19","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\Spinners.tsx":"20","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Profile.tsx":"21","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Topics.tsx":"22","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\theme.tsx":"23","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\QuestionForm.tsx":"24","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\QuestionBox.tsx":"25"},{"size":231,"mtime":1607976985837,"results":"26","hashOfConfig":"27"},{"size":755,"mtime":1626002465598,"results":"28","hashOfConfig":"27"},{"size":2848,"mtime":1626701175574,"results":"29","hashOfConfig":"27"},{"size":246,"mtime":1625721792159,"results":"30","hashOfConfig":"27"},{"size":425,"mtime":1607784182783,"results":"31","hashOfConfig":"27"},{"size":2262,"mtime":1625804572053,"results":"32","hashOfConfig":"27"},{"size":23300,"mtime":1626806321034,"results":"33","hashOfConfig":"27"},{"size":1661,"mtime":1625978682307,"results":"34","hashOfConfig":"27"},{"size":4746,"mtime":1626714576336,"results":"35","hashOfConfig":"27"},{"size":3470,"mtime":1626530353730,"results":"36","hashOfConfig":"27"},{"size":1382,"mtime":1626806866957,"results":"37","hashOfConfig":"27"},{"size":2227,"mtime":1626724076047,"results":"38","hashOfConfig":"27"},{"size":733,"mtime":1625978033033,"results":"39","hashOfConfig":"27"},{"size":2642,"mtime":1626660346003,"results":"40","hashOfConfig":"27"},{"size":3214,"mtime":1626701458601,"results":"41","hashOfConfig":"27"},{"size":237,"mtime":1626070254089,"results":"42","hashOfConfig":"27"},{"size":426,"mtime":1626443446668,"results":"43","hashOfConfig":"27"},{"size":723,"mtime":1626714532068,"results":"44","hashOfConfig":"27"},{"size":1567,"mtime":1626446748611,"results":"45","hashOfConfig":"27"},{"size":382,"mtime":1626377368932,"results":"46","hashOfConfig":"27"},{"size":166,"mtime":1625809384497,"results":"47","hashOfConfig":"27"},{"size":2194,"mtime":1626723808342,"results":"48","hashOfConfig":"27"},{"size":244,"mtime":1626435092133,"results":"49","hashOfConfig":"27"},{"size":2724,"mtime":1626805545632,"results":"50","hashOfConfig":"27"},{"size":1606,"mtime":1626721696784,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},"11skg4y",{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\accessToken.ts",["115"],"import jwtDecode from \"jwt-decode\"\r\n\r\nexport const getAccessToken = () => {\r\n    return localStorage.getItem(\"accessToken\")\r\n}\r\n\r\nexport const setAccessToken = (token: string) => {\r\n    localStorage.setItem(\"accessToken\", token)\r\n}",["116","117"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\routes.tsx",[],["118","119"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Login.tsx",["120","121","122","123","124","125","126","127","128","129","130","131","132"],"import React, { useState, useEffect, useMemo, useCallback } from 'react'\r\nimport { RouteComponentProps } from \"react-router-dom\"\r\nimport { setAccessToken } from '../accessToken'\r\nimport { Message } from '../components/Message'\r\nimport { IsUserLoggedInDocument, IsUserLoggedInQuery, MeDocument, MeQuery, useIsUserLoggedInQuery, useLoginMutation } from '../generated/graphql'\r\nimport { ApolloError } from \"@apollo/client/errors\"\r\n\r\n\r\nexport const Login: React.FC<RouteComponentProps> = ({ history }) => {\r\n\r\n    const [username, setUsername] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [showMessage, setShowMessage] = useState({\r\n        show: false,\r\n        value: \"\"\r\n    })\r\n    const [login, { data, client }] = useLoginMutation()\r\n\r\n    const loginUser = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n        e.preventDefault()\r\n        try {\r\n\r\n            const response = await login({\r\n                variables: {\r\n                    username,\r\n                    password\r\n                },\r\n                update: (cache, { data }) => {\r\n                    if (!data) {\r\n                        return null;\r\n                    }\r\n                    // cache.writeQuery<MeQuery>({\r\n                    //     query: MeDocument,\r\n                    //     data: {\r\n                    //         me: data.loginUser?.user\r\n                    //     }\r\n                    // })\r\n                    // cache.writeQuery<IsUserLoggedInQuery>({\r\n                    //     query: IsUserLoggedInDocument,\r\n                    //     data: {\r\n                    //         isUserLoggedIn: true\r\n                    //     }\r\n                    // })\r\n\r\n                },\r\n            })\r\n            if (response && response.data) {\r\n                setAccessToken(response.data.loginUser?.accessToken!)\r\n                history.push(\"/\")\r\n                setUsername(\"\")\r\n                setPassword(\"\")\r\n            }\r\n        } catch (error) {\r\n            setShowMessage({ show: true, value: error.message })\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form className=\"login-form\">\r\n                {showMessage.show && (\r\n                    <Message message={showMessage.value} />\r\n                )}\r\n                <label htmlFor=\"username\">username: </label>\r\n                <input id=\"username\" type=\"text\" value={username} onChange={e => setUsername(e.target.value)} />\r\n                <label htmlFor=\"password\">password: </label>\r\n                <input id=\"password\" type=\"password\" value={password} onChange={e => setPassword(e.target.value)} />\r\n                <button onClick={e => loginUser(e)}>Login</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n",["133","134"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Message.tsx",[],["135","136"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\reportWebVitals.ts",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Header.tsx",["137","138","139","140","141"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\generated\\graphql.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Register.tsx",["142"],"import React, { useState } from \"react\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport { useRegisterMutation } from \"../generated/graphql\";\r\n\r\nexport const Register: React.FC<RouteComponentProps> = ({}) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const [register] = useRegisterMutation();\r\n\r\n  const registerNewUser = (\r\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>\r\n  ) => {\r\n    e.preventDefault();\r\n    \r\n    if (!username || !email || !password) {\r\n      return console.log(\"enter some data\");\r\n    }\r\n    register({\r\n      variables: {\r\n        username,\r\n        email,\r\n        password,\r\n      },\r\n    }).then((response) => {\r\n      console.log(response);\r\n    });\r\n    setEmail(\"\");\r\n    setUsername(\"\");\r\n    setPassword(\"\");\r\n  };\r\n  return (\r\n    <div>\r\n      <form className=\"signup-form\">\r\n        <label htmlFor=\"username\">username: </label>\r\n        <input\r\n          id=\"username\"\r\n          type=\"text\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n        />\r\n        <label htmlFor=\"password\">password: </label>\r\n        <input\r\n          id=\"password\"\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <label htmlFor=\"email\">email: </label>\r\n        <input\r\n          type=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <button onClick={(e) => registerNewUser(e)}>Register</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Header2.tsx",["143","144","145","146","147","148","149","150","151","152"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\index.tsx",["153","154"],"import \"./index.css\";\nimport App from \"./App\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport {theme} from \"./theme\"\n\n\nimport {\n  ApolloProvider,\n  ApolloClient,\n  InMemoryCache,\n  gql,\n  createHttpLink,\n  HttpLink,\n  ApolloLink,\n  Observable,\n} from \"@apollo/client\";\nimport { onError } from \"@apollo/client/link/error\";\nimport { TokenRefreshLink } from \"apollo-link-token-refresh\";\nimport jwtDecode from \"jwt-decode\";\n\nimport { getAccessToken, setAccessToken } from \"./accessToken\";\n\n// import { onError } from '@apollo/client/link/error';\n\n// const authMiddlewareLink = new ApolloLink((operation, forward) => {\n//   const accessToken = getAccessToken()\n//   operation.setContext({\n//     headers: {\n//       authorization: `Bearer ${accessToken}`,\n//     },\n//   })\n//   return forward(operation);\n// });\n\nconst cache = new InMemoryCache();\nconst httpLink = new HttpLink({\n  uri: \"http://localhost:8000/graphql\",\n  credentials: \"include\",\n});\n\nconst requestLink = new ApolloLink(\n  (operation, forward) =>\n    new Observable((observer) => {\n      let handle: any;\n      Promise.resolve(operation)\n        .then((operation) => {\n          const accessToken = getAccessToken();\n          if (accessToken) {\n            operation.setContext({\n              headers: {\n                authorization: `Bearer ${accessToken}`,\n              },\n            });\n          }\n        })\n        .then(() => {\n          handle = forward(operation).subscribe({\n            next: observer.next.bind(observer),\n            error: observer.error.bind(observer),\n            complete: observer.complete.bind(observer),\n          });\n        })\n        .catch(observer.error.bind(observer));\n\n      return () => {\n        if (handle) handle.unsubscribe();\n      };\n    })\n);\n\nconst tokenRefreshLink = new TokenRefreshLink({\n  accessTokenField: \"accessToken\",\n  isTokenValidOrUndefined: () => {\n    const token = getAccessToken();\n    if (!token) {\n      return true;\n    }\n    try {\n      const tokenDecoded: any = jwtDecode(token);\n      const expDate: number = tokenDecoded.exp;\n      if (Date.now() >= expDate * 1000) {\n        return false;\n      } else {\n        return true;\n      }\n    } catch {\n      return false;\n    }\n  },\n  fetchAccessToken: () => {\n    return fetch(\"http://localhost:8000/refresh_token\", {\n      method: \"POST\",\n      credentials: \"include\",\n    });\n  },\n  handleFetch: (accessToken) => {\n    setAccessToken(accessToken);\n  },\n  handleError: (err) => {\n    console.warn(\"Your refresh token is invalid. Try to relogin\");\n    console.error(err);\n  },\n});\n\nexport const client = new ApolloClient({\n  cache,\n\n  link: ApolloLink.from([\n    onError(({ graphQLErrors, networkError }) => {\n      if (graphQLErrors) {\n        graphQLErrors.map(({ message, locations, path }) =>\n          console.log(\n            `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`\n          )\n        );\n      }\n\n      if (networkError) {\n        console.log(`[Network error]: ${networkError}`);\n      }\n    }),\n    tokenRefreshLink,\n    requestLink,\n    httpLink,\n  ]),\n});\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider theme={theme}>\n      <ApolloProvider client={client}>\n        <App />\n      </ApolloProvider>\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n\nreportWebVitals();\n","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\App.tsx",["155","156","157"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Home.tsx",["158","159","160","161","162"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Test.tsx",["163","164","165","166","167","168"],"import React from \"react\";\r\nimport { getAccessToken } from \"../accessToken\";\r\nimport { useUsersListQuery } from \"../generated/graphql\";\r\nimport { Box, Container, Flex, VStack, Button } from \"@chakra-ui/react\";\r\n\r\n\r\ninterface TestProps {}\r\n\r\nexport const Test: React.FC<TestProps> = () => {\r\n  const { data, error, loading } = useUsersListQuery({\r\n    fetchPolicy: \"network-only\",\r\n  });\r\n\r\n  if (loading) {\r\n    return <div>loading......</div>;\r\n  }\r\n\r\n  return (\r\n    <Container p=\"2rem\" m=\"1rem\">\r\n      <h1>Current Users:</h1>\r\n      <ul>\r\n        {data?.getAllUsers?.map((user, idx) => (\r\n          <li key={idx}>\r\n            {user.email}, {user.username}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </Container>\r\n  );\r\n};\r\n","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\LoginFrom.tsx",["169","170","171","172","173"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  VStack,\r\n  Button,\r\n  Center,\r\n  Container,\r\n} from \"@chakra-ui/react\";\r\nimport {\r\n  IsUserLoggedInDocument,\r\n  IsUserLoggedInQuery,\r\n  useLoginMutation,\r\n} from \"../generated/graphql\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { setAccessToken } from \"../accessToken\";\r\n\r\nexport const LoginFrom = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [showMessage, setShowMessage] = useState({\r\n    show: false,\r\n    value: \"\",\r\n  });\r\n\r\n  const [login] = useLoginMutation();\r\n\r\n  const history = useHistory();\r\n  const submitLoginForm = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    console.log(\"submit form\");\r\n    try {\r\n      const response = await login({\r\n        variables: {\r\n          username,\r\n          password,\r\n        },\r\n        update: (cache, { data }) => {\r\n          if (!data) {\r\n            return null;\r\n          }\r\n          // cache.writeQuery<MeQuery>({\r\n          //     query: MeDocument,\r\n          //     data: {\r\n          //         me: data.loginUser?.user\r\n          //     }\r\n          // })\r\n          cache.writeQuery<IsUserLoggedInQuery>({\r\n            query: IsUserLoggedInDocument,\r\n            data: {\r\n              isUserLoggedIn: true,\r\n            },\r\n          });\r\n        },\r\n      });\r\n      if (response && response.data) {\r\n        console.log(response.data);\r\n\r\n        setAccessToken(response.data.loginUser?.accessToken!);\r\n        history.push(\"/\");\r\n        setUsername(\"\");\r\n        setPassword(\"\");\r\n      }\r\n    } catch (error) {\r\n      setShowMessage({ show: true, value: error.message });\r\n      console.log(error);\r\n    }\r\n  };\r\n  return (\r\n    <Container padding=\"0.4rem\" color=\"green.400\">\r\n      <form onSubmit={(e) => submitLoginForm(e)}>\r\n        <FormControl id=\"username\" isRequired my=\"5px\">\r\n          <FormLabel>Username</FormLabel>\r\n          <Input\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n        </FormControl>\r\n\r\n        <FormControl id=\"password\" isRequired my=\"5px\">\r\n          <FormLabel>Password</FormLabel>\r\n          <Input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </FormControl>\r\n        <Center>\r\n          <Button my=\"10px\" p=\"10px\" type=\"submit\">\r\n            login\r\n          </Button>\r\n        </Center>\r\n      </form>\r\n    </Container>\r\n  );\r\n};\r\n","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\RegisterForm.tsx",["174","175"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\Skeleton.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Footer.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\LinkBox.tsx",["176","177","178"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Modal.tsx",["179","180","181","182"],"import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  ModalContent,\r\n  ModalOverlay,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  useDisclosure,\r\n  Heading,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport { LoginFrom } from \"./LoginFrom\";\r\nimport { RegisterFrom } from \"./RegisterForm\";\r\ninterface ModalComponentProps {\r\n  showModal: boolean;\r\n  onClose: () => void;\r\n}\r\n\r\nexport const ModalComponent: React.FC<ModalComponentProps> = ({\r\n  showModal,\r\n  onClose,\r\n}) => {\r\n  const [displayedForm, setDisplayedForm] = useState(\"loginForm\");\r\n  return (\r\n    <>\r\n      <Modal isOpen={showModal} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent marginTop=\"8rem\">\r\n          <ModalCloseButton />\r\n\r\n          <ModalBody margin=\"1rem\">\r\n            {displayedForm === \"loginForm\" ? <LoginFrom /> : <RegisterFrom />}\r\n          </ModalBody>\r\n\r\n          {/* <ModalFooter display=\"flex\" justifyContent=\"center\"> */}\r\n            <Button\r\n              bgColor=\"green.200\"\r\n              textAlign=\"center\"\r\n              onClick={() => {\r\n                if (displayedForm === \"loginForm\") {\r\n                  setDisplayedForm(\"signupForm\");\r\n                } else {\r\n                  setDisplayedForm(\"loginForm\");\r\n                }\r\n              }}\r\n            >\r\n              {displayedForm === \"loginForm\"\r\n                ? \"create an account\"\r\n                : \"login to your acccount\"}\r\n            </Button>\r\n          {/* </ModalFooter> */}\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n",["183","184"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\Spinners.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Profile.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Topics.tsx",["185","186","187","188","189","190","191","192","193","194","195"],"import React, { useState, useEffect, FC } from \"react\";\r\nimport { useIsUserLoggedInQuery } from \"../generated/graphql\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport {\r\n  Box,\r\n  Container,\r\n  Flex,\r\n  VStack,\r\n  Button,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Grid,\r\n  Spinner,\r\n  Skeleton,\r\n  Divider,\r\n} from \"@chakra-ui/react\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\n\r\ninterface TopicBoxProps {\r\n  topic: string;\r\n}\r\nconst TopicBox: FC<TopicBoxProps> = ({ topic }) => {\r\n  return (\r\n    <Box\r\n      cursor=\"pointer\"\r\n      w=\"100%\"\r\n      h=\"100px\"\r\n      bg=\"gray.100\"\r\n      shadow=\"md\"\r\n      borderRadius=\"-10px\"\r\n      _hover={{\r\n        color: \"green.400\",\r\n        bg: \"gray.300\",\r\n        shadow: \"lg\",\r\n      }}\r\n    >\r\n      <Box\r\n        // shadow=\"md\"\r\n        textAlign=\"center\"\r\n        p=\"0.2rem\"\r\n        fontSize=\"20px\"\r\n        fontWeight=\"bold\"\r\n        textShadow=\"md\"\r\n        marginTop=\"5px\"\r\n      >\r\n        {topic}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst topicsQuery = gql`\r\n  query listTopics {\r\n    listTopics\r\n  }\r\n`;\r\nexport const Topics: React.FC<RouteComponentProps> = () => {\r\n  const { data, loading, error } = useQuery(topicsQuery);\r\n  const [topcis, setTopics] = useState([]);\r\n  const [dummieArr] = useState(new Array(12).fill(\"\"));\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setTimeout(() => {\r\n        setTopics(data.listTopics);\r\n      }, 600);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        marginLeft=\"1rem\"\r\n        marginTop=\"1rem\"\r\n        fontSize=\"30px\"\r\n        fontFamily=\"fantasy\"\r\n        fontWeight=\"bold\"\r\n        color=\"gray.500\"\r\n        textShadow=\"lg\"\r\n      >\r\n        Health Topics\r\n        <Divider />\r\n      </Box>\r\n\r\n      <Box p=\"2rem\" marginTop=\"2rem\" shadow=\"base\">\r\n        <Grid templateColumns=\"repeat(5, 1fr)\" gap={5}>\r\n          <>\r\n            {topcis.length < 1\r\n              ? dummieArr.map((item, idx) => {\r\n                  return <Skeleton color=\"green.100\" key={idx} height=\"80px\" />;\r\n                })\r\n              : topcis.map((item, idx) => <TopicBox key={idx} topic={item} />)}\r\n          </>\r\n        </Grid>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\theme.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\QuestionForm.tsx",["196","197","198","199","200","201"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\QuestionBox.tsx",["202","203","204","205","206"],{"ruleId":"207","severity":1,"message":"208","line":1,"column":8,"nodeType":"209","messageId":"210","endLine":1,"endColumn":17},{"ruleId":"211","replacedBy":"212"},{"ruleId":"213","replacedBy":"214"},{"ruleId":"211","replacedBy":"215"},{"ruleId":"213","replacedBy":"216"},{"ruleId":"207","severity":1,"message":"217","line":1,"column":27,"nodeType":"209","messageId":"210","endLine":1,"endColumn":36},{"ruleId":"207","severity":1,"message":"218","line":1,"column":38,"nodeType":"209","messageId":"210","endLine":1,"endColumn":45},{"ruleId":"207","severity":1,"message":"219","line":1,"column":47,"nodeType":"209","messageId":"210","endLine":1,"endColumn":58},{"ruleId":"207","severity":1,"message":"220","line":5,"column":10,"nodeType":"209","messageId":"210","endLine":5,"endColumn":32},{"ruleId":"207","severity":1,"message":"221","line":5,"column":34,"nodeType":"209","messageId":"210","endLine":5,"endColumn":53},{"ruleId":"207","severity":1,"message":"222","line":5,"column":55,"nodeType":"209","messageId":"210","endLine":5,"endColumn":65},{"ruleId":"207","severity":1,"message":"223","line":5,"column":67,"nodeType":"209","messageId":"210","endLine":5,"endColumn":74},{"ruleId":"207","severity":1,"message":"224","line":5,"column":76,"nodeType":"209","messageId":"210","endLine":5,"endColumn":98},{"ruleId":"207","severity":1,"message":"225","line":6,"column":10,"nodeType":"209","messageId":"210","endLine":6,"endColumn":21},{"ruleId":"207","severity":1,"message":"226","line":12,"column":12,"nodeType":"209","messageId":"210","endLine":12,"endColumn":17},{"ruleId":"207","severity":1,"message":"227","line":12,"column":19,"nodeType":"209","messageId":"210","endLine":12,"endColumn":27},{"ruleId":"207","severity":1,"message":"228","line":18,"column":21,"nodeType":"209","messageId":"210","endLine":18,"endColumn":25},{"ruleId":"207","severity":1,"message":"229","line":18,"column":27,"nodeType":"209","messageId":"210","endLine":18,"endColumn":33},{"ruleId":"211","replacedBy":"230"},{"ruleId":"213","replacedBy":"231"},{"ruleId":"211","replacedBy":"232"},{"ruleId":"213","replacedBy":"233"},{"ruleId":"207","severity":1,"message":"220","line":3,"column":3,"nodeType":"209","messageId":"210","endLine":3,"endColumn":25},{"ruleId":"207","severity":1,"message":"221","line":4,"column":3,"nodeType":"209","messageId":"210","endLine":4,"endColumn":22},{"ruleId":"207","severity":1,"message":"234","line":11,"column":10,"nodeType":"209","messageId":"210","endLine":11,"endColumn":15},{"ruleId":"235","severity":1,"message":"236","line":15,"column":47,"nodeType":"237","messageId":"238","endLine":15,"endColumn":49},{"ruleId":"207","severity":1,"message":"239","line":31,"column":7,"nodeType":"209","messageId":"210","endLine":31,"endColumn":16},{"ruleId":"235","severity":1,"message":"236","line":5,"column":57,"nodeType":"237","messageId":"238","endLine":5,"endColumn":59},{"ruleId":"207","severity":1,"message":"240","line":3,"column":3,"nodeType":"209","messageId":"210","endLine":3,"endColumn":12},{"ruleId":"207","severity":1,"message":"241","line":8,"column":3,"nodeType":"209","messageId":"210","endLine":8,"endColumn":9},{"ruleId":"207","severity":1,"message":"242","line":11,"column":10,"nodeType":"209","messageId":"210","endLine":11,"endColumn":18},{"ruleId":"207","severity":1,"message":"243","line":11,"column":20,"nodeType":"209","messageId":"210","endLine":11,"endColumn":27},{"ruleId":"207","severity":1,"message":"244","line":18,"column":3,"nodeType":"209","messageId":"210","endLine":18,"endColumn":13},{"ruleId":"207","severity":1,"message":"245","line":35,"column":11,"nodeType":"209","messageId":"210","endLine":35,"endColumn":17},{"ruleId":"207","severity":1,"message":"246","line":35,"column":19,"nodeType":"209","messageId":"210","endLine":35,"endColumn":25},{"ruleId":"207","severity":1,"message":"229","line":73,"column":24,"nodeType":"209","messageId":"210","endLine":73,"endColumn":30},{"ruleId":"235","severity":1,"message":"236","line":122,"column":49,"nodeType":"237","messageId":"238","endLine":122,"endColumn":51},{"ruleId":"207","severity":1,"message":"247","line":125,"column":9,"nodeType":"209","messageId":"210","endLine":125,"endColumn":20},{"ruleId":"207","severity":1,"message":"248","line":14,"column":3,"nodeType":"209","messageId":"210","endLine":14,"endColumn":6},{"ruleId":"207","severity":1,"message":"249","line":15,"column":3,"nodeType":"209","messageId":"210","endLine":15,"endColumn":17},{"ruleId":"207","severity":1,"message":"250","line":1,"column":38,"nodeType":"209","messageId":"210","endLine":1,"endColumn":44},{"ruleId":"207","severity":1,"message":"224","line":9,"column":10,"nodeType":"209","messageId":"210","endLine":9,"endColumn":32},{"ruleId":"207","severity":1,"message":"251","line":11,"column":21,"nodeType":"209","messageId":"210","endLine":11,"endColumn":28},{"ruleId":"207","severity":1,"message":"252","line":1,"column":17,"nodeType":"209","messageId":"210","endLine":1,"endColumn":25},{"ruleId":"207","severity":1,"message":"217","line":1,"column":27,"nodeType":"209","messageId":"210","endLine":1,"endColumn":36},{"ruleId":"207","severity":1,"message":"224","line":3,"column":3,"nodeType":"209","messageId":"210","endLine":3,"endColumn":25},{"ruleId":"207","severity":1,"message":"253","line":32,"column":11,"nodeType":"209","messageId":"210","endLine":32,"endColumn":20},{"ruleId":"207","severity":1,"message":"254","line":34,"column":26,"nodeType":"209","messageId":"210","endLine":34,"endColumn":31},{"ruleId":"207","severity":1,"message":"255","line":2,"column":10,"nodeType":"209","messageId":"210","endLine":2,"endColumn":24},{"ruleId":"207","severity":1,"message":"256","line":4,"column":10,"nodeType":"209","messageId":"210","endLine":4,"endColumn":13},{"ruleId":"207","severity":1,"message":"257","line":4,"column":26,"nodeType":"209","messageId":"210","endLine":4,"endColumn":30},{"ruleId":"207","severity":1,"message":"258","line":4,"column":32,"nodeType":"209","messageId":"210","endLine":4,"endColumn":38},{"ruleId":"207","severity":1,"message":"259","line":4,"column":40,"nodeType":"209","messageId":"210","endLine":4,"endColumn":46},{"ruleId":"207","severity":1,"message":"254","line":10,"column":17,"nodeType":"209","messageId":"210","endLine":10,"endColumn":22},{"ruleId":"207","severity":1,"message":"217","line":1,"column":27,"nodeType":"209","messageId":"210","endLine":1,"endColumn":36},{"ruleId":"207","severity":1,"message":"258","line":6,"column":3,"nodeType":"209","messageId":"210","endLine":6,"endColumn":9},{"ruleId":"207","severity":1,"message":"226","line":21,"column":10,"nodeType":"209","messageId":"210","endLine":21,"endColumn":15},{"ruleId":"207","severity":1,"message":"227","line":21,"column":17,"nodeType":"209","messageId":"210","endLine":21,"endColumn":25},{"ruleId":"207","severity":1,"message":"260","line":23,"column":10,"nodeType":"209","messageId":"210","endLine":23,"endColumn":21},{"ruleId":"207","severity":1,"message":"217","line":1,"column":27,"nodeType":"209","messageId":"210","endLine":1,"endColumn":36},{"ruleId":"207","severity":1,"message":"261","line":12,"column":10,"nodeType":"209","messageId":"210","endLine":12,"endColumn":22},{"ruleId":"207","severity":1,"message":"240","line":2,"column":10,"nodeType":"209","messageId":"210","endLine":2,"endColumn":19},{"ruleId":"207","severity":1,"message":"257","line":2,"column":21,"nodeType":"209","messageId":"210","endLine":2,"endColumn":25},{"ruleId":"207","severity":1,"message":"241","line":2,"column":27,"nodeType":"209","messageId":"210","endLine":2,"endColumn":33},{"ruleId":"207","severity":1,"message":"262","line":9,"column":3,"nodeType":"209","messageId":"210","endLine":9,"endColumn":14},{"ruleId":"207","severity":1,"message":"263","line":10,"column":3,"nodeType":"209","messageId":"210","endLine":10,"endColumn":14},{"ruleId":"207","severity":1,"message":"264","line":11,"column":3,"nodeType":"209","messageId":"210","endLine":11,"endColumn":16},{"ruleId":"207","severity":1,"message":"265","line":12,"column":3,"nodeType":"209","messageId":"210","endLine":12,"endColumn":10},{"ruleId":"211","replacedBy":"266"},{"ruleId":"213","replacedBy":"267"},{"ruleId":"207","severity":1,"message":"224","line":2,"column":10,"nodeType":"209","messageId":"210","endLine":2,"endColumn":32},{"ruleId":"207","severity":1,"message":"240","line":6,"column":3,"nodeType":"209","messageId":"210","endLine":6,"endColumn":12},{"ruleId":"207","severity":1,"message":"257","line":7,"column":3,"nodeType":"209","messageId":"210","endLine":7,"endColumn":7},{"ruleId":"207","severity":1,"message":"258","line":8,"column":3,"nodeType":"209","messageId":"210","endLine":8,"endColumn":9},{"ruleId":"207","severity":1,"message":"259","line":9,"column":3,"nodeType":"209","messageId":"210","endLine":9,"endColumn":9},{"ruleId":"207","severity":1,"message":"268","line":10,"column":3,"nodeType":"209","messageId":"210","endLine":10,"endColumn":14},{"ruleId":"207","severity":1,"message":"269","line":11,"column":3,"nodeType":"209","messageId":"210","endLine":11,"endColumn":12},{"ruleId":"207","severity":1,"message":"270","line":12,"column":3,"nodeType":"209","messageId":"210","endLine":12,"endColumn":8},{"ruleId":"207","severity":1,"message":"251","line":14,"column":3,"nodeType":"209","messageId":"210","endLine":14,"endColumn":10},{"ruleId":"207","severity":1,"message":"271","line":59,"column":17,"nodeType":"209","messageId":"210","endLine":59,"endColumn":24},{"ruleId":"207","severity":1,"message":"254","line":59,"column":26,"nodeType":"209","messageId":"210","endLine":59,"endColumn":31},{"ruleId":"207","severity":1,"message":"217","line":1,"column":27,"nodeType":"209","messageId":"210","endLine":1,"endColumn":36},{"ruleId":"207","severity":1,"message":"272","line":17,"column":10,"nodeType":"209","messageId":"210","endLine":17,"endColumn":20},{"ruleId":"207","severity":1,"message":"229","line":26,"column":28,"nodeType":"209","messageId":"210","endLine":26,"endColumn":34},{"ruleId":"207","severity":1,"message":"228","line":26,"column":36,"nodeType":"209","messageId":"210","endLine":26,"endColumn":40},{"ruleId":"207","severity":1,"message":"254","line":26,"column":42,"nodeType":"209","messageId":"210","endLine":26,"endColumn":47},{"ruleId":"207","severity":1,"message":"271","line":26,"column":49,"nodeType":"209","messageId":"210","endLine":26,"endColumn":56},{"ruleId":"207","severity":1,"message":"252","line":1,"column":17,"nodeType":"209","messageId":"210","endLine":1,"endColumn":25},{"ruleId":"207","severity":1,"message":"217","line":1,"column":27,"nodeType":"209","messageId":"210","endLine":1,"endColumn":36},{"ruleId":"207","severity":1,"message":"250","line":1,"column":38,"nodeType":"209","messageId":"210","endLine":1,"endColumn":44},{"ruleId":"207","severity":1,"message":"273","line":3,"column":24,"nodeType":"209","messageId":"210","endLine":3,"endColumn":31},{"ruleId":"207","severity":1,"message":"244","line":6,"column":10,"nodeType":"209","messageId":"210","endLine":6,"endColumn":20},"@typescript-eslint/no-unused-vars","'jwtDecode' is defined but never used.","Identifier","unusedVar","no-native-reassign",["274"],"no-negated-in-lhs",["275"],["274"],["275"],"'useEffect' is defined but never used.","'useMemo' is defined but never used.","'useCallback' is defined but never used.","'IsUserLoggedInDocument' is defined but never used.","'IsUserLoggedInQuery' is defined but never used.","'MeDocument' is defined but never used.","'MeQuery' is defined but never used.","'useIsUserLoggedInQuery' is defined but never used.","'ApolloError' is defined but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'data' is assigned a value but never used.","'client' is assigned a value but never used.",["274"],["275"],["274"],["275"],"'Login' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'isMounted' is assigned a value but never used.","'Container' is defined but never used.","'Center' is defined but never used.","'MoonIcon' is defined but never used.","'SunIcon' is defined but never used.","'useMeQuery' is defined but never used.","'isOpen' is assigned a value but never used.","'onOpen' is assigned a value but never used.","'currentMode' is assigned a value but never used.","'gql' is defined but never used.","'createHttpLink' is defined but never used.","'useRef' is defined but never used.","'Spinner' is defined but never used.","'useState' is defined but never used.","'HomeProps' is defined but never used.","'error' is assigned a value but never used.","'getAccessToken' is defined but never used.","'Box' is defined but never used.","'Flex' is defined but never used.","'VStack' is defined but never used.","'Button' is defined but never used.","'showMessage' is assigned a value but never used.","'setEmitFlags' is defined but never used.","'ModalHeader' is defined but never used.","'ModalFooter' is defined but never used.","'useDisclosure' is defined but never used.","'Heading' is defined but never used.",["274"],["275"],"'FormControl' is defined but never used.","'FormLabel' is defined but never used.","'Input' is defined but never used.","'loading' is assigned a value but never used.","'AiFillEdit' is defined but never used.","'Divider' is defined but never used.","no-global-assign","no-unsafe-negation"]