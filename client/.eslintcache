[{"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\SignleTopicPage.tsx":"1","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\QuestionBox.tsx":"2","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\reportWebVitals.ts":"3","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Topics.tsx":"4","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\generated\\graphql.tsx":"5","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\QuestionForm.tsx":"6","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\OptionsPopover.tsx":"7","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Profile.tsx":"8","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\App.tsx":"9","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\index.tsx":"10","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\theme.tsx":"11","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Header2.tsx":"12","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\Skeleton.tsx":"13","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\routes.tsx":"14","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Footer.tsx":"15","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\Spinners.tsx":"16","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Modal.tsx":"17","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\LinkBox.tsx":"18","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Register.tsx":"19","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Home.tsx":"20","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Test.tsx":"21","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Login.tsx":"22","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\LoginFrom.tsx":"23","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Message.tsx":"24","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\ProfileModal.tsx":"25","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\InteractionsSection.tsx":"26","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\HeaderComp.tsx":"27","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Thread.tsx":"28","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\accessToken.ts":"29","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\RegisterForm.tsx":"30","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\ThreadSortingBtns.tsx":"31","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\LikeSection.tsx":"32","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\TopicBox.tsx":"33","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\AddReplyModal.tsx":"34"},{"size":3257,"mtime":1627623646098,"results":"35","hashOfConfig":"36"},{"size":5123,"mtime":1627893214221,"results":"37","hashOfConfig":"36"},{"size":425,"mtime":1607784182783,"results":"38","hashOfConfig":"36"},{"size":1517,"mtime":1627876169815,"results":"39","hashOfConfig":"36"},{"size":32273,"mtime":1627510340306,"results":"40","hashOfConfig":"36"},{"size":4869,"mtime":1627968328596,"results":"41","hashOfConfig":"36"},{"size":1957,"mtime":1627163448967,"results":"42","hashOfConfig":"36"},{"size":3536,"mtime":1627976758567,"results":"43","hashOfConfig":"36"},{"size":1393,"mtime":1627968017989,"results":"44","hashOfConfig":"36"},{"size":3499,"mtime":1627624100023,"results":"45","hashOfConfig":"36"},{"size":247,"mtime":1627512237368,"results":"46","hashOfConfig":"36"},{"size":6049,"mtime":1627980709552,"results":"47","hashOfConfig":"36"},{"size":327,"mtime":1627264169528,"results":"48","hashOfConfig":"36"},{"size":991,"mtime":1627334030301,"results":"49","hashOfConfig":"36"},{"size":415,"mtime":1627886332356,"results":"50","hashOfConfig":"36"},{"size":382,"mtime":1626377368932,"results":"51","hashOfConfig":"36"},{"size":1487,"mtime":1627974058684,"results":"52","hashOfConfig":"36"},{"size":718,"mtime":1627588144108,"results":"53","hashOfConfig":"36"},{"size":1661,"mtime":1627078858743,"results":"54","hashOfConfig":"36"},{"size":4027,"mtime":1627970134373,"results":"55","hashOfConfig":"36"},{"size":647,"mtime":1627079266812,"results":"56","hashOfConfig":"36"},{"size":2848,"mtime":1627894047717,"results":"57","hashOfConfig":"36"},{"size":2357,"mtime":1627702064806,"results":"58","hashOfConfig":"36"},{"size":246,"mtime":1627544267954,"results":"59","hashOfConfig":"36"},{"size":1303,"mtime":1627974102931,"results":"60","hashOfConfig":"36"},{"size":690,"mtime":1627265277928,"results":"61","hashOfConfig":"36"},{"size":736,"mtime":1627274854190,"results":"62","hashOfConfig":"36"},{"size":5726,"mtime":1627968898492,"results":"63","hashOfConfig":"36"},{"size":231,"mtime":1607976985837,"results":"64","hashOfConfig":"36"},{"size":3781,"mtime":1627893990669,"results":"65","hashOfConfig":"36"},{"size":1251,"mtime":1627512671435,"results":"66","hashOfConfig":"36"},{"size":1842,"mtime":1627893649452,"results":"67","hashOfConfig":"36"},{"size":1112,"mtime":1627876185017,"results":"68","hashOfConfig":"36"},{"size":2228,"mtime":1627974312146,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"73"},"11skg4y",{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\SignleTopicPage.tsx",["149"],"import { Box, Flex } from \"@chakra-ui/react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { useListTopicThreadsLazyQuery, useListTopicThreadsQuery } from \"../generated/graphql\";\r\nimport { QuestionBox } from \"../smallComps/QuestionBox\";\r\nimport { FastBigSpinner } from \"../smallComps/Spinners\";\r\nimport { topicsQuery } from \"./Topics\";\r\nimport { HeaderComp } from \"../smallComps/HeaderComp\";\r\n\r\ninterface SideNavBoxProps {\r\n  topics?: string[];\r\n}\r\n\r\nexport const SideNavBox: React.FC<SideNavBoxProps> = ({ topics }) => {\r\n  const router = useHistory();\r\n  return (\r\n    <Flex\r\n      flex=\"1\"\r\n      p=\"0.5rem\"\r\n      flexDirection=\"column\"\r\n      h=\"auto\"\r\n      marginX=\"8px\"\r\n      shadow=\"base\"\r\n    >\r\n      {topics &&\r\n        topics.map((topic, index) => {\r\n          return (\r\n            <Box\r\n              as=\"button\"\r\n              onClick={() => {\r\n                router.push(`/topics/${topic}`, { topics });\r\n              }}\r\n              key={index}\r\n              textAlign=\"center\"\r\n              p=\"0.5rem\"\r\n              bgColor=\"green.300\"\r\n              color=\"white\"\r\n              borderRadius=\"-20px\"\r\n              cursor=\"pointer\"\r\n              _hover={{\r\n                bgColor: \"blue.200\",\r\n              }}\r\n              marginY=\"3px\"\r\n            >\r\n              <Flex justify=\"center\" align=\"center\">\r\n                {topic}\r\n              </Flex>\r\n            </Box>\r\n          );\r\n        })}\r\n    </Flex>\r\n  );\r\n};\r\n\r\ninterface SignleTopicPageProps {}\r\nexport const SignleTopicPage: React.FC<SignleTopicPageProps> = () => {\r\n  const params: any = useParams();\r\n  const topicsArr = useQuery(topicsQuery);\r\n  const [ListTopicThreadsQuery, { data, loading }] = useListTopicThreadsLazyQuery({\r\n    fetchPolicy: \"cache-and-network\",\r\n    variables: {\r\n      topic: params.topicName,\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    if (isMounted === true) {\r\n      ListTopicThreadsQuery();\r\n    }\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  let ThreadsComp: any = null;\r\n  if (loading) {\r\n    ThreadsComp = <FastBigSpinner />;\r\n  } else if (data) {\r\n    ThreadsComp = (\r\n      <>\r\n        {data.lisTopicThreads?.map((thread, idx) => {\r\n          return (\r\n            <QuestionBox\r\n              key={idx}\r\n              fromTopicPage={true}\r\n              question={thread.question}\r\n              threadId={thread.id}\r\n              username={thread.threadCreator}\r\n              createdAt={thread.createdAt}\r\n              repliesCount={thread.replies?.length}\r\n            />\r\n          );\r\n        })}\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <HeaderComp threadsHeader={`${params.topicName} Threads`} />\r\n\r\n      <Flex marginRight=\"auto\" marginLeft=\"auto\" marginTop=\"2rem\">\r\n        <Flex\r\n          flexDirection=\"column\"\r\n          alignItems=\"center\"\r\n          flex=\"7\"\r\n          shadow=\"base\"\r\n          p=\"1rem\"\r\n        >\r\n          {ThreadsComp}\r\n        </Flex>\r\n        {topicsArr.data && <SideNavBox topics={topicsArr.data.listTopics} />}\r\n      </Flex>\r\n    </>\r\n  );\r\n};\r\n",["150","151"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\QuestionBox.tsx",[],["152","153"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\reportWebVitals.ts",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Topics.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\generated\\graphql.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\QuestionForm.tsx",["154"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\OptionsPopover.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Profile.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\App.tsx",["155","156"],"import React, { useState, useEffect, useContext, createContext } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { setAccessToken } from \"./accessToken\";\n\nimport { Header2 } from \"./components/Header2\";\nimport { Footer } from \"./components/Footer\";\nimport { Skeleton } from \"./smallComps/Skeleton\";\n\n\nimport { BaseRouter } from \"./routes\";\nimport { Container } from \"@chakra-ui/react\";\n\nimport {FastBigSpinner} from \"./smallComps/Spinners\"\n\n\n// const User = createContext(null)\n// const UserContext = () => {\n//   return useContext(User)\n// }\n\nfunction App() {\n  const [appLoading, setAppLoading] = useState(true);\n\n  useEffect(() => {\n    fetch(\"http://localhost:8000/refresh_token\", {\n      credentials: \"include\",\n      method: \"POST\",\n    }).then(async (x) => {\n      const resposne = await x.json();\n      setAccessToken(resposne.accessToken);\n      setAppLoading(false);\n    });\n  }, []);\n\n  return (\n    <div className=\"app\">\n      {appLoading ? (\n        <Container marginLeft=\"auto\" marginRight=\"auto\" marginTop=\"10rem\">\n          <FastBigSpinner />\n        </Container>\n      ) : (\n        <>\n          <BrowserRouter>\n            {/* <Header /> */}\n            <Header2 />\n            <Skeleton>\n              <BaseRouter />\n            </Skeleton>\n            <Footer />\n          </BrowserRouter>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\index.tsx",["157","158"],"import \"./index.css\";\nimport App from \"./App\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport {theme} from \"./theme\"\n\n\nimport {\n  ApolloProvider,\n  ApolloClient,\n  InMemoryCache,\n  gql,\n  createHttpLink,\n  HttpLink,\n  ApolloLink,\n  Observable,\n} from \"@apollo/client\";\nimport { onError } from \"@apollo/client/link/error\";\nimport { TokenRefreshLink } from \"apollo-link-token-refresh\";\nimport jwtDecode from \"jwt-decode\";\n\nimport { getAccessToken, setAccessToken } from \"./accessToken\";\n\n// import { onError } from '@apollo/client/link/error';\n\n// const authMiddlewareLink = new ApolloLink((operation, forward) => {\n//   const accessToken = getAccessToken()\n//   operation.setContext({\n//     headers: {\n//       authorization: `Bearer ${accessToken}`,\n//     },\n//   })\n//   return forward(operation);\n// });\n\nconst cache = new InMemoryCache();\nconst httpLink = new HttpLink({\n  uri: \"http://localhost:8000/graphql\",\n  credentials: \"include\",\n  // useGETForQueries: true,\n});\n\nconst requestLink = new ApolloLink(\n  (operation, forward) =>\n    new Observable((observer) => {\n      let handle: any;\n      Promise.resolve(operation)\n        .then((operation) => {\n          const accessToken = getAccessToken();\n          if (accessToken) {\n            operation.setContext({\n              headers: {\n                authorization: `Bearer ${accessToken}`,\n              },\n            });\n          }\n        })\n        .then(() => {\n          handle = forward(operation).subscribe({\n            next: observer.next.bind(observer),\n            error: observer.error.bind(observer),\n            complete: observer.complete.bind(observer),\n          });\n        })\n        .catch(observer.error.bind(observer));\n\n      return () => {\n        if (handle) handle.unsubscribe();\n      };\n    })\n);\n\nconst tokenRefreshLink = new TokenRefreshLink({\n  accessTokenField: \"accessToken\",\n  isTokenValidOrUndefined: () => {\n    const token = getAccessToken();\n    if (!token) {\n      return true;\n    }\n    try {\n      const tokenDecoded: any = jwtDecode(token);\n      const expDate: number = tokenDecoded.exp;\n      if (Date.now() >= expDate * 1000) {\n        return false;\n      } else {\n        return true;\n      }\n    } catch {\n      return false;\n    }\n  },\n  fetchAccessToken: () => {\n    return fetch(\"http://localhost:8000/refresh_token\", {\n      method: \"POST\",\n      credentials: \"include\",\n    });\n  },\n  handleFetch: (accessToken) => {\n    setAccessToken(accessToken);\n  },\n  handleError: (err) => {\n    console.warn(\"Your refresh token is invalid. Try to relogin\");\n    console.error(err);\n  },\n});\n\nexport const client = new ApolloClient({\n  cache,\n\n  link: ApolloLink.from([\n    onError(({ graphQLErrors, networkError }) => {\n      if (graphQLErrors) {\n        graphQLErrors.map(({ message, locations, path }) =>\n          console.log(\n            `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`\n          )\n        );\n      }\n\n      if (networkError) {\n        console.log(`[Network error]: ${networkError}`);\n      }\n    }),\n    tokenRefreshLink,\n    requestLink,\n    httpLink,\n  ]),\n});\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider theme={theme}>\n      <ApolloProvider client={client}>\n        <App />\n      </ApolloProvider>\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n\nreportWebVitals();\n",["159","160"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\theme.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Header2.tsx",["161","162"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Flex,\r\n  Button,\r\n  useDisclosure,\r\n  Box,\r\n  Tooltip,\r\n  Center,\r\n  Text,\r\n} from \"@chakra-ui/react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  IsUserLoggedInDocument,\r\n  IsUserLoggedInQuery,\r\n  useIsUserLoggedInQuery,\r\n  useLogoutMutation,\r\n} from \"../generated/graphql\";\r\n\r\nimport { setAccessToken } from \"../accessToken\";\r\nimport { AiFillHome, AiOutlineUser } from \"react-icons/ai\";\r\nimport { BiBookContent, BiNotification, BiLogOut, BiBell } from \"react-icons/bi\";\r\n\r\nimport { ModalComponent } from \"../components/Modal\";\r\nimport { LinkBox } from \"../smallComps/LinkBox\";\r\nimport { SmallSpinner } from \"../smallComps/Spinners\";\r\n\r\ninterface ProfileButtonProps {\r\n  isUserLogged: boolean;\r\n}\r\n\r\nconst ProfileButton: React.FC<ProfileButtonProps> = ({ isUserLogged }) => {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const { onClose } = useDisclosure({\r\n    onClose: () => setShowModal(false),\r\n  });\r\n  const [screenWidth, setScreenWidth] = useState(window.innerWidth);\r\n\r\n  const router = useHistory();\r\n  const handleProfileClick = () => {\r\n    if (isUserLogged === true) {\r\n      router.push(\"/profile\");\r\n    } else {\r\n      setShowModal(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      console.log(window.innerWidth);\r\n      setScreenWidth(window.innerWidth);\r\n    };\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <ModalComponent showModal={showModal} onClose={onClose} />\r\n      <Button\r\n        id=\"profile-btn\"\r\n        onClick={() => handleProfileClick()}\r\n        height={[\"30%\", \"30%\", \"50%\", \"50%\"]}\r\n        fontSize={[\"sm\", \"sm\", \"medium\", \"medium\"]}\r\n        fontWeight=\"bold\"\r\n        bgColor=\"green.400\"\r\n        borderRadius=\"-10px\"\r\n        _hover={{\r\n          bgColor: \"green.500\",\r\n        }}\r\n        mx={{\r\n          base: \"0.2rem\",\r\n          md: \"0.4rem\",\r\n        }}\r\n      >\r\n        <AiOutlineUser size=\"20px\" />\r\n        {screenWidth > 800 && <Box marginLeft=\"4px\">profile</Box>}\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\ninterface LogoutButtonProps extends ProfileButtonProps {}\r\nconst LogoutButton: React.FC<LogoutButtonProps> = ({ isUserLogged }) => {\r\n  const [logoutUser] = useLogoutMutation();\r\n  const history = useHistory();\r\n  const [screenWidth, setScreenWidth] = useState(window.innerWidth);\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      console.log(window.innerWidth);\r\n      setScreenWidth(window.innerWidth);\r\n    }\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  const handleLogout = async () => {\r\n    if (isUserLogged) {\r\n      setAccessToken(\"\");\r\n      await logoutUser({\r\n        update: async (cache, _) => {\r\n          cache.writeQuery<IsUserLoggedInQuery>({\r\n            query: IsUserLoggedInDocument,\r\n            data: {\r\n              isUserLoggedIn: false,\r\n            },\r\n          });\r\n        },\r\n      });\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Button\r\n      onClick={() => handleLogout()}\r\n      height={[\"30%\", \"30%\", \"50%\", \"50%\"]}\r\n      fontSize={[\"sm\", \"sm\", \"medium\", \"medium\"]}\r\n      fontWeight=\"bold\"\r\n      bgColor=\"green.400\"\r\n      borderRadius=\"-10px\"\r\n      _hover={{\r\n        bgColor: \"green.500\",\r\n      }}\r\n      mx=\"0.4rem\"\r\n    >\r\n      {screenWidth > 800 ? <Text>Logout</Text> : <BiLogOut size=\"20px\" />}\r\n    </Button>\r\n  );\r\n};\r\n\r\nconst NotificationBtn = () => {\r\n  return (\r\n    <>\r\n      <Tooltip label=\"show notifications\">\r\n        <Button\r\n          onClick={() => console.log(\"notifyyyyyyy\")}\r\n          height={[\"30%\", \"30%\", \"50%\", \"50%\"]}\r\n          fontSize={[\"sm\", \"sm\", \"medium\", \"medium\"]}\r\n          fontWeight=\"bold\"\r\n          bgColor=\"green.400\"\r\n          borderRadius=\"40px\"\r\n          _hover={{\r\n            bgColor: \"green.500\",\r\n          }}\r\n          mx=\"0.4rem\"\r\n          pos=\"relative\"\r\n        >\r\n          <Box\r\n            pos=\"absolute\"\r\n            top=\"2px\"\r\n            right=\"2px\"\r\n            fontSize=\"1.2rem\"\r\n            textColor=\"red.500\"\r\n            fontWeight=\"bold\"\r\n            width=\"100%\"\r\n          >\r\n            \r\n          </Box>\r\n          <BiBell size=\"22px\" />\r\n        </Button>\r\n      </Tooltip>\r\n    </>\r\n  );\r\n};\r\ninterface Header2Props {}\r\nexport const Header2: React.FC<Header2Props> = () => {\r\n  // const { data, loading, error } = useMeQuery();\r\n  const loginState = useIsUserLoggedInQuery({\r\n    fetchPolicy: \"network-only\",\r\n  });\r\n\r\n  return (\r\n    <Flex\r\n      id=\"header-box\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      bgColor=\"green.300\"\r\n      fontSize={[\"sm\", \"md\", \"large\", \"xl\"]}\r\n      fontWeight=\"bold\"\r\n      color=\"white\"\r\n      width=\"100%\"\r\n      height={[\"70px\", \"70px\", \"100px\", \"100px\"]}\r\n    >\r\n      <Flex\r\n        ml={{\r\n          small: \"0.1rem\",\r\n          base: \"0.5rem\",\r\n        }}\r\n        position=\"absolute\"\r\n        left={{ base: \"1px\", md: \"1rem\" }}\r\n      >\r\n        <LinkBox route=\"Home\" icon={<AiFillHome width=\"20px\" />} />\r\n        <LinkBox route=\"topics\" icon={<BiBookContent width=\"20px\" />} />\r\n      </Flex>\r\n\r\n      <Flex\r\n        position=\"absolute\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        height=\"100px\"\r\n        right={{ base: \"1px\", md: \"1rem\" }}\r\n      >\r\n        {loginState && loginState.loading && (\r\n          <Box marginLeft=\"5px\">\r\n            <SmallSpinner />\r\n          </Box>\r\n        )}\r\n        {loginState && !loginState.data?.isUserLoggedIn ? (\r\n          <ProfileButton isUserLogged={loginState.data?.isUserLoggedIn!} />\r\n        ) : (\r\n          <>\r\n            <NotificationBtn />\r\n            <ProfileButton isUserLogged={loginState.data?.isUserLoggedIn!} />\r\n            <LogoutButton isUserLogged={loginState.data?.isUserLoggedIn!} />\r\n          </>\r\n        )}\r\n      </Flex>\r\n    </Flex>\r\n  );\r\n};\r\n","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\Skeleton.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\routes.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Footer.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\Spinners.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Modal.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\LinkBox.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Register.tsx",["163"],"import React, { useState } from \"react\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport { useRegisterMutation } from \"../generated/graphql\";\r\n\r\nexport const Register: React.FC<RouteComponentProps> = ({}) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const [register] = useRegisterMutation();\r\n\r\n  const registerNewUser = (\r\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>\r\n  ) => {\r\n    e.preventDefault();\r\n    \r\n    if (!username || !email || !password) {\r\n      return console.log(\"enter some data\");\r\n    }\r\n    register({\r\n      variables: {\r\n        username,\r\n        email,\r\n        password,\r\n      },\r\n    }).then((response) => {\r\n      console.log(response);\r\n    });\r\n    setEmail(\"\");\r\n    setUsername(\"\");\r\n    setPassword(\"\");\r\n  };\r\n  return (\r\n    <div>\r\n      <form className=\"signup-form\">\r\n        <label htmlFor=\"username\">username: </label>\r\n        <input\r\n          id=\"username\"\r\n          type=\"text\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n        />\r\n        <label htmlFor=\"password\">password: </label>\r\n        <input\r\n          id=\"password\"\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <label htmlFor=\"email\">email: </label>\r\n        <input\r\n          type=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <button onClick={(e) => registerNewUser(e)}>Register</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n",["164","165"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Home.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Test.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Login.tsx",["166","167","168","169","170","171","172","173","174","175","176","177","178"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\LoginFrom.tsx",["179","180"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Message.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\ProfileModal.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\InteractionsSection.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\HeaderComp.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Thread.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\accessToken.ts",["181"],"import jwtDecode from \"jwt-decode\"\r\n\r\nexport const getAccessToken = () => {\r\n    return localStorage.getItem(\"accessToken\")\r\n}\r\n\r\nexport const setAccessToken = (token: string) => {\r\n    localStorage.setItem(\"accessToken\", token)\r\n}",["182","183"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\RegisterForm.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\ThreadSortingBtns.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\LikeSection.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\TopicBox.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\AddReplyModal.tsx",[],{"ruleId":"184","severity":1,"message":"185","line":5,"column":40,"nodeType":"186","messageId":"187","endLine":5,"endColumn":64},{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","replacedBy":"191"},{"ruleId":"188","replacedBy":"192"},{"ruleId":"190","replacedBy":"193"},{"ruleId":"184","severity":1,"message":"194","line":8,"column":3,"nodeType":"186","messageId":"187","endLine":8,"endColumn":17},{"ruleId":"184","severity":1,"message":"195","line":1,"column":38,"nodeType":"186","messageId":"187","endLine":1,"endColumn":48},{"ruleId":"184","severity":1,"message":"196","line":1,"column":50,"nodeType":"186","messageId":"187","endLine":1,"endColumn":63},{"ruleId":"184","severity":1,"message":"197","line":14,"column":3,"nodeType":"186","messageId":"187","endLine":14,"endColumn":6},{"ruleId":"184","severity":1,"message":"198","line":15,"column":3,"nodeType":"186","messageId":"187","endLine":15,"endColumn":17},{"ruleId":"188","replacedBy":"199"},{"ruleId":"190","replacedBy":"200"},{"ruleId":"184","severity":1,"message":"201","line":8,"column":3,"nodeType":"186","messageId":"187","endLine":8,"endColumn":9},{"ruleId":"184","severity":1,"message":"202","line":21,"column":25,"nodeType":"186","messageId":"187","endLine":21,"endColumn":39},{"ruleId":"203","severity":1,"message":"204","line":5,"column":57,"nodeType":"205","messageId":"206","endLine":5,"endColumn":59},{"ruleId":"188","replacedBy":"207"},{"ruleId":"190","replacedBy":"208"},{"ruleId":"184","severity":1,"message":"209","line":1,"column":27,"nodeType":"186","messageId":"187","endLine":1,"endColumn":36},{"ruleId":"184","severity":1,"message":"210","line":1,"column":38,"nodeType":"186","messageId":"187","endLine":1,"endColumn":45},{"ruleId":"184","severity":1,"message":"211","line":1,"column":47,"nodeType":"186","messageId":"187","endLine":1,"endColumn":58},{"ruleId":"184","severity":1,"message":"212","line":5,"column":10,"nodeType":"186","messageId":"187","endLine":5,"endColumn":32},{"ruleId":"184","severity":1,"message":"213","line":5,"column":34,"nodeType":"186","messageId":"187","endLine":5,"endColumn":53},{"ruleId":"184","severity":1,"message":"214","line":5,"column":55,"nodeType":"186","messageId":"187","endLine":5,"endColumn":65},{"ruleId":"184","severity":1,"message":"215","line":5,"column":67,"nodeType":"186","messageId":"187","endLine":5,"endColumn":74},{"ruleId":"184","severity":1,"message":"216","line":5,"column":76,"nodeType":"186","messageId":"187","endLine":5,"endColumn":98},{"ruleId":"184","severity":1,"message":"217","line":6,"column":10,"nodeType":"186","messageId":"187","endLine":6,"endColumn":21},{"ruleId":"184","severity":1,"message":"218","line":12,"column":12,"nodeType":"186","messageId":"187","endLine":12,"endColumn":17},{"ruleId":"184","severity":1,"message":"219","line":12,"column":19,"nodeType":"186","messageId":"187","endLine":12,"endColumn":27},{"ruleId":"184","severity":1,"message":"220","line":18,"column":21,"nodeType":"186","messageId":"187","endLine":18,"endColumn":25},{"ruleId":"184","severity":1,"message":"221","line":18,"column":27,"nodeType":"186","messageId":"187","endLine":18,"endColumn":33},{"ruleId":"184","severity":1,"message":"209","line":1,"column":27,"nodeType":"186","messageId":"187","endLine":1,"endColumn":36},{"ruleId":"184","severity":1,"message":"222","line":21,"column":10,"nodeType":"186","messageId":"187","endLine":21,"endColumn":21},{"ruleId":"184","severity":1,"message":"223","line":1,"column":8,"nodeType":"186","messageId":"187","endLine":1,"endColumn":17},{"ruleId":"188","replacedBy":"224"},{"ruleId":"190","replacedBy":"225"},"@typescript-eslint/no-unused-vars","'useListTopicThreadsQuery' is defined but never used.","Identifier","unusedVar","no-native-reassign",["226"],"no-negated-in-lhs",["227"],["226"],["227"],"'useMeLazyQuery' is defined but never used.","'useContext' is defined but never used.","'createContext' is defined but never used.","'gql' is defined but never used.","'createHttpLink' is defined but never used.",["226"],["227"],"'Center' is defined but never used.","'BiNotification' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected",["226"],["227"],"'useEffect' is defined but never used.","'useMemo' is defined but never used.","'useCallback' is defined but never used.","'IsUserLoggedInDocument' is defined but never used.","'IsUserLoggedInQuery' is defined but never used.","'MeDocument' is defined but never used.","'MeQuery' is defined but never used.","'useIsUserLoggedInQuery' is defined but never used.","'ApolloError' is defined but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'data' is assigned a value but never used.","'client' is assigned a value but never used.","'showMessage' is assigned a value but never used.","'jwtDecode' is defined but never used.",["226"],["227"],"no-global-assign","no-unsafe-negation"]