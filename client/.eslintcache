[{"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\SignleTopicPage.tsx":"1","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\QuestionBox.tsx":"2","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\reportWebVitals.ts":"3","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Topics.tsx":"4","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\generated\\graphql.tsx":"5","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\QuestionForm.tsx":"6","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\OptionsPopover.tsx":"7","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Profile.tsx":"8","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\App.tsx":"9","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\index.tsx":"10","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\theme.tsx":"11","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\Skeleton.tsx":"12","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\routes.tsx":"13","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Footer.tsx":"14","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\Spinners.tsx":"15","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Modal.tsx":"16","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\LinkBox.tsx":"17","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Register.tsx":"18","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Home.tsx":"19","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Test.tsx":"20","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Login.tsx":"21","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\LoginFrom.tsx":"22","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Message.tsx":"23","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\ProfileModal.tsx":"24","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\InteractionsSection.tsx":"25","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\HeaderComp.tsx":"26","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Thread.tsx":"27","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\accessToken.ts":"28","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\RegisterForm.tsx":"29","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\ThreadSortingBtns.tsx":"30","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\LikeSection.tsx":"31","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\TopicBox.tsx":"32","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\AddReplyModal.tsx":"33","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Header.tsx":"34","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\LogoutBtn.tsx":"35","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\NotificationBtn.tsx":"36","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\ProfileBtn.tsx":"37","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\User.tsx":"38","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\hooks\\usePagintation.tsx":"39","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\PagintationSection.tsx":"40","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\SideNavSection.tsx":"41","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\SettingsSections.tsx":"42","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\hooks\\useGetUserThreads.tsx":"43","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Notifications.tsx":"44"},{"size":3301,"mtime":1629679386581,"results":"45","hashOfConfig":"46"},{"size":5426,"mtime":1628443032045,"results":"47","hashOfConfig":"46"},{"size":425,"mtime":1607784182783,"results":"48","hashOfConfig":"46"},{"size":1556,"mtime":1629412690208,"results":"49","hashOfConfig":"46"},{"size":44745,"mtime":1629500870186,"results":"50","hashOfConfig":"46"},{"size":5230,"mtime":1629702416877,"results":"51","hashOfConfig":"46"},{"size":1957,"mtime":1627163448967,"results":"52","hashOfConfig":"46"},{"size":5774,"mtime":1629596635537,"results":"53","hashOfConfig":"46"},{"size":1333,"mtime":1628236653053,"results":"54","hashOfConfig":"46"},{"size":4105,"mtime":1629415410173,"results":"55","hashOfConfig":"46"},{"size":247,"mtime":1627512237368,"results":"56","hashOfConfig":"46"},{"size":327,"mtime":1627264169528,"results":"57","hashOfConfig":"46"},{"size":1224,"mtime":1629594973558,"results":"58","hashOfConfig":"46"},{"size":415,"mtime":1627886332356,"results":"59","hashOfConfig":"46"},{"size":382,"mtime":1626377368932,"results":"60","hashOfConfig":"46"},{"size":1487,"mtime":1627974058684,"results":"61","hashOfConfig":"46"},{"size":718,"mtime":1627588144108,"results":"62","hashOfConfig":"46"},{"size":1659,"mtime":1627894070983,"results":"63","hashOfConfig":"46"},{"size":5025,"mtime":1629673735016,"results":"64","hashOfConfig":"46"},{"size":647,"mtime":1627079266812,"results":"65","hashOfConfig":"46"},{"size":2848,"mtime":1628247100922,"results":"66","hashOfConfig":"46"},{"size":2412,"mtime":1629415145739,"results":"67","hashOfConfig":"46"},{"size":246,"mtime":1627544267954,"results":"68","hashOfConfig":"46"},{"size":1303,"mtime":1627974102931,"results":"69","hashOfConfig":"46"},{"size":690,"mtime":1627265277928,"results":"70","hashOfConfig":"46"},{"size":715,"mtime":1628171106149,"results":"71","hashOfConfig":"46"},{"size":5726,"mtime":1627968898492,"results":"72","hashOfConfig":"46"},{"size":231,"mtime":1607976985837,"results":"73","hashOfConfig":"46"},{"size":3781,"mtime":1627893990669,"results":"74","hashOfConfig":"46"},{"size":1251,"mtime":1627512671435,"results":"75","hashOfConfig":"46"},{"size":1842,"mtime":1627893649452,"results":"76","hashOfConfig":"46"},{"size":1109,"mtime":1629543412677,"results":"77","hashOfConfig":"46"},{"size":2228,"mtime":1627974312146,"results":"78","hashOfConfig":"46"},{"size":2128,"mtime":1628062143677,"results":"79","hashOfConfig":"46"},{"size":1786,"mtime":1628061825273,"results":"80","hashOfConfig":"46"},{"size":3009,"mtime":1629702882218,"results":"81","hashOfConfig":"46"},{"size":1732,"mtime":1629432833319,"results":"82","hashOfConfig":"46"},{"size":1612,"mtime":1628247124703,"results":"83","hashOfConfig":"46"},{"size":1991,"mtime":1629348745958,"results":"84","hashOfConfig":"46"},{"size":2800,"mtime":1629682444353,"results":"85","hashOfConfig":"46"},{"size":1591,"mtime":1629678590891,"results":"86","hashOfConfig":"46"},{"size":4151,"mtime":1628429422446,"results":"87","hashOfConfig":"46"},{"size":864,"mtime":1629702309907,"results":"88","hashOfConfig":"46"},{"size":1576,"mtime":1629683066713,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"93"},"11skg4y",{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"96"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"93"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"138"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"93"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"93"},"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\SignleTopicPage.tsx",["194","195"],"/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Flex } from \"@chakra-ui/react\";\r\nimport { useParams, useLocation } from \"react-router-dom\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  useGetTopicThreadsNumLazyQuery,\r\n  useListTopicThreadsLazyQuery,\r\n} from \"../generated/graphql\";\r\nimport { QuestionBox } from \"../smallComps/QuestionBox\";\r\nimport { FastBigSpinner } from \"../smallComps/Spinners\";\r\nimport { HeaderComp } from \"../smallComps/HeaderComp\";\r\nimport { Pagination } from \"../smallComps/PagintationSection\";\r\nimport { SideTopicsSection } from \"../smallComps/SideNavSection\";\r\n\r\nconst pageSize = 3;\r\ninterface SignleTopicPageProps {}\r\nexport const SignleTopicPage: React.FC<SignleTopicPageProps> = () => {\r\n  const params: { topicName: string } = useParams();\r\n  const location = useLocation()\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [getTopicThreadsNum, getTopicThreadsNumOptions] =\r\n    useGetTopicThreadsNumLazyQuery({\r\n      fetchPolicy: \"network-only\",\r\n      variables: {\r\n        topic: params.topicName,\r\n      },\r\n    });\r\n\r\n  const [ListTopicThreadsQuery, { data, loading, refetch, fetchMore }] =\r\n    useListTopicThreadsLazyQuery({\r\n      fetchPolicy: \"network-only\",\r\n      notifyOnNetworkStatusChange: true,\r\n      variables: {\r\n        topic: params.topicName,\r\n        offset: (currentPage - 1) * pageSize,\r\n        limit: pageSize,\r\n      },\r\n    });\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    if (isMounted === true) {\r\n      getTopicThreadsNum();\r\n      ListTopicThreadsQuery();\r\n    }\r\n    return () => {\r\n      isMounted = false;\r\n      setCurrentPage(1);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      setCurrentPage(1);\r\n    };\r\n  }, [params.topicName]);\r\n\r\n  useEffect(() => {\r\n    if (data?.lisTopicThreads) {\r\n      refetch!({\r\n        topic: params.topicName,\r\n        offset: (currentPage - 1) * pageSize,\r\n        limit: pageSize,\r\n      });\r\n    }\r\n  }, [currentPage, setCurrentPage]);\r\n\r\n  let ThreadsComp: any = null;\r\n  if (loading) {\r\n    ThreadsComp = <FastBigSpinner />;\r\n  } else if (data) {\r\n    ThreadsComp = (\r\n      <>\r\n        {data.lisTopicThreads?.map((thread, idx) => {\r\n          return (\r\n            <QuestionBox\r\n              key={idx}\r\n              fromTopicPage={true}\r\n              question={thread.question}\r\n              threadId={thread.id}\r\n              username={thread.threadCreator}\r\n              createdAt={thread.createdAt}\r\n              repliesCount={thread.replies?.length}\r\n              fromSingleTopicPage={true}\r\n            />\r\n          );\r\n        })}\r\n        <Pagination\r\n          currentPage={currentPage}\r\n          onPageChange={(page) => setCurrentPage(page)}\r\n          totalCount={getTopicThreadsNumOptions.data?.getTopicThreadsNum!}\r\n          pageSize={pageSize}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <HeaderComp header={`${params.topicName} Threads`} />\r\n      <Flex marginRight=\"auto\" marginLeft=\"auto\" marginTop=\"2rem\">\r\n        <Flex\r\n          flexDirection=\"column\"\r\n          alignItems=\"center\"\r\n          flex=\"7\"\r\n          shadow=\"base\"\r\n          p=\"1rem\"\r\n        >\r\n          {ThreadsComp}\r\n        </Flex>\r\n        <SideTopicsSection />\r\n      </Flex>\r\n    </>\r\n  );\r\n};\r\n",["196","197"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\QuestionBox.tsx",[],["198","199"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\reportWebVitals.ts",[],["200","201"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Topics.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\generated\\graphql.tsx",[],["202","203"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\QuestionForm.tsx",["204","205"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\OptionsPopover.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Profile.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\App.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\index.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\theme.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\Skeleton.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\routes.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Footer.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\Spinners.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Modal.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\LinkBox.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Register.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Home.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Test.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Login.tsx",["206","207","208","209","210","211","212","213","214","215","216","217","218"],"import React, { useState, useEffect, useMemo, useCallback } from 'react'\r\nimport { RouteComponentProps } from \"react-router-dom\"\r\nimport { setAccessToken } from '../accessToken'\r\nimport { Message } from '../components/Message'\r\nimport { IsUserLoggedInDocument, IsUserLoggedInQuery, MeDocument, MeQuery, useIsUserLoggedInQuery, useLoginMutation } from '../generated/graphql'\r\nimport { ApolloError } from \"@apollo/client/errors\"\r\n\r\n\r\nexport const Login: React.FC<RouteComponentProps> = ({ history }) => {\r\n\r\n    const [username, setUsername] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [showMessage, setShowMessage] = useState({\r\n        show: false,\r\n        value: \"\"\r\n    })\r\n    const [login, { data, client }] = useLoginMutation()\r\n\r\n    const loginUser = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n        e.preventDefault()\r\n        try {\r\n\r\n            const response = await login({\r\n                variables: {\r\n                    username,\r\n                    password\r\n                },\r\n                update: (cache, { data }) => {\r\n                    if (!data) {\r\n                        return null;\r\n                    }\r\n                    // cache.writeQuery<MeQuery>({\r\n                    //     query: MeDocument,\r\n                    //     data: {\r\n                    //         me: data.loginUser?.user\r\n                    //     }\r\n                    // })\r\n                    // cache.writeQuery<IsUserLoggedInQuery>({\r\n                    //     query: IsUserLoggedInDocument,\r\n                    //     data: {\r\n                    //         isUserLoggedIn: true\r\n                    //     }\r\n                    // })\r\n\r\n                },\r\n            })\r\n            if (response && response.data) {\r\n                setAccessToken(response.data.loginUser?.accessToken!)\r\n                history.push(\"/\")\r\n                setUsername(\"\")\r\n                setPassword(\"\")\r\n            }\r\n        } catch (error) {\r\n            setShowMessage({ show: true, value: error.message })\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form className=\"login-form\">\r\n                {showMessage.show && (\r\n                    <Message message={showMessage.value} />\r\n                )}\r\n                <label htmlFor=\"username\">username: </label>\r\n                <input id=\"username\" type=\"text\" value={username} onChange={e => setUsername(e.target.value)} />\r\n                <label htmlFor=\"password\">password: </label>\r\n                <input id=\"password\" type=\"password\" value={password} onChange={e => setPassword(e.target.value)} />\r\n                <button onClick={e => loginUser(e)}>Login</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n",["219","220"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\LoginFrom.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Message.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\ProfileModal.tsx",[],["221","222"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\InteractionsSection.tsx",[],["223","224"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\HeaderComp.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Thread.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\accessToken.ts",["225"],"import jwtDecode from \"jwt-decode\"\r\n\r\nexport const getAccessToken = () => {\r\n    return localStorage.getItem(\"accessToken\")\r\n}\r\n\r\nexport const setAccessToken = (token: string) => {\r\n    localStorage.setItem(\"accessToken\", token)\r\n}","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\RegisterForm.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\ThreadSortingBtns.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\LikeSection.tsx",[],["226","227"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\TopicBox.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\AddReplyModal.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Header.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\LogoutBtn.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\NotificationBtn.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\ProfileBtn.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\User.tsx",["228"],"import { Flex } from \"@chakra-ui/react\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useListOtherUserThreadsLazyQuery } from \"../generated/graphql\";\r\nimport { QuestionBox } from \"../smallComps/QuestionBox\";\r\nimport { FastBigSpinner } from \"../smallComps/Spinners\";\r\n\r\ninterface UserProps {}\r\n\r\nexport const User: React.FC<UserProps> = () => {\r\n  const params: { username: string } = useParams();\r\n  const [listOtherThreads, { loading, data }] =\r\n    useListOtherUserThreadsLazyQuery({\r\n      fetchPolicy: \"cache-and-network\",\r\n      variables: {\r\n        username: params.username,\r\n      },\r\n    });\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    isMounted && listOtherThreads();\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n  }, []);\r\n\r\n  let ThreadSection: any = null;\r\n  if (loading) {\r\n    ThreadSection = <FastBigSpinner />;\r\n  } else if (data) {\r\n    ThreadSection = (\r\n      <>\r\n        {data.listOtherUserThreads?.map((thread, idx) => {\r\n          return (\r\n            <QuestionBox\r\n              key={idx}\r\n              threadId={thread.id}\r\n              question={thread.question}\r\n              createdAt={thread.createdAt}\r\n              specializtion={thread.specialization}\r\n              fromUserPage={true}\r\n            />\r\n          );\r\n        })}\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Flex\r\n      marginTop=\"3rem\"\r\n      marginX=\"0.4rem\"\r\n      p=\"1.5rem\"\r\n      boxShadow=\"lg\"\r\n      direction=\"column\"\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n    >\r\n      {ThreadSection}\r\n    </Flex>\r\n  );\r\n};\r\n","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\hooks\\usePagintation.tsx",["229"],"import { useMemo, useState } from \"react\";\r\n\r\nexport const DOTS = \"...\";\r\n\r\nconst range = (start: number, end: number) => {\r\n  const length = end - start + 1;\r\n  return Array.from({ length }, (_, idx) => idx + start);\r\n};\r\n\r\ntype usePaginationProps = {\r\n  pageSize: number;\r\n  currentPage: number;\r\n  totalCount: number;\r\n  siblingCount?: number;\r\n};\r\n\r\nexport const usePagination = ({\r\n  currentPage,\r\n  pageSize,\r\n  totalCount,\r\n  siblingCount = 1,\r\n}: usePaginationProps) => {\r\n  const returnPaginationShape = () => {\r\n    const totalPageCount = Math.ceil(totalCount / pageSize);\r\n    const totalPageNumbers = siblingCount + 5;\r\n\r\n    if (totalPageNumbers >= totalPageCount) {\r\n      return range(1, totalPageCount);\r\n    }\r\n\r\n    const leftSiblingIndex = Math.max(currentPage - siblingCount, 1);\r\n    const rightSiblingIndex = Math.min(\r\n      currentPage + siblingCount,\r\n      totalPageCount\r\n    );\r\n\r\n    const shouldShowLeftDots = leftSiblingIndex > 2;\r\n    const shouldShowRightDots = rightSiblingIndex < totalPageCount - 2;\r\n\r\n    const firstPageIndex = 1;\r\n    const lastPageIndex = totalPageCount;\r\n\r\n    if (!shouldShowLeftDots && shouldShowRightDots) {\r\n      let leftItemCount = 3 + 2 * siblingCount;\r\n      let leftRange = range(1, leftItemCount);\r\n\r\n      return [...leftRange, DOTS, totalPageCount];\r\n    }\r\n\r\n    if (shouldShowLeftDots && !shouldShowRightDots) {\r\n      let rightItemCount = 3 + 2 * siblingCount;\r\n      let rightRange = range(\r\n        totalPageCount - rightItemCount + 1,\r\n        totalPageCount\r\n      );\r\n\r\n      return [firstPageIndex, DOTS, ...rightRange];\r\n    }\r\n\r\n    if (shouldShowLeftDots && shouldShowRightDots) {\r\n      let middleRange = range(leftSiblingIndex, rightSiblingIndex);\r\n\r\n      return [firstPageIndex, DOTS, ...middleRange, DOTS, lastPageIndex];\r\n    }\r\n  };\r\n\r\n  const paginationRange = useMemo(returnPaginationShape, [\r\n    totalCount,\r\n    pageSize,\r\n    siblingCount,\r\n    currentPage,\r\n  ]);\r\n  return paginationRange;\r\n};\r\n","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\PagintationSection.tsx",["230"],"import React, { useEffect, useState, useLayoutEffect } from \"react\";\r\nimport { Box, Button, Center } from \"@chakra-ui/react\";\r\nimport { usePagination, DOTS } from \"../hooks/usePagintation\";\r\nimport { BsThreeDots } from \"react-icons/bs\";\r\n\r\ntype PagintationProps = {\r\n  currentPage: number;\r\n  onPageChange: (value: number) => any;\r\n  totalCount: number;\r\n  pageSize: number;\r\n  siblingCount?: number;\r\n};\r\n\r\nexport const Pagination = (props: PagintationProps) => {\r\n  const { onPageChange, totalCount, siblingCount, currentPage, pageSize } =\r\n    props;\r\n  const [showNumberedSection, setShowNumberedSection] = useState(() => {\r\n    if (window.innerWidth < 800)  return false;\r\n    if (window.innerWidth > 800)  return true;\r\n  });\r\n\r\n  useLayoutEffect(() => {\r\n    const setterFunc = () => {\r\n      if (window.innerWidth < 800) {\r\n        setShowNumberedSection(false)\r\n      } else {\r\n        setShowNumberedSection(true)\r\n      }\r\n    };\r\n    window.addEventListener(\"resize\", setterFunc);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", setterFunc);\r\n    };\r\n  }, []);\r\n\r\n  const paginationRange = usePagination({\r\n    currentPage,\r\n    totalCount,\r\n    siblingCount,\r\n    pageSize,\r\n  })!;\r\n\r\n  let firstPage = 1;\r\n  let lastPage = paginationRange[paginationRange.length - 1];\r\n  // console.log(\"paginationRange\", paginationRange);\r\n\r\n  if (currentPage === 0 || paginationRange.length < 2) {\r\n    return <div></div>;\r\n    // return null;\r\n  }\r\n\r\n  return (\r\n    <Box display=\"flex\" marginTop=\"10px\" width=\"auto\">\r\n      <Button\r\n        borderRadius=\"-15px\"\r\n        bg=\"green.300\"\r\n        marginX=\"2px\"\r\n        color=\"white\"\r\n        isDisabled={currentPage === firstPage}\r\n        onClick={() => onPageChange(currentPage - 1)}\r\n      >\r\n        previous\r\n      </Button>\r\n\r\n      {showNumberedSection === true &&\r\n        paginationRange &&\r\n        paginationRange.map((pageNumber, idx) => {\r\n          if (pageNumber === DOTS)\r\n            return (\r\n              <Center key={idx}>\r\n                <BsThreeDots size=\"15\" />\r\n              </Center>\r\n            );\r\n\r\n          return (\r\n            <Button\r\n              key={idx}\r\n              borderRadius=\"-20px\"\r\n              bg={pageNumber === currentPage ? \"green.900\" : \"green.400\"}\r\n              color=\"white\"\r\n              fontSize=\"1rem\"\r\n              marginX=\"2px\"\r\n              onClick={() => onPageChange(pageNumber as number)}\r\n            >\r\n              {pageNumber}\r\n            </Button>\r\n          );\r\n        })}\r\n      <Button\r\n        borderRadius=\"-15px\"\r\n        bg=\"green.300\"\r\n        color=\"white\"\r\n        marginX=\"2px\"\r\n        isDisabled={currentPage >= lastPage}\r\n        onClick={() => onPageChange(currentPage + 1)}\r\n      >\r\n        next\r\n      </Button>\r\n    </Box>\r\n  );\r\n};\r\n","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\SideNavSection.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\SettingsSections.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\hooks\\useGetUserThreads.tsx",["231"],"import React, { useEffect, useState } from \"react\";\r\n\r\ntype UseGetUserThreadsProps = {\r\n  subData?: any\r\n}\r\nexport const useGetUserThreads = ( { subData }: UseGetUserThreadsProps ) => {\r\n  const [threads, setThreads] = useState<{\r\n    count: number;\r\n    threads: [];\r\n  }>({ count: -1, threads: [] });\r\n\r\n  useEffect(() => { \r\n    console.log(\"props is changed =============>\", subData);\r\n    const getData = async () => {\r\n      const url = \"http://localhost:8000/get_user_threads\";\r\n      const data = await fetch(url, {\r\n        method: \"GET\",\r\n        credentials: \"include\",\r\n        cache: \"no-cache\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      const json = data.ok && await data.json();\r\n      setThreads(json);\r\n    };\r\n    getData();\r\n\r\n  }, [subData]);\r\n\r\n  return threads?.threads && threads;\r\n};\r\n","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Notifications.tsx",["232","233","234"],"/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Flex } from \"@chakra-ui/react\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useMeLazyQuery } from \"../generated/graphql\";\r\nimport { HeaderComp } from \"../smallComps/HeaderComp\";\r\n\r\nexport const NotifItem = () => {\r\n  return (\r\n    <Flex\r\n      p=\"1.5rem\"\r\n      borderRadius=\"-20px\"\r\n      bgColor=\"gray.100\"\r\n      shadow=\"lg\"\r\n      fontSize=\"medium\"\r\n      fontWeight=\"bold\"\r\n      color=\"#335344\"\r\n      borderLeft=\"8px solid #718096\"\r\n      // borderLeft=\"8px solid red\"\r\n      borderLeftRadius=\"4px\"\r\n      _hover={{\r\n        bgColor: \"gray.200\",\r\n      }}\r\n      my=\"0.4rem\"\r\n      pos=\"relative\"\r\n    >\r\n      sasfasfkasmfklasmfklsmfklsmflasmf\r\n    </Flex>\r\n  );\r\n};\r\n\r\ninterface NotificationsProps {}\r\ntype ParamsObject = { userId: string };\r\nexport const Notifications: React.FC<NotificationsProps> = ({}) => {\r\n  const params: ParamsObject = useParams();\r\n  const [userId, setUserId] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setUserId(params.userId);\r\n  }, [params.userId]);\r\n\r\n  return (\r\n    <>\r\n      <HeaderComp header={\"Notifications\"} />\r\n      <Flex marginTop=\"1.5rem\">\r\n        <Flex\r\n          flexDirection=\"column\"\r\n          flex=\"5\"\r\n          minH=\"80vh\"\r\n\r\n          p={[\"0.2rem\", \"0.4rem\", \"1rem\", \"1rem\"]}\r\n        >\r\n          {Array.from({ length: 10 }, (v, k) => k).map((value, idx) => (\r\n            <NotifItem key={idx} />\r\n          ))}\r\n        </Flex>\r\n      </Flex>\r\n    </>\r\n  );\r\n};\r\n",{"ruleId":"235","severity":1,"message":"236","line":20,"column":9,"nodeType":"237","messageId":"238","endLine":20,"endColumn":17},{"ruleId":"235","severity":1,"message":"239","line":30,"column":59,"nodeType":"237","messageId":"238","endLine":30,"endColumn":68},{"ruleId":"240","replacedBy":"241"},{"ruleId":"242","replacedBy":"243"},{"ruleId":"240","replacedBy":"244"},{"ruleId":"242","replacedBy":"245"},{"ruleId":"240","replacedBy":"246"},{"ruleId":"242","replacedBy":"247"},{"ruleId":"240","replacedBy":"248"},{"ruleId":"242","replacedBy":"249"},{"ruleId":"235","severity":1,"message":"250","line":8,"column":3,"nodeType":"237","messageId":"238","endLine":8,"endColumn":17},{"ruleId":"235","severity":1,"message":"251","line":53,"column":9,"nodeType":"237","messageId":"238","endLine":53,"endColumn":20},{"ruleId":"235","severity":1,"message":"252","line":1,"column":27,"nodeType":"237","messageId":"238","endLine":1,"endColumn":36},{"ruleId":"235","severity":1,"message":"253","line":1,"column":38,"nodeType":"237","messageId":"238","endLine":1,"endColumn":45},{"ruleId":"235","severity":1,"message":"254","line":1,"column":47,"nodeType":"237","messageId":"238","endLine":1,"endColumn":58},{"ruleId":"235","severity":1,"message":"255","line":5,"column":10,"nodeType":"237","messageId":"238","endLine":5,"endColumn":32},{"ruleId":"235","severity":1,"message":"256","line":5,"column":34,"nodeType":"237","messageId":"238","endLine":5,"endColumn":53},{"ruleId":"235","severity":1,"message":"257","line":5,"column":55,"nodeType":"237","messageId":"238","endLine":5,"endColumn":65},{"ruleId":"235","severity":1,"message":"258","line":5,"column":67,"nodeType":"237","messageId":"238","endLine":5,"endColumn":74},{"ruleId":"235","severity":1,"message":"259","line":5,"column":76,"nodeType":"237","messageId":"238","endLine":5,"endColumn":98},{"ruleId":"235","severity":1,"message":"260","line":6,"column":10,"nodeType":"237","messageId":"238","endLine":6,"endColumn":21},{"ruleId":"235","severity":1,"message":"261","line":12,"column":12,"nodeType":"237","messageId":"238","endLine":12,"endColumn":17},{"ruleId":"235","severity":1,"message":"262","line":12,"column":19,"nodeType":"237","messageId":"238","endLine":12,"endColumn":27},{"ruleId":"235","severity":1,"message":"263","line":18,"column":21,"nodeType":"237","messageId":"238","endLine":18,"endColumn":25},{"ruleId":"235","severity":1,"message":"264","line":18,"column":27,"nodeType":"237","messageId":"238","endLine":18,"endColumn":33},{"ruleId":"240","replacedBy":"265"},{"ruleId":"242","replacedBy":"266"},{"ruleId":"240","replacedBy":"267"},{"ruleId":"242","replacedBy":"268"},{"ruleId":"240","replacedBy":"269"},{"ruleId":"242","replacedBy":"270"},{"ruleId":"235","severity":1,"message":"271","line":1,"column":8,"nodeType":"237","messageId":"238","endLine":1,"endColumn":17},{"ruleId":"240","replacedBy":"272"},{"ruleId":"242","replacedBy":"273"},{"ruleId":"274","severity":1,"message":"275","line":26,"column":6,"nodeType":"276","endLine":26,"endColumn":8,"suggestions":"277"},{"ruleId":"235","severity":1,"message":"278","line":1,"column":19,"nodeType":"237","messageId":"238","endLine":1,"endColumn":27},{"ruleId":"235","severity":1,"message":"252","line":1,"column":17,"nodeType":"237","messageId":"238","endLine":1,"endColumn":26},{"ruleId":"235","severity":1,"message":"279","line":1,"column":8,"nodeType":"237","messageId":"238","endLine":1,"endColumn":13},{"ruleId":"235","severity":1,"message":"250","line":6,"column":10,"nodeType":"237","messageId":"238","endLine":6,"endColumn":24},{"ruleId":"280","severity":1,"message":"281","line":35,"column":61,"nodeType":"282","messageId":"283","endLine":35,"endColumn":63},{"ruleId":"235","severity":1,"message":"284","line":37,"column":10,"nodeType":"237","messageId":"238","endLine":37,"endColumn":16},"@typescript-eslint/no-unused-vars","'location' is assigned a value but never used.","Identifier","unusedVar","'fetchMore' is assigned a value but never used.","no-native-reassign",["285"],"no-negated-in-lhs",["286"],["285"],["286"],["285"],["286"],["285"],["286"],"'useMeLazyQuery' is defined but never used.","'userThreads' is assigned a value but never used.","'useEffect' is defined but never used.","'useMemo' is defined but never used.","'useCallback' is defined but never used.","'IsUserLoggedInDocument' is defined but never used.","'IsUserLoggedInQuery' is defined but never used.","'MeDocument' is defined but never used.","'MeQuery' is defined but never used.","'useIsUserLoggedInQuery' is defined but never used.","'ApolloError' is defined but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'data' is assigned a value but never used.","'client' is assigned a value but never used.",["285"],["286"],["285"],["286"],["285"],["286"],"'jwtDecode' is defined but never used.",["285"],["286"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'listOtherThreads'. Either include it or remove the dependency array.","ArrayExpression",["287"],"'useState' is defined but never used.","'React' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'userId' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"288","fix":"289"},"Update the dependencies array to be: [listOtherThreads]",{"range":"290","text":"291"},[805,807],"[listOtherThreads]"]