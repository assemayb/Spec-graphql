[{"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\SignleTopicPage.tsx":"1","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\QuestionBox.tsx":"2","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\reportWebVitals.ts":"3","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Topics.tsx":"4","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\generated\\graphql.tsx":"5","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\QuestionForm.tsx":"6","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\OptionsPopover.tsx":"7","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Profile.tsx":"8","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\App.tsx":"9","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\index.tsx":"10","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\theme.tsx":"11","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Header2.tsx":"12","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\Skeleton.tsx":"13","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\routes.tsx":"14","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Footer.tsx":"15","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\Spinners.tsx":"16","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Modal.tsx":"17","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\LinkBox.tsx":"18","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Register.tsx":"19","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Home.tsx":"20","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Test.tsx":"21","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Login.tsx":"22","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\LoginFrom.tsx":"23","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Message.tsx":"24","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\ProfileModal.tsx":"25","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\InteractionsSection.tsx":"26","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\HeaderComp.tsx":"27","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Thread.tsx":"28","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\accessToken.ts":"29","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\RegisterForm.tsx":"30","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\ThreadSortingBtns.tsx":"31","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\LikeSection.tsx":"32"},{"size":2922,"mtime":1627349910302,"results":"33","hashOfConfig":"34"},{"size":5138,"mtime":1627525188857,"results":"35","hashOfConfig":"34"},{"size":425,"mtime":1607784182783,"results":"36","hashOfConfig":"34"},{"size":2611,"mtime":1627275377137,"results":"37","hashOfConfig":"34"},{"size":32273,"mtime":1627510340306,"results":"38","hashOfConfig":"34"},{"size":4323,"mtime":1627277404631,"results":"39","hashOfConfig":"34"},{"size":1957,"mtime":1627163448967,"results":"40","hashOfConfig":"34"},{"size":3072,"mtime":1627400124235,"results":"41","hashOfConfig":"34"},{"size":1341,"mtime":1627089325956,"results":"42","hashOfConfig":"34"},{"size":3496,"mtime":1627516941256,"results":"43","hashOfConfig":"34"},{"size":247,"mtime":1627512237368,"results":"44","hashOfConfig":"34"},{"size":4594,"mtime":1627534096186,"results":"45","hashOfConfig":"34"},{"size":327,"mtime":1627264169528,"results":"46","hashOfConfig":"34"},{"size":991,"mtime":1627334030301,"results":"47","hashOfConfig":"34"},{"size":426,"mtime":1626443446668,"results":"48","hashOfConfig":"34"},{"size":382,"mtime":1626377368932,"results":"49","hashOfConfig":"34"},{"size":1382,"mtime":1627534738352,"results":"50","hashOfConfig":"34"},{"size":743,"mtime":1627277099804,"results":"51","hashOfConfig":"34"},{"size":1661,"mtime":1627078858743,"results":"52","hashOfConfig":"34"},{"size":3700,"mtime":1627347812018,"results":"53","hashOfConfig":"34"},{"size":647,"mtime":1627079266812,"results":"54","hashOfConfig":"34"},{"size":2848,"mtime":1627078808958,"results":"55","hashOfConfig":"34"},{"size":2625,"mtime":1627535207585,"results":"56","hashOfConfig":"34"},{"size":246,"mtime":1625721792159,"results":"57","hashOfConfig":"34"},{"size":1192,"mtime":1627160280436,"results":"58","hashOfConfig":"34"},{"size":690,"mtime":1627265277928,"results":"59","hashOfConfig":"34"},{"size":736,"mtime":1627274854190,"results":"60","hashOfConfig":"34"},{"size":3549,"mtime":1627516790625,"results":"61","hashOfConfig":"34"},{"size":231,"mtime":1607976985837,"results":"62","hashOfConfig":"34"},{"size":4088,"mtime":1627078789007,"results":"63","hashOfConfig":"34"},{"size":1251,"mtime":1627512671435,"results":"64","hashOfConfig":"34"},{"size":1848,"mtime":1627534125127,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},"11skg4y",{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"74"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"98"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"98"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"81"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"132"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\SignleTopicPage.tsx",["144"],"import { Box, Divider, Flex } from \"@chakra-ui/react\";\r\nimport { useParams,  useHistory } from \"react-router-dom\";\r\nimport React  from \"react\";\r\nimport { useQuery } from \"@apollo/client\"\r\nimport { useListTopicThreadsQuery } from \"../generated/graphql\";\r\nimport { QuestionBox } from \"../smallComps/QuestionBox\";\r\nimport { FastBigSpinner } from \"../smallComps/Spinners\";\r\nimport { topicsQuery } from \"./Topics\";\r\nimport { HeaderComp } from \"../smallComps/HeaderComp\";\r\n\r\ninterface SideNavBoxProps {\r\n  topics?: string[]\r\n}\r\n\r\nexport const SideNavBox: React.FC<SideNavBoxProps> = ({ topics }) => {\r\n  const router = useHistory()\r\n  return (\r\n    <Flex\r\n      flex=\"1\"\r\n      p=\"0.5rem\"\r\n      flexDirection=\"column\"\r\n      h=\"auto\"\r\n      marginX=\"8px\"\r\n      shadow=\"base\"\r\n    >\r\n      {topics && topics.map((topic, index) => {\r\n        return (\r\n          <Box\r\n            as=\"button\"\r\n            onClick={() => {\r\n              router.push(`/topics/${topic}`, { topics });\r\n            } }\r\n            key={index}\r\n            textAlign=\"center\"\r\n            p=\"0.5rem\"\r\n            bgColor=\"green.300\"\r\n            color=\"white\"\r\n            borderRadius=\"-20px\"\r\n            cursor=\"pointer\"\r\n            _hover={{\r\n              bgColor: \"blue.200\",\r\n            }}\r\n            marginY=\"3px\"\r\n          >\r\n            <Flex justify=\"center\" align=\"center\">\r\n              {topic}\r\n            </Flex>\r\n          </Box>\r\n\r\n        );\r\n      })}\r\n    </Flex>\r\n  );\r\n};\r\n\r\ninterface SignleTopicPageProps { }\r\nexport const SignleTopicPage: React.FC<SignleTopicPageProps> = () => {\r\n  const params: any = useParams();\r\n  const topicsArr = useQuery(topicsQuery)\r\n  const { data, loading  } = useListTopicThreadsQuery({\r\n    fetchPolicy: \"cache-and-network\",\r\n    variables: {\r\n      topic: params.topicName,\r\n    }\r\n  });\r\n\r\n  let ThreadsComp: any = null;\r\n  if (loading) {\r\n    ThreadsComp = <FastBigSpinner />;\r\n  } else if (data) {\r\n    ThreadsComp = (\r\n      <>\r\n        {data.lisTopicThreads?.map((thread, idx) => {\r\n          return (\r\n            <QuestionBox\r\n              key={idx}\r\n              fromTopicPage={true}\r\n              question={thread.question}\r\n              threadId={thread.id}\r\n              username={thread.threadCreator}\r\n              createdAt={thread.createdAt}\r\n              repliesCount={thread.replies?.length}\r\n            />\r\n          );\r\n        })}\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <HeaderComp threadsHeader={`${params.topicName} Threads`}/>\r\n        \r\n      <Flex marginRight=\"auto\" marginLeft=\"auto\" marginTop=\"2rem\">\r\n        <Flex\r\n          flexDirection=\"column\"\r\n          alignItems=\"center\"\r\n          flex=\"7\"\r\n          shadow=\"base\"\r\n          p=\"1rem\"\r\n        >\r\n          {ThreadsComp}\r\n        </Flex>\r\n        {topicsArr.data && (\r\n          <SideNavBox topics={topicsArr.data.listTopics} />\r\n        )}\r\n      </Flex>\r\n    </>\r\n  );\r\n};\r\n",["145","146"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\QuestionBox.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\reportWebVitals.ts",[],["147","148"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Topics.tsx",["149","150","151","152","153","154","155","156","157","158"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\generated\\graphql.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\QuestionForm.tsx",[],["159","160"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\OptionsPopover.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Profile.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\App.tsx",["161","162","163"],"import React, { useState, useEffect, useRef } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { setAccessToken } from \"./accessToken\";\n\nimport { Header2 } from \"./components/Header2\";\nimport { Footer } from \"./components/Footer\";\nimport { Skeleton } from \"./smallComps/Skeleton\";\n\nimport { useIsUserLoggedInQuery } from \"./generated/graphql\";\nimport { BaseRouter } from \"./routes\";\nimport { Container, Spinner } from \"@chakra-ui/react\";\n\nimport {FastBigSpinner} from \"./smallComps/Spinners\"\n\nfunction App() {\n  const [appLoading, setAppLoading] = useState(true);\n\n  useEffect(() => {\n    fetch(\"http://localhost:8000/refresh_token\", {\n      credentials: \"include\",\n      method: \"POST\",\n    }).then(async (x) => {\n      const resposne = await x.json();\n      setAccessToken(resposne.accessToken);\n      setAppLoading(false);\n    });\n  }, []);\n\n  return (\n    <div className=\"app\">\n      {appLoading ? (\n        <Container marginLeft=\"auto\" marginRight=\"auto\" marginTop=\"10rem\">\n          <FastBigSpinner />\n        </Container>\n      ) : (\n        <>\n          <BrowserRouter>\n            {/* <Header /> */}\n            <Header2 />\n            <Skeleton>\n              <BaseRouter />\n            </Skeleton>\n            <Footer />\n          </BrowserRouter>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n",["164","165"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\index.tsx",["166","167"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\theme.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Header2.tsx",["168","169","170","171","172","173","174","175"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\Skeleton.tsx",[],["176","177"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\routes.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Footer.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\Spinners.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Modal.tsx",["178"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\LinkBox.tsx",["179","180","181"],"import React from \"react\";\r\nimport { Container, Flex, Center, Box } from \"@chakra-ui/react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ReactNode } from \"react\";\r\n\r\ninterface NavLink {\r\n  route: string;\r\n  icon?: ReactNode;\r\n}\r\n\r\nexport const LinkBox: React.FC<NavLink> = ({ route, icon }) => {\r\n  return (\r\n    <Link to={route !== \"Home\" ? `/${route}` : \"/\"}>\r\n      <Box\r\n        as=\"button\"\r\n        fontWeight=\"bold\"\r\n        _hover={{\r\n          bgColor: \"green.400\",\r\n          borderRadius: \"-10px\"\r\n        }}\r\n        padding=\"1rem\"\r\n      >\r\n        <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\r\n          <Box marginRight=\"6px\">{icon}</Box> {route}\r\n        </Box>\r\n      </Box>\r\n    </Link>\r\n  );\r\n};\r\n","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Register.tsx",["182"],"import React, { useState } from \"react\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport { useRegisterMutation } from \"../generated/graphql\";\r\n\r\nexport const Register: React.FC<RouteComponentProps> = ({}) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const [register] = useRegisterMutation();\r\n\r\n  const registerNewUser = (\r\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>\r\n  ) => {\r\n    e.preventDefault();\r\n    \r\n    if (!username || !email || !password) {\r\n      return console.log(\"enter some data\");\r\n    }\r\n    register({\r\n      variables: {\r\n        username,\r\n        email,\r\n        password,\r\n      },\r\n    }).then((response) => {\r\n      console.log(response);\r\n    });\r\n    setEmail(\"\");\r\n    setUsername(\"\");\r\n    setPassword(\"\");\r\n  };\r\n  return (\r\n    <div>\r\n      <form className=\"signup-form\">\r\n        <label htmlFor=\"username\">username: </label>\r\n        <input\r\n          id=\"username\"\r\n          type=\"text\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n        />\r\n        <label htmlFor=\"password\">password: </label>\r\n        <input\r\n          id=\"password\"\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <label htmlFor=\"email\">email: </label>\r\n        <input\r\n          type=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <button onClick={(e) => registerNewUser(e)}>Register</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Home.tsx",["183","184"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Test.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Login.tsx",["185","186","187","188","189","190","191","192","193","194","195","196","197"],"import React, { useState, useEffect, useMemo, useCallback } from 'react'\r\nimport { RouteComponentProps } from \"react-router-dom\"\r\nimport { setAccessToken } from '../accessToken'\r\nimport { Message } from '../components/Message'\r\nimport { IsUserLoggedInDocument, IsUserLoggedInQuery, MeDocument, MeQuery, useIsUserLoggedInQuery, useLoginMutation } from '../generated/graphql'\r\nimport { ApolloError } from \"@apollo/client/errors\"\r\n\r\n\r\nexport const Login: React.FC<RouteComponentProps> = ({ history }) => {\r\n\r\n    const [username, setUsername] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [showMessage, setShowMessage] = useState({\r\n        show: false,\r\n        value: \"\"\r\n    })\r\n    const [login, { data, client }] = useLoginMutation()\r\n\r\n    const loginUser = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n        e.preventDefault()\r\n        try {\r\n\r\n            const response = await login({\r\n                variables: {\r\n                    username,\r\n                    password\r\n                },\r\n                update: (cache, { data }) => {\r\n                    if (!data) {\r\n                        return null;\r\n                    }\r\n                    // cache.writeQuery<MeQuery>({\r\n                    //     query: MeDocument,\r\n                    //     data: {\r\n                    //         me: data.loginUser?.user\r\n                    //     }\r\n                    // })\r\n                    // cache.writeQuery<IsUserLoggedInQuery>({\r\n                    //     query: IsUserLoggedInDocument,\r\n                    //     data: {\r\n                    //         isUserLoggedIn: true\r\n                    //     }\r\n                    // })\r\n\r\n                },\r\n            })\r\n            if (response && response.data) {\r\n                setAccessToken(response.data.loginUser?.accessToken!)\r\n                history.push(\"/\")\r\n                setUsername(\"\")\r\n                setPassword(\"\")\r\n            }\r\n        } catch (error) {\r\n            setShowMessage({ show: true, value: error.message })\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form className=\"login-form\">\r\n                {showMessage.show && (\r\n                    <Message message={showMessage.value} />\r\n                )}\r\n                <label htmlFor=\"username\">username: </label>\r\n                <input id=\"username\" type=\"text\" value={username} onChange={e => setUsername(e.target.value)} />\r\n                <label htmlFor=\"password\">password: </label>\r\n                <input id=\"password\" type=\"password\" value={password} onChange={e => setPassword(e.target.value)} />\r\n                <button onClick={e => loginUser(e)}>Login</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\LoginFrom.tsx",["198","199","200"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  VStack,\r\n  Button,\r\n  Center,\r\n  Container,\r\n} from \"@chakra-ui/react\";\r\nimport {\r\n  IsUserLoggedInDocument,\r\n  IsUserLoggedInQuery,\r\n  useLoginMutation,\r\n} from \"../generated/graphql\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { setAccessToken } from \"../accessToken\";\r\n\r\nexport const LoginFrom = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [showMessage, setShowMessage] = useState({\r\n    show: false,\r\n    value: \"\",\r\n  });\r\n\r\n  const [login] = useLoginMutation();\r\n  const location = useLocation();\r\n\r\n  // useEffect(() => {\r\n  //   return () => {\r\n\r\n  //     console.log(path);\r\n  //   };\r\n  // }, [location.pathname]);\r\n\r\n  const history = useHistory();\r\n  const submitLoginForm = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await login({\r\n        variables: {\r\n          username,\r\n          password,\r\n        },\r\n        update: (cache, { data }) => {\r\n          if (!data) {\r\n            return null;\r\n          }\r\n          cache.writeQuery<IsUserLoggedInQuery>({\r\n            query: IsUserLoggedInDocument,\r\n            data: {\r\n              isUserLoggedIn: true,\r\n            },\r\n          });\r\n        },\r\n      });\r\n      if (response && response.data) {\r\n        setAccessToken(response.data.loginUser?.accessToken!);\r\n        const currentPage = location.pathname.split(\"/\")[1];\r\n        if (currentPage !== \"threads\") {\r\n          history.push(\"/\");\r\n        }\r\n        setUsername(\"\");\r\n        setPassword(\"\");\r\n      }\r\n    } catch (error) {\r\n      setShowMessage({ show: true, value: error.message });\r\n      console.log(error);\r\n    }\r\n  };\r\n  return (\r\n    <Container padding=\"0.4rem\" color=\"green.400\">\r\n      <form onSubmit={(e) => submitLoginForm(e)}>\r\n        <FormControl id=\"username\" isRequired my=\"5px\">\r\n          <FormLabel>Username</FormLabel>\r\n          <Input\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n        </FormControl>\r\n\r\n        <FormControl id=\"password\" isRequired my=\"5px\">\r\n          <FormLabel>Password</FormLabel>\r\n          <Input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </FormControl>\r\n        <Center>\r\n          <Button my=\"10px\" p=\"10px\" type=\"submit\">\r\n            login\r\n          </Button>\r\n        </Center>\r\n      </form>\r\n    </Container>\r\n  );\r\n};\r\n","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Message.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\ProfileModal.tsx",["201","202","203","204","205"],"import React from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  ModalContent,\r\n  ModalOverlay,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  useDisclosure,\r\n  Heading,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport { QuestionForm } from \"../smallComps/QuestionForm\"\r\nimport { ApolloQueryResult } from \"@apollo/client\";\r\nimport { ListUserThreadsQuery } from \"../generated/graphql\";\r\n\r\ninterface ProfileModalProps {\r\n  showModal: boolean;\r\n  onClose: () => void;\r\n  setShowModal: React.Dispatch<React.SetStateAction<boolean>>\r\n  refetchProfileThreads?: () => Promise<ApolloQueryResult<ListUserThreadsQuery>>\r\n}\r\n\r\nexport const ProfileModal: React.FC<ProfileModalProps> = ({\r\n  onClose,\r\n  showModal,\r\n  setShowModal,\r\n  refetchProfileThreads\r\n}) => {\r\n\r\n  return (\r\n    <>\r\n      <Modal isOpen={showModal} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent marginTop=\"8rem\">\r\n          <ModalCloseButton />\r\n\r\n          <ModalBody margin=\"1rem\">\r\n            <QuestionForm refetchProfileThreads={refetchProfileThreads} setShowModal={setShowModal} clickedFromProfilePage={true} />\r\n          </ModalBody>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\InteractionsSection.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\HeaderComp.tsx",[],["206","207"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Thread.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\accessToken.ts",["208"],"import jwtDecode from \"jwt-decode\"\r\n\r\nexport const getAccessToken = () => {\r\n    return localStorage.getItem(\"accessToken\")\r\n}\r\n\r\nexport const setAccessToken = (token: string) => {\r\n    localStorage.setItem(\"accessToken\", token)\r\n}","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\RegisterForm.tsx",["209"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\ThreadSortingBtns.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\LikeSection.tsx",[],{"ruleId":"210","severity":1,"message":"211","line":1,"column":15,"nodeType":"212","messageId":"213","endLine":1,"endColumn":22},{"ruleId":"214","replacedBy":"215"},{"ruleId":"216","replacedBy":"217"},{"ruleId":"214","replacedBy":"218"},{"ruleId":"216","replacedBy":"219"},{"ruleId":"210","severity":1,"message":"220","line":2,"column":10,"nodeType":"212","messageId":"213","endLine":2,"endColumn":32},{"ruleId":"210","severity":1,"message":"221","line":6,"column":3,"nodeType":"212","messageId":"213","endLine":6,"endColumn":12},{"ruleId":"210","severity":1,"message":"222","line":7,"column":3,"nodeType":"212","messageId":"213","endLine":7,"endColumn":7},{"ruleId":"210","severity":1,"message":"223","line":8,"column":3,"nodeType":"212","messageId":"213","endLine":8,"endColumn":9},{"ruleId":"210","severity":1,"message":"224","line":9,"column":3,"nodeType":"212","messageId":"213","endLine":9,"endColumn":9},{"ruleId":"210","severity":1,"message":"225","line":10,"column":3,"nodeType":"212","messageId":"213","endLine":10,"endColumn":14},{"ruleId":"210","severity":1,"message":"226","line":11,"column":3,"nodeType":"212","messageId":"213","endLine":11,"endColumn":12},{"ruleId":"210","severity":1,"message":"227","line":12,"column":3,"nodeType":"212","messageId":"213","endLine":12,"endColumn":8},{"ruleId":"210","severity":1,"message":"228","line":14,"column":3,"nodeType":"212","messageId":"213","endLine":14,"endColumn":10},{"ruleId":"210","severity":1,"message":"211","line":16,"column":3,"nodeType":"212","messageId":"213","endLine":16,"endColumn":10},{"ruleId":"214","replacedBy":"229"},{"ruleId":"216","replacedBy":"230"},{"ruleId":"210","severity":1,"message":"231","line":1,"column":38,"nodeType":"212","messageId":"213","endLine":1,"endColumn":44},{"ruleId":"210","severity":1,"message":"220","line":9,"column":10,"nodeType":"212","messageId":"213","endLine":9,"endColumn":32},{"ruleId":"210","severity":1,"message":"228","line":11,"column":21,"nodeType":"212","messageId":"213","endLine":11,"endColumn":28},{"ruleId":"214","replacedBy":"232"},{"ruleId":"216","replacedBy":"233"},{"ruleId":"210","severity":1,"message":"234","line":14,"column":3,"nodeType":"212","messageId":"213","endLine":14,"endColumn":6},{"ruleId":"210","severity":1,"message":"235","line":15,"column":3,"nodeType":"212","messageId":"213","endLine":15,"endColumn":17},{"ruleId":"210","severity":1,"message":"221","line":3,"column":3,"nodeType":"212","messageId":"213","endLine":3,"endColumn":12},{"ruleId":"210","severity":1,"message":"236","line":8,"column":3,"nodeType":"212","messageId":"213","endLine":8,"endColumn":9},{"ruleId":"210","severity":1,"message":"237","line":11,"column":10,"nodeType":"212","messageId":"213","endLine":11,"endColumn":18},{"ruleId":"210","severity":1,"message":"238","line":11,"column":20,"nodeType":"212","messageId":"213","endLine":11,"endColumn":27},{"ruleId":"210","severity":1,"message":"239","line":18,"column":3,"nodeType":"212","messageId":"213","endLine":18,"endColumn":13},{"ruleId":"210","severity":1,"message":"240","line":73,"column":24,"nodeType":"212","messageId":"213","endLine":73,"endColumn":30},{"ruleId":"241","severity":1,"message":"242","line":122,"column":49,"nodeType":"243","messageId":"244","endLine":122,"endColumn":51},{"ruleId":"210","severity":1,"message":"245","line":125,"column":9,"nodeType":"212","messageId":"213","endLine":125,"endColumn":20},{"ruleId":"214","replacedBy":"246"},{"ruleId":"216","replacedBy":"247"},{"ruleId":"210","severity":1,"message":"248","line":1,"column":17,"nodeType":"212","messageId":"213","endLine":1,"endColumn":26},{"ruleId":"210","severity":1,"message":"221","line":2,"column":10,"nodeType":"212","messageId":"213","endLine":2,"endColumn":19},{"ruleId":"210","severity":1,"message":"222","line":2,"column":21,"nodeType":"212","messageId":"213","endLine":2,"endColumn":25},{"ruleId":"210","severity":1,"message":"236","line":2,"column":27,"nodeType":"212","messageId":"213","endLine":2,"endColumn":33},{"ruleId":"241","severity":1,"message":"242","line":5,"column":57,"nodeType":"243","messageId":"244","endLine":5,"endColumn":59},{"ruleId":"210","severity":1,"message":"211","line":4,"column":15,"nodeType":"212","messageId":"213","endLine":4,"endColumn":22},{"ruleId":"210","severity":1,"message":"249","line":11,"column":10,"nodeType":"212","messageId":"213","endLine":11,"endColumn":18},{"ruleId":"210","severity":1,"message":"248","line":1,"column":27,"nodeType":"212","messageId":"213","endLine":1,"endColumn":36},{"ruleId":"210","severity":1,"message":"250","line":1,"column":38,"nodeType":"212","messageId":"213","endLine":1,"endColumn":45},{"ruleId":"210","severity":1,"message":"251","line":1,"column":47,"nodeType":"212","messageId":"213","endLine":1,"endColumn":58},{"ruleId":"210","severity":1,"message":"252","line":5,"column":10,"nodeType":"212","messageId":"213","endLine":5,"endColumn":32},{"ruleId":"210","severity":1,"message":"253","line":5,"column":34,"nodeType":"212","messageId":"213","endLine":5,"endColumn":53},{"ruleId":"210","severity":1,"message":"254","line":5,"column":55,"nodeType":"212","messageId":"213","endLine":5,"endColumn":65},{"ruleId":"210","severity":1,"message":"255","line":5,"column":67,"nodeType":"212","messageId":"213","endLine":5,"endColumn":74},{"ruleId":"210","severity":1,"message":"220","line":5,"column":76,"nodeType":"212","messageId":"213","endLine":5,"endColumn":98},{"ruleId":"210","severity":1,"message":"256","line":6,"column":10,"nodeType":"212","messageId":"213","endLine":6,"endColumn":21},{"ruleId":"210","severity":1,"message":"257","line":12,"column":12,"nodeType":"212","messageId":"213","endLine":12,"endColumn":17},{"ruleId":"210","severity":1,"message":"258","line":12,"column":19,"nodeType":"212","messageId":"213","endLine":12,"endColumn":27},{"ruleId":"210","severity":1,"message":"259","line":18,"column":21,"nodeType":"212","messageId":"213","endLine":18,"endColumn":25},{"ruleId":"210","severity":1,"message":"240","line":18,"column":27,"nodeType":"212","messageId":"213","endLine":18,"endColumn":33},{"ruleId":"210","severity":1,"message":"248","line":1,"column":27,"nodeType":"212","messageId":"213","endLine":1,"endColumn":36},{"ruleId":"210","severity":1,"message":"223","line":6,"column":3,"nodeType":"212","messageId":"213","endLine":6,"endColumn":9},{"ruleId":"210","severity":1,"message":"260","line":22,"column":10,"nodeType":"212","messageId":"213","endLine":22,"endColumn":21},{"ruleId":"210","severity":1,"message":"224","line":3,"column":3,"nodeType":"212","messageId":"213","endLine":3,"endColumn":9},{"ruleId":"210","severity":1,"message":"261","line":9,"column":3,"nodeType":"212","messageId":"213","endLine":9,"endColumn":14},{"ruleId":"210","severity":1,"message":"262","line":10,"column":3,"nodeType":"212","messageId":"213","endLine":10,"endColumn":14},{"ruleId":"210","severity":1,"message":"263","line":11,"column":3,"nodeType":"212","messageId":"213","endLine":11,"endColumn":16},{"ruleId":"210","severity":1,"message":"264","line":12,"column":3,"nodeType":"212","messageId":"213","endLine":12,"endColumn":10},{"ruleId":"214","replacedBy":"265"},{"ruleId":"216","replacedBy":"266"},{"ruleId":"210","severity":1,"message":"267","line":1,"column":8,"nodeType":"212","messageId":"213","endLine":1,"endColumn":17},{"ruleId":"210","severity":1,"message":"248","line":1,"column":27,"nodeType":"212","messageId":"213","endLine":1,"endColumn":36},"@typescript-eslint/no-unused-vars","'Divider' is defined but never used.","Identifier","unusedVar","no-native-reassign",["268"],"no-negated-in-lhs",["269"],["268"],["269"],"'useIsUserLoggedInQuery' is defined but never used.","'Container' is defined but never used.","'Flex' is defined but never used.","'VStack' is defined but never used.","'Button' is defined but never used.","'FormControl' is defined but never used.","'FormLabel' is defined but never used.","'Input' is defined but never used.","'Spinner' is defined but never used.",["268"],["269"],"'useRef' is defined but never used.",["268"],["269"],"'gql' is defined but never used.","'createHttpLink' is defined but never used.","'Center' is defined but never used.","'MoonIcon' is defined but never used.","'SunIcon' is defined but never used.","'useMeQuery' is defined but never used.","'client' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'currentMode' is assigned a value but never used.",["268"],["269"],"'useEffect' is defined but never used.","'Skeleton' is defined but never used.","'useMemo' is defined but never used.","'useCallback' is defined but never used.","'IsUserLoggedInDocument' is defined but never used.","'IsUserLoggedInQuery' is defined but never used.","'MeDocument' is defined but never used.","'MeQuery' is defined but never used.","'ApolloError' is defined but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'data' is assigned a value but never used.","'showMessage' is assigned a value but never used.","'ModalHeader' is defined but never used.","'ModalFooter' is defined but never used.","'useDisclosure' is defined but never used.","'Heading' is defined but never used.",["268"],["269"],"'jwtDecode' is defined but never used.","no-global-assign","no-unsafe-negation"]