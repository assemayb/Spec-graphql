[{"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\accessToken.ts":"1","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\routes.tsx":"2","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Login.tsx":"3","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Message.tsx":"4","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\reportWebVitals.ts":"5","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Header.tsx":"6","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\generated\\graphql.tsx":"7","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Register.tsx":"8","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Header2.tsx":"9","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\index.tsx":"10","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\App.tsx":"11","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Home.tsx":"12","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Test.tsx":"13","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\LoginFrom.tsx":"14","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\RegisterForm.tsx":"15","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\Skeleton.tsx":"16","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Footer.tsx":"17","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\LinkBox.tsx":"18","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Modal.tsx":"19","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\Spinners.tsx":"20","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Profile.tsx":"21","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Topics.tsx":"22","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\theme.tsx":"23","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\QuestionForm.tsx":"24","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\QuestionBox.tsx":"25"},{"size":231,"mtime":1607976985837,"results":"26","hashOfConfig":"27"},{"size":755,"mtime":1626002465598,"results":"28","hashOfConfig":"27"},{"size":2812,"mtime":1625804871637,"results":"29","hashOfConfig":"27"},{"size":246,"mtime":1625721792159,"results":"30","hashOfConfig":"27"},{"size":425,"mtime":1607784182783,"results":"31","hashOfConfig":"27"},{"size":2262,"mtime":1625804572053,"results":"32","hashOfConfig":"27"},{"size":18582,"mtime":1626379286262,"results":"33","hashOfConfig":"27"},{"size":1661,"mtime":1625978682307,"results":"34","hashOfConfig":"27"},{"size":4664,"mtime":1626446383754,"results":"35","hashOfConfig":"27"},{"size":3470,"mtime":1626530353730,"results":"36","hashOfConfig":"27"},{"size":1143,"mtime":1625808979486,"results":"37","hashOfConfig":"27"},{"size":2188,"mtime":1626533069084,"results":"38","hashOfConfig":"27"},{"size":733,"mtime":1625978033033,"results":"39","hashOfConfig":"27"},{"size":2658,"mtime":1626446588230,"results":"40","hashOfConfig":"27"},{"size":2090,"mtime":1626446624893,"results":"41","hashOfConfig":"27"},{"size":237,"mtime":1626070254089,"results":"42","hashOfConfig":"27"},{"size":426,"mtime":1626443446668,"results":"43","hashOfConfig":"27"},{"size":712,"mtime":1625995329087,"results":"44","hashOfConfig":"27"},{"size":1567,"mtime":1626446748611,"results":"45","hashOfConfig":"27"},{"size":382,"mtime":1626377368932,"results":"46","hashOfConfig":"27"},{"size":166,"mtime":1625809384497,"results":"47","hashOfConfig":"27"},{"size":899,"mtime":1626262272994,"results":"48","hashOfConfig":"27"},{"size":244,"mtime":1626435092133,"results":"49","hashOfConfig":"27"},{"size":1967,"mtime":1626447339583,"results":"50","hashOfConfig":"27"},{"size":1298,"mtime":1626436258548,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},"11skg4y",{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"55"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"55"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\accessToken.ts",["116"],"import jwtDecode from \"jwt-decode\"\r\n\r\nexport const getAccessToken = () => {\r\n    return localStorage.getItem(\"accessToken\")\r\n}\r\n\r\nexport const setAccessToken = (token: string) => {\r\n    localStorage.setItem(\"accessToken\", token)\r\n}",["117","118"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\routes.tsx",[],["119","120"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Login.tsx",["121","122","123","124","125","126","127","128","129"],"import React, { useState, useEffect, useMemo, useCallback } from 'react'\r\nimport { RouteComponentProps } from \"react-router-dom\"\r\nimport { setAccessToken } from '../accessToken'\r\nimport { Message } from '../components/Message'\r\nimport { IsUserLoggedInDocument, IsUserLoggedInQuery, MeDocument, MeQuery, useIsUserLoggedInQuery, useLoginMutation } from '../generated/graphql'\r\nimport { ApolloError } from \"@apollo/client/errors\"\r\n\r\n\r\nexport const Login: React.FC<RouteComponentProps> = ({ history }) => {\r\n\r\n    const [username, setUsername] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [showMessage, setShowMessage] = useState({\r\n        show: false,\r\n        value: \"\"\r\n    })\r\n    const [login, { data, client }] = useLoginMutation()\r\n\r\n    const loginUser = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n        e.preventDefault()\r\n        try {\r\n\r\n            const response = await login({\r\n                variables: {\r\n                    username,\r\n                    password\r\n                },\r\n                update: (cache, { data }) => {\r\n                    if (!data) {\r\n                        return null;\r\n                    }\r\n                    cache.writeQuery<MeQuery>({\r\n                        query: MeDocument,\r\n                        data: {\r\n                            me: data.loginUser?.user\r\n                        }\r\n                    })\r\n                    cache.writeQuery<IsUserLoggedInQuery>({\r\n                        query: IsUserLoggedInDocument,\r\n                        data: {\r\n                            isUserLoggedIn: true\r\n                        }\r\n                    })\r\n\r\n                },\r\n            })\r\n            if (response && response.data) {\r\n                setAccessToken(response.data.loginUser?.accessToken!)\r\n                history.push(\"/\")\r\n                setUsername(\"\")\r\n                setPassword(\"\")\r\n            }\r\n        } catch (error) {\r\n            setShowMessage({ show: true, value: error.message })\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form className=\"login-form\">\r\n                {showMessage.show && (\r\n                    <Message message={showMessage.value} />\r\n                )}\r\n                <label htmlFor=\"username\">username: </label>\r\n                <input id=\"username\" type=\"text\" value={username} onChange={e => setUsername(e.target.value)} />\r\n                <label htmlFor=\"password\">password: </label>\r\n                <input id=\"password\" type=\"password\" value={password} onChange={e => setPassword(e.target.value)} />\r\n                <button onClick={e => loginUser(e)}>Login</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n",["130","131"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Message.tsx",[],["132","133"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\reportWebVitals.ts",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Header.tsx",["134","135","136","137","138"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\generated\\graphql.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Register.tsx",["139"],"import React, { useState } from \"react\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport { useRegisterMutation } from \"../generated/graphql\";\r\n\r\nexport const Register: React.FC<RouteComponentProps> = ({}) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const [register] = useRegisterMutation();\r\n\r\n  const registerNewUser = (\r\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>\r\n  ) => {\r\n    e.preventDefault();\r\n    \r\n    if (!username || !email || !password) {\r\n      return console.log(\"enter some data\");\r\n    }\r\n    register({\r\n      variables: {\r\n        username,\r\n        email,\r\n        password,\r\n      },\r\n    }).then((response) => {\r\n      console.log(response);\r\n    });\r\n    setEmail(\"\");\r\n    setUsername(\"\");\r\n    setPassword(\"\");\r\n  };\r\n  return (\r\n    <div>\r\n      <form className=\"signup-form\">\r\n        <label htmlFor=\"username\">username: </label>\r\n        <input\r\n          id=\"username\"\r\n          type=\"text\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n        />\r\n        <label htmlFor=\"password\">password: </label>\r\n        <input\r\n          id=\"password\"\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <label htmlFor=\"email\">email: </label>\r\n        <input\r\n          type=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <button onClick={(e) => registerNewUser(e)}>Register</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Header2.tsx",["140","141","142","143","144","145","146","147","148","149","150"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  Flex,\r\n  Button,\r\n  useColorMode,\r\n  useDisclosure,\r\n  Center,\r\n  Box,\r\n} from \"@chakra-ui/react\";\r\nimport { MoonIcon, SunIcon } from \"@chakra-ui/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  IsUserLoggedInDocument,\r\n  IsUserLoggedInQuery,\r\n  useIsUserLoggedInQuery,\r\n  useLogoutMutation,\r\n  useMeQuery,\r\n} from \"../generated/graphql\";\r\n\r\nimport { setAccessToken } from \"../accessToken\";\r\nimport { AiFillHome, AiOutlineUser } from \"react-icons/ai\";\r\nimport { BiBookContent } from \"react-icons/bi\";\r\n\r\nimport { ModalComponent } from \"../components/Modal\";\r\nimport { LinkBox } from \"../smallComps/LinkBox\";\r\nimport { SmallSpinner } from \"../smallComps/Spinners\";\r\n\r\ninterface ProfileButtonProps {\r\n  isUserLogged: boolean;\r\n}\r\n\r\nconst ProfileButton: React.FC<ProfileButtonProps> = ({ isUserLogged }) => {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const { isOpen, onOpen, onClose } = useDisclosure({\r\n    onClose: () => setShowModal(false),\r\n    onOpen: () => console.log(\"Modal is Open\"),\r\n  });\r\n\r\n  const router = useHistory();\r\n  const handleProfileClick = () => {\r\n    if (isUserLogged === true) {\r\n      router.push(\"/profile\");\r\n    } else {\r\n      setShowModal(true);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <ModalComponent showModal={showModal} onClose={onClose} />\r\n      <Button\r\n        onClick={() => handleProfileClick()}\r\n        height=\"50%\"\r\n        fontSize=\"medium\"\r\n        fontWeight=\"bold\"\r\n        bgColor=\"green.400\"\r\n        _hover={{\r\n          bgColor: \"green.500\",\r\n        }}\r\n        mx=\"0.4rem\"\r\n      >\r\n        <AiOutlineUser width=\"40px\" />\r\n\r\n        <span style={{ marginLeft: \"4px\" }}>profile</span>\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\ninterface LogoutButtonProps extends ProfileButtonProps {}\r\nconst LogoutButton: React.FC<LogoutButtonProps> = ({ isUserLogged }) => {\r\n  const [logoutUser, { client }] = useLogoutMutation();\r\n\r\n  const handleLogout = async () => {\r\n    if (isUserLogged) {\r\n      await logoutUser({\r\n        update: (cache, _) => {\r\n          cache.writeQuery<IsUserLoggedInQuery>({\r\n            query: IsUserLoggedInDocument,\r\n            data: {\r\n              isUserLoggedIn: false,\r\n            },\r\n          });\r\n        },\r\n      });\r\n      setAccessToken(\"\");\r\n      // await client.resetStore();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Button\r\n      onClick={() => handleLogout()}\r\n      height=\"50%\"\r\n      fontSize=\"medium\"\r\n      fontWeight=\"bold\"\r\n      bgColor=\"green.400\"\r\n      _hover={{\r\n        bgColor: \"green.500\",\r\n      }}\r\n      mx=\"0.4rem\"\r\n    >\r\n      Logout\r\n    </Button>\r\n  );\r\n};\r\n\r\ninterface Header2Props {}\r\nexport const Header2: React.FC<Header2Props> = ({}) => {\r\n  // const { data, loading, error } = useMeQuery();\r\n\r\n  const currentMode = useColorMode();\r\n  const loginState = useIsUserLoggedInQuery({\r\n    fetchPolicy: \"network-only\",\r\n  });\r\n\r\n  // useEffect(() => {\r\n  //   const { called, stopPolling } = loginState;\r\n  //   console.log(called);\r\n  //   console.log(loginState.data?.isUserLoggedIn);\r\n  // }, [loginState]);\r\n\r\n  return (\r\n    <Flex\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      bgColor=\"green.200\"\r\n      height=\"80px\"\r\n      fontSize=\"xl\"\r\n      fontWeight=\"bold\"\r\n      color=\"white\"\r\n      position=\"relative\"\r\n      width=\"100%\"\r\n    >\r\n      <Flex ml=\"1rem\" position=\"absolute\" left=\"2px\">\r\n        <LinkBox route=\"Home\" icon={<AiFillHome width=\"20px\" />} />\r\n        <LinkBox route=\"topics\" icon={<BiBookContent width=\"20px\" />} />\r\n        <LinkBox route=\"test\" />\r\n      </Flex>\r\n\r\n      <Flex\r\n        marginRight=\"8px\"\r\n        height=\"100px\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        position=\"absolute\"\r\n        right=\"8px\"\r\n      >\r\n        {/* <Button\r\n          onClick={() => currentMode.toggleColorMode()}\r\n          bgColor=\"green.400\"\r\n          _hover={{\r\n            bgColorome: \"green.500\",\r\n          }}\r\n          height=\"50%\"\r\n        >\r\n          {currentMode.colorMode === \"light\" ? <MoonIcon /> : <SunIcon />}\r\n        </Button> */}\r\n\r\n        {loginState && loginState.loading && (\r\n          <Box marginLeft=\"5px\">\r\n            <SmallSpinner />\r\n          </Box>\r\n        )}\r\n        {loginState && !loginState.data?.isUserLoggedIn ? (\r\n          <ProfileButton isUserLogged={loginState.data?.isUserLoggedIn!} />\r\n        ) : (\r\n          <>\r\n            <ProfileButton isUserLogged={loginState.data?.isUserLoggedIn!} />\r\n            <LogoutButton isUserLogged={loginState.data?.isUserLoggedIn!} />\r\n          </>\r\n        )}\r\n      </Flex>\r\n    </Flex>\r\n  );\r\n};\r\n","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\index.tsx",["151","152"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\App.tsx",["153","154"],"import React, { useState, useEffect, useRef } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { setAccessToken } from \"./accessToken\";\n\nimport { Header2 } from \"./components/Header2\";\nimport {Footer} from \"./components/Footer\"\nimport { Skeleton } from \"./smallComps/Skeleton\";\n\nimport { useIsUserLoggedInQuery } from \"./generated/graphql\";\nimport { BaseRouter } from \"./routes\";\n\nfunction App() {\n  const [appLoading, setAppLoading] = useState(true);\n\n  useEffect(() => {\n    fetch(\"http://localhost:8000/refresh_token\", {\n      credentials: \"include\",\n      method: \"POST\",\n    }).then(async (x) => {\n      const resposne = await x.json();\n      setAccessToken(resposne.accessToken);\n      setAppLoading(false);\n    });\n  }, []);\n\n  return (\n    <div className=\"app\">\n      {appLoading ? (\n        <div>app is loading.....</div>\n      ) : (\n        <>\n          <BrowserRouter>\n            {/* <Header /> */}\n            <Header2 />\n            <Skeleton>\n              <BaseRouter />\n            </Skeleton>\n            <Footer />\n          </BrowserRouter>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Home.tsx",["155","156","157","158","159"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Test.tsx",["160","161","162","163","164","165"],"import React from \"react\";\r\nimport { getAccessToken } from \"../accessToken\";\r\nimport { useUsersListQuery } from \"../generated/graphql\";\r\nimport { Box, Container, Flex, VStack, Button } from \"@chakra-ui/react\";\r\n\r\n\r\ninterface TestProps {}\r\n\r\nexport const Test: React.FC<TestProps> = () => {\r\n  const { data, error, loading } = useUsersListQuery({\r\n    fetchPolicy: \"network-only\",\r\n  });\r\n\r\n  if (loading) {\r\n    return <div>loading......</div>;\r\n  }\r\n\r\n  return (\r\n    <Container p=\"2rem\" m=\"1rem\">\r\n      <h1>Current Users:</h1>\r\n      <ul>\r\n        {data?.getAllUsers?.map((user, idx) => (\r\n          <li key={idx}>\r\n            {user.email}, {user.username}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </Container>\r\n  );\r\n};\r\n","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\LoginFrom.tsx",["166","167","168","169","170","171","172"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\RegisterForm.tsx",["173"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\Skeleton.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Footer.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\LinkBox.tsx",["174","175","176"],"import React from \"react\";\r\nimport { Container, Flex, Center, Box } from \"@chakra-ui/react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ReactNode } from \"react\";\r\n\r\ninterface NavLink {\r\n  route: string;\r\n  icon?: ReactNode;\r\n}\r\n\r\nexport const LinkBox: React.FC<NavLink> = ({ route, icon }) => {\r\n  return (\r\n    <Link to={route !== \"Home\" ? route : \"/\"}>\r\n      <Box\r\n        // mx=\"0.4rem\"\r\n        _hover={{\r\n          bgColor: \"green.400\",\r\n          borderRadius: \"5px\",\r\n        }}\r\n        padding=\"1rem\"\r\n      >\r\n        <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\r\n          <Box marginRight=\"6px\">{icon}</Box> {route}\r\n        </Box>\r\n      </Box>\r\n    </Link>\r\n  );\r\n};\r\n","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Modal.tsx",["177","178","179","180"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\Spinners.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Profile.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Topics.tsx",["181","182","183","184","185","186","187","188","189","190"],"import React, { useState, useEffect, FC } from \"react\";\r\nimport { useIsUserLoggedInQuery } from \"../generated/graphql\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport {\r\n  Box,\r\n  Container,\r\n  Flex,\r\n  VStack,\r\n  Button,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Grid,\r\n} from \"@chakra-ui/react\";\r\n\r\n\r\ninterface TopicBoxProps {}\r\nconst TopicBox: FC<TopicBoxProps> = () => {\r\n    return <Box w=\"100%\" h=\"40\" bg=\"gray.300\" borderRadius=\"4px\" shadow=\"inner\" />;\r\n};\r\n\r\nexport const Topics: React.FC<RouteComponentProps> = () => {\r\n  return (\r\n    <Box p=\"1rem\" marginTop=\"2rem\">\r\n      <Grid templateColumns=\"repeat(4, 1fr)\" gap={6}>\r\n      <TopicBox ></TopicBox>\r\n      <TopicBox ></TopicBox>\r\n      <TopicBox ></TopicBox>\r\n      <TopicBox ></TopicBox>\r\n      <TopicBox ></TopicBox>\r\n      <TopicBox ></TopicBox>\r\n      <TopicBox ></TopicBox>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\theme.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\QuestionForm.tsx",["191","192","193","194","195"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  useCreateThreadMutation,\r\n  useIsUserLoggedInQuery,\r\n} from \"../generated/graphql\";\r\n\r\nimport { Box, Button, FormControl, FormLabel, Input } from \"@chakra-ui/react\";\r\n\r\ninterface QuestionFormProps {}\r\nexport const QuestionForm: React.FC<QuestionFormProps> = () => {\r\n  const [question, setQuestion] = useState(\"\");\r\n  const [specilization, setSpecilization] = useState(\"\");\r\n\r\n  const [createQuestion, { client, data, error, loading }] =\r\n    useCreateThreadMutation();\r\n  const userLogginData = useIsUserLoggedInQuery();\r\n  const submitQuestion = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    console.log(\"sbmmmmiit\");\r\n\r\n    try {\r\n      await createQuestion({\r\n        variables: {\r\n          question,\r\n          spec: specilization,\r\n        },\r\n      });\r\n    } catch (error) {\r\n      console.log(error.messge);\r\n    }\r\n  };\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\" p=\"8px\" my=\"10px\" shadow=\"base\">\r\n      <form onSubmit={(e) => submitQuestion(e)}>\r\n        <FormControl isRequired>\r\n          <FormLabel color=\"green.400\" fontWeight=\"bold\">\r\n            {\" \"}\r\n            question\r\n          </FormLabel>\r\n          <Input\r\n            type=\"text\"\r\n            value={question}\r\n            onChange={(e) => setQuestion(e.target.value)}\r\n          />\r\n        </FormControl>\r\n        <FormControl isRequired>\r\n          <FormLabel color=\"green.400\" fontWeight=\"bold\">\r\n            specilization\r\n          </FormLabel>\r\n          <Input\r\n            type=\"text\"\r\n            value={specilization}\r\n            onChange={(e) => setSpecilization(e.target.value)}\r\n          />\r\n        </FormControl>\r\n        <Button\r\n          isDisabled={!userLogginData.data?.isUserLoggedIn}\r\n          type=\"submit\"\r\n          marginTop=\"12px\"\r\n          marginX=\"auto\"\r\n        >\r\n          submit\r\n        </Button>\r\n      </form>\r\n    </Box>\r\n  );\r\n};\r\n","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\QuestionBox.tsx",["196","197","198"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Box, Heading, Divider } from \"@chakra-ui/react\";\r\n\r\nimport { FiUser } from \"react-icons/fi\";\r\n\r\ninterface QuestionBoxProps {\r\n  username: string;\r\n  question: string;\r\n  specializtion?: string\r\n  createdAt?: string\r\n}\r\nexport const QuestionBox: React.FC<QuestionBoxProps> = ({\r\n  question,\r\n  username,\r\n  createdAt\r\n}) => {\r\n  return (\r\n    <Box\r\n      pos=\"relative\"\r\n      width=\"100%\"\r\n      p=\"1rem\"\r\n      my=\"5px\"\r\n      shadow=\"inner\"\r\n      bgColor=\"gray.50\"\r\n      _hover={{ bgColor: \"gray.100\" }}\r\n      borderRadius=\"6px\"\r\n      borderLeft= \"5px solid green.200\"\r\n    >\r\n      <Heading as=\"h5\" size=\"xs\" color=\"gray.300\" display=\"flex\">\r\n        <FiUser size=\"15px\" />\r\n        <Box ml=\"4px\">{username}</Box>\r\n      </Heading>\r\n      <Heading\r\n        as=\"h3\"\r\n        boxShadow=\"sm\"\r\n        size=\"md\"\r\n        my=\"5px\"\r\n        p=\"10px\"\r\n        fontWeight=\"bold\"\r\n        cursor=\"pointer\"\r\n        _hover={{\r\n          color: \"green.500\",\r\n        }}\r\n      >\r\n        {question}\r\n      </Heading>\r\n      <Heading\r\n        pos=\"absolute\"\r\n        right=\"20px\"\r\n        bottom=\"1px\"\r\n        color=\"gray.200\"\r\n        fontSize=\"12px\"\r\n      >\r\n        {createdAt?.substr(0, 10)}\r\n      </Heading>\r\n    </Box>\r\n  );\r\n};\r\n",{"ruleId":"199","severity":1,"message":"200","line":1,"column":8,"nodeType":"201","messageId":"202","endLine":1,"endColumn":17},{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","replacedBy":"206"},{"ruleId":"203","replacedBy":"207"},{"ruleId":"205","replacedBy":"208"},{"ruleId":"199","severity":1,"message":"209","line":1,"column":27,"nodeType":"201","messageId":"202","endLine":1,"endColumn":36},{"ruleId":"199","severity":1,"message":"210","line":1,"column":38,"nodeType":"201","messageId":"202","endLine":1,"endColumn":45},{"ruleId":"199","severity":1,"message":"211","line":1,"column":47,"nodeType":"201","messageId":"202","endLine":1,"endColumn":58},{"ruleId":"199","severity":1,"message":"212","line":5,"column":76,"nodeType":"201","messageId":"202","endLine":5,"endColumn":98},{"ruleId":"199","severity":1,"message":"213","line":6,"column":10,"nodeType":"201","messageId":"202","endLine":6,"endColumn":21},{"ruleId":"199","severity":1,"message":"214","line":12,"column":12,"nodeType":"201","messageId":"202","endLine":12,"endColumn":17},{"ruleId":"199","severity":1,"message":"215","line":12,"column":19,"nodeType":"201","messageId":"202","endLine":12,"endColumn":27},{"ruleId":"199","severity":1,"message":"216","line":18,"column":21,"nodeType":"201","messageId":"202","endLine":18,"endColumn":25},{"ruleId":"199","severity":1,"message":"217","line":18,"column":27,"nodeType":"201","messageId":"202","endLine":18,"endColumn":33},{"ruleId":"203","replacedBy":"218"},{"ruleId":"205","replacedBy":"219"},{"ruleId":"203","replacedBy":"220"},{"ruleId":"205","replacedBy":"221"},{"ruleId":"199","severity":1,"message":"222","line":3,"column":3,"nodeType":"201","messageId":"202","endLine":3,"endColumn":25},{"ruleId":"199","severity":1,"message":"223","line":4,"column":3,"nodeType":"201","messageId":"202","endLine":4,"endColumn":22},{"ruleId":"199","severity":1,"message":"224","line":11,"column":10,"nodeType":"201","messageId":"202","endLine":11,"endColumn":15},{"ruleId":"225","severity":1,"message":"226","line":15,"column":47,"nodeType":"227","messageId":"228","endLine":15,"endColumn":49},{"ruleId":"199","severity":1,"message":"229","line":31,"column":7,"nodeType":"201","messageId":"202","endLine":31,"endColumn":16},{"ruleId":"225","severity":1,"message":"226","line":5,"column":57,"nodeType":"227","messageId":"228","endLine":5,"endColumn":59},{"ruleId":"199","severity":1,"message":"209","line":1,"column":27,"nodeType":"201","messageId":"202","endLine":1,"endColumn":36},{"ruleId":"199","severity":1,"message":"230","line":3,"column":3,"nodeType":"201","messageId":"202","endLine":3,"endColumn":12},{"ruleId":"199","severity":1,"message":"231","line":8,"column":3,"nodeType":"201","messageId":"202","endLine":8,"endColumn":9},{"ruleId":"199","severity":1,"message":"232","line":11,"column":10,"nodeType":"201","messageId":"202","endLine":11,"endColumn":18},{"ruleId":"199","severity":1,"message":"233","line":11,"column":20,"nodeType":"201","messageId":"202","endLine":11,"endColumn":27},{"ruleId":"199","severity":1,"message":"234","line":18,"column":3,"nodeType":"201","messageId":"202","endLine":18,"endColumn":13},{"ruleId":"199","severity":1,"message":"235","line":35,"column":11,"nodeType":"201","messageId":"202","endLine":35,"endColumn":17},{"ruleId":"199","severity":1,"message":"236","line":35,"column":19,"nodeType":"201","messageId":"202","endLine":35,"endColumn":25},{"ruleId":"199","severity":1,"message":"217","line":72,"column":24,"nodeType":"201","messageId":"202","endLine":72,"endColumn":30},{"ruleId":"225","severity":1,"message":"226","line":109,"column":49,"nodeType":"227","messageId":"228","endLine":109,"endColumn":51},{"ruleId":"199","severity":1,"message":"237","line":112,"column":9,"nodeType":"201","messageId":"202","endLine":112,"endColumn":20},{"ruleId":"199","severity":1,"message":"238","line":14,"column":3,"nodeType":"201","messageId":"202","endLine":14,"endColumn":6},{"ruleId":"199","severity":1,"message":"239","line":15,"column":3,"nodeType":"201","messageId":"202","endLine":15,"endColumn":17},{"ruleId":"199","severity":1,"message":"240","line":1,"column":38,"nodeType":"201","messageId":"202","endLine":1,"endColumn":44},{"ruleId":"199","severity":1,"message":"212","line":9,"column":10,"nodeType":"201","messageId":"202","endLine":9,"endColumn":32},{"ruleId":"199","severity":1,"message":"241","line":1,"column":17,"nodeType":"201","messageId":"202","endLine":1,"endColumn":25},{"ruleId":"199","severity":1,"message":"209","line":1,"column":27,"nodeType":"201","messageId":"202","endLine":1,"endColumn":36},{"ruleId":"199","severity":1,"message":"212","line":3,"column":3,"nodeType":"201","messageId":"202","endLine":3,"endColumn":25},{"ruleId":"199","severity":1,"message":"242","line":32,"column":11,"nodeType":"201","messageId":"202","endLine":32,"endColumn":20},{"ruleId":"199","severity":1,"message":"243","line":34,"column":26,"nodeType":"201","messageId":"202","endLine":34,"endColumn":31},{"ruleId":"199","severity":1,"message":"244","line":2,"column":10,"nodeType":"201","messageId":"202","endLine":2,"endColumn":24},{"ruleId":"199","severity":1,"message":"245","line":4,"column":10,"nodeType":"201","messageId":"202","endLine":4,"endColumn":13},{"ruleId":"199","severity":1,"message":"246","line":4,"column":26,"nodeType":"201","messageId":"202","endLine":4,"endColumn":30},{"ruleId":"199","severity":1,"message":"247","line":4,"column":32,"nodeType":"201","messageId":"202","endLine":4,"endColumn":38},{"ruleId":"199","severity":1,"message":"248","line":4,"column":40,"nodeType":"201","messageId":"202","endLine":4,"endColumn":46},{"ruleId":"199","severity":1,"message":"243","line":10,"column":17,"nodeType":"201","messageId":"202","endLine":10,"endColumn":22},{"ruleId":"199","severity":1,"message":"209","line":1,"column":27,"nodeType":"201","messageId":"202","endLine":1,"endColumn":36},{"ruleId":"199","severity":1,"message":"247","line":6,"column":3,"nodeType":"201","messageId":"202","endLine":6,"endColumn":9},{"ruleId":"199","severity":1,"message":"214","line":21,"column":10,"nodeType":"201","messageId":"202","endLine":21,"endColumn":15},{"ruleId":"199","severity":1,"message":"215","line":21,"column":17,"nodeType":"201","messageId":"202","endLine":21,"endColumn":25},{"ruleId":"199","severity":1,"message":"249","line":23,"column":10,"nodeType":"201","messageId":"202","endLine":23,"endColumn":21},{"ruleId":"199","severity":1,"message":"216","line":27,"column":19,"nodeType":"201","messageId":"202","endLine":27,"endColumn":23},{"ruleId":"199","severity":1,"message":"217","line":27,"column":25,"nodeType":"201","messageId":"202","endLine":27,"endColumn":31},{"ruleId":"199","severity":1,"message":"209","line":1,"column":27,"nodeType":"201","messageId":"202","endLine":1,"endColumn":36},{"ruleId":"199","severity":1,"message":"230","line":2,"column":10,"nodeType":"201","messageId":"202","endLine":2,"endColumn":19},{"ruleId":"199","severity":1,"message":"246","line":2,"column":21,"nodeType":"201","messageId":"202","endLine":2,"endColumn":25},{"ruleId":"199","severity":1,"message":"231","line":2,"column":27,"nodeType":"201","messageId":"202","endLine":2,"endColumn":33},{"ruleId":"199","severity":1,"message":"250","line":9,"column":3,"nodeType":"201","messageId":"202","endLine":9,"endColumn":14},{"ruleId":"199","severity":1,"message":"251","line":10,"column":3,"nodeType":"201","messageId":"202","endLine":10,"endColumn":14},{"ruleId":"199","severity":1,"message":"252","line":11,"column":3,"nodeType":"201","messageId":"202","endLine":11,"endColumn":16},{"ruleId":"199","severity":1,"message":"253","line":12,"column":3,"nodeType":"201","messageId":"202","endLine":12,"endColumn":10},{"ruleId":"199","severity":1,"message":"241","line":1,"column":17,"nodeType":"201","messageId":"202","endLine":1,"endColumn":25},{"ruleId":"199","severity":1,"message":"209","line":1,"column":27,"nodeType":"201","messageId":"202","endLine":1,"endColumn":36},{"ruleId":"199","severity":1,"message":"212","line":2,"column":10,"nodeType":"201","messageId":"202","endLine":2,"endColumn":32},{"ruleId":"199","severity":1,"message":"230","line":6,"column":3,"nodeType":"201","messageId":"202","endLine":6,"endColumn":12},{"ruleId":"199","severity":1,"message":"246","line":7,"column":3,"nodeType":"201","messageId":"202","endLine":7,"endColumn":7},{"ruleId":"199","severity":1,"message":"247","line":8,"column":3,"nodeType":"201","messageId":"202","endLine":8,"endColumn":9},{"ruleId":"199","severity":1,"message":"248","line":9,"column":3,"nodeType":"201","messageId":"202","endLine":9,"endColumn":9},{"ruleId":"199","severity":1,"message":"254","line":10,"column":3,"nodeType":"201","messageId":"202","endLine":10,"endColumn":14},{"ruleId":"199","severity":1,"message":"255","line":11,"column":3,"nodeType":"201","messageId":"202","endLine":11,"endColumn":12},{"ruleId":"199","severity":1,"message":"256","line":12,"column":3,"nodeType":"201","messageId":"202","endLine":12,"endColumn":8},{"ruleId":"199","severity":1,"message":"209","line":1,"column":27,"nodeType":"201","messageId":"202","endLine":1,"endColumn":36},{"ruleId":"199","severity":1,"message":"217","line":14,"column":28,"nodeType":"201","messageId":"202","endLine":14,"endColumn":34},{"ruleId":"199","severity":1,"message":"216","line":14,"column":36,"nodeType":"201","messageId":"202","endLine":14,"endColumn":40},{"ruleId":"199","severity":1,"message":"243","line":14,"column":42,"nodeType":"201","messageId":"202","endLine":14,"endColumn":47},{"ruleId":"199","severity":1,"message":"257","line":14,"column":49,"nodeType":"201","messageId":"202","endLine":14,"endColumn":56},{"ruleId":"199","severity":1,"message":"241","line":1,"column":17,"nodeType":"201","messageId":"202","endLine":1,"endColumn":25},{"ruleId":"199","severity":1,"message":"209","line":1,"column":27,"nodeType":"201","messageId":"202","endLine":1,"endColumn":36},{"ruleId":"199","severity":1,"message":"258","line":3,"column":24,"nodeType":"201","messageId":"202","endLine":3,"endColumn":31},"@typescript-eslint/no-unused-vars","'jwtDecode' is defined but never used.","Identifier","unusedVar","no-native-reassign",["259"],"no-negated-in-lhs",["260"],["259"],["260"],"'useEffect' is defined but never used.","'useMemo' is defined but never used.","'useCallback' is defined but never used.","'useIsUserLoggedInQuery' is defined but never used.","'ApolloError' is defined but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'data' is assigned a value but never used.","'client' is assigned a value but never used.",["259"],["260"],["259"],["260"],"'IsUserLoggedInDocument' is defined but never used.","'IsUserLoggedInQuery' is defined but never used.","'Login' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'isMounted' is assigned a value but never used.","'Container' is defined but never used.","'Center' is defined but never used.","'MoonIcon' is defined but never used.","'SunIcon' is defined but never used.","'useMeQuery' is defined but never used.","'isOpen' is assigned a value but never used.","'onOpen' is assigned a value but never used.","'currentMode' is assigned a value but never used.","'gql' is defined but never used.","'createHttpLink' is defined but never used.","'useRef' is defined but never used.","'useState' is defined but never used.","'HomeProps' is defined but never used.","'error' is assigned a value but never used.","'getAccessToken' is defined but never used.","'Box' is defined but never used.","'Flex' is defined but never used.","'VStack' is defined but never used.","'Button' is defined but never used.","'showMessage' is assigned a value but never used.","'ModalHeader' is defined but never used.","'ModalFooter' is defined but never used.","'useDisclosure' is defined but never used.","'Heading' is defined but never used.","'FormControl' is defined but never used.","'FormLabel' is defined but never used.","'Input' is defined but never used.","'loading' is assigned a value but never used.","'Divider' is defined but never used.","no-global-assign","no-unsafe-negation"]