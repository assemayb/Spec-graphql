[{"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\SignleTopicPage.tsx":"1","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\QuestionBox.tsx":"2","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\reportWebVitals.ts":"3","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Topics.tsx":"4","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\generated\\graphql.tsx":"5","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\QuestionForm.tsx":"6","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\OptionsPopover.tsx":"7","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Profile.tsx":"8","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\App.tsx":"9","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\index.tsx":"10","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\theme.tsx":"11","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\Skeleton.tsx":"12","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\routes.tsx":"13","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Footer.tsx":"14","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\Spinners.tsx":"15","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Modal.tsx":"16","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\LinkBox.tsx":"17","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Register.tsx":"18","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Home.tsx":"19","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Test.tsx":"20","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Login.tsx":"21","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\LoginFrom.tsx":"22","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Message.tsx":"23","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\ProfileModal.tsx":"24","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\InteractionsSection.tsx":"25","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\HeaderComp.tsx":"26","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Thread.tsx":"27","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\accessToken.ts":"28","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\RegisterForm.tsx":"29","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\ThreadSortingBtns.tsx":"30","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\LikeSection.tsx":"31","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\TopicBox.tsx":"32","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\AddReplyModal.tsx":"33","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Header.tsx":"34","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\LogoutBtn.tsx":"35","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\NotificationBtn.tsx":"36","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\ProfileBtn.tsx":"37","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\User.tsx":"38","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\hooks\\usePagintation.tsx":"39","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\PagintationSection.tsx":"40"},{"size":3299,"mtime":1628443036985,"results":"41","hashOfConfig":"42"},{"size":5426,"mtime":1628443032045,"results":"43","hashOfConfig":"42"},{"size":425,"mtime":1607784182783,"results":"44","hashOfConfig":"42"},{"size":1510,"mtime":1628171302921,"results":"45","hashOfConfig":"42"},{"size":40275,"mtime":1628614683759,"results":"46","hashOfConfig":"42"},{"size":4869,"mtime":1627968328596,"results":"47","hashOfConfig":"42"},{"size":1957,"mtime":1627163448967,"results":"48","hashOfConfig":"42"},{"size":4080,"mtime":1628857929015,"results":"49","hashOfConfig":"42"},{"size":1333,"mtime":1628236653053,"results":"50","hashOfConfig":"42"},{"size":3958,"mtime":1628063047368,"results":"51","hashOfConfig":"42"},{"size":247,"mtime":1627512237368,"results":"52","hashOfConfig":"42"},{"size":327,"mtime":1627264169528,"results":"53","hashOfConfig":"42"},{"size":1096,"mtime":1628235153484,"results":"54","hashOfConfig":"42"},{"size":415,"mtime":1627886332356,"results":"55","hashOfConfig":"42"},{"size":382,"mtime":1626377368932,"results":"56","hashOfConfig":"42"},{"size":1487,"mtime":1627974058684,"results":"57","hashOfConfig":"42"},{"size":718,"mtime":1627588144108,"results":"58","hashOfConfig":"42"},{"size":1659,"mtime":1627894070983,"results":"59","hashOfConfig":"42"},{"size":5800,"mtime":1628874765916,"results":"60","hashOfConfig":"42"},{"size":647,"mtime":1627079266812,"results":"61","hashOfConfig":"42"},{"size":2848,"mtime":1628247100922,"results":"62","hashOfConfig":"42"},{"size":2566,"mtime":1628789081819,"results":"63","hashOfConfig":"42"},{"size":246,"mtime":1627544267954,"results":"64","hashOfConfig":"42"},{"size":1303,"mtime":1627974102931,"results":"65","hashOfConfig":"42"},{"size":690,"mtime":1627265277928,"results":"66","hashOfConfig":"42"},{"size":715,"mtime":1628171106149,"results":"67","hashOfConfig":"42"},{"size":5726,"mtime":1627968898492,"results":"68","hashOfConfig":"42"},{"size":231,"mtime":1607976985837,"results":"69","hashOfConfig":"42"},{"size":3781,"mtime":1627893990669,"results":"70","hashOfConfig":"42"},{"size":1251,"mtime":1627512671435,"results":"71","hashOfConfig":"42"},{"size":1842,"mtime":1627893649452,"results":"72","hashOfConfig":"42"},{"size":1115,"mtime":1628283107346,"results":"73","hashOfConfig":"42"},{"size":2228,"mtime":1627974312146,"results":"74","hashOfConfig":"42"},{"size":2128,"mtime":1628062143677,"results":"75","hashOfConfig":"42"},{"size":1786,"mtime":1628061825273,"results":"76","hashOfConfig":"42"},{"size":2651,"mtime":1628170066644,"results":"77","hashOfConfig":"42"},{"size":1732,"mtime":1628062237627,"results":"78","hashOfConfig":"42"},{"size":1612,"mtime":1628247124703,"results":"79","hashOfConfig":"42"},{"size":2382,"mtime":1628875006300,"results":"80","hashOfConfig":"42"},{"size":2258,"mtime":1628874907767,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11skg4y",{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"91"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"145"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"91"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\SignleTopicPage.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\QuestionBox.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\reportWebVitals.ts",[],["171","172"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Topics.tsx",[],["173","174"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\generated\\graphql.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\QuestionForm.tsx",["175"],"/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  ListThreadsQuery,\r\n  ListUserThreadsQuery,\r\n  useCreateThreadMutation,\r\n  useIsUserLoggedInLazyQuery,\r\n  useMeLazyQuery,\r\n} from \"../generated/graphql\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  FormControl,\r\n  FormLabel,\r\n  Heading,\r\n  Input,\r\n  Select,\r\n  Divider,\r\n} from \"@chakra-ui/react\";\r\nimport { ApolloQueryResult } from \"@apollo/client\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { topicsQuery } from \"../pages/Topics\";\r\n\r\ninterface QuestionFormProps {\r\n  refetch?: () => Promise<\r\n    ApolloQueryResult<ListThreadsQuery>\r\n  > /* from home page*/;\r\n  clickedFromProfilePage?: boolean /* if this prop is passed from profile page */;\r\n  setShowModal?: React.Dispatch<React.SetStateAction<boolean>>;\r\n  refetchProfileThreads?: () => Promise<\r\n    ApolloQueryResult<ListUserThreadsQuery>\r\n  >;\r\n}\r\nexport const QuestionForm: React.FC<QuestionFormProps> = ({\r\n  refetch,\r\n  clickedFromProfilePage,\r\n  setShowModal,\r\n  refetchProfileThreads,\r\n}) => {\r\n  const [question, setQuestion] = useState(\"\");\r\n  const [specilization, setSpecilization] = useState(\"\");\r\n  const topics = useQuery(topicsQuery);\r\n  const [topicsArr, setTopicsArr] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setTopicsArr(topics.data && topics.data.listTopics);\r\n  }, [topics.data]);\r\n\r\n  const [createQuestion] = useCreateThreadMutation();\r\n  const [userLogginData, { data }] = useIsUserLoggedInLazyQuery();\r\n  \r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    if (isMounted) {\r\n      userLogginData();\r\n    }\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n  }, []);\r\n\r\n  const submitQuestion = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    try {\r\n      await createQuestion({\r\n        variables: {\r\n          question,\r\n          spec: specilization,\r\n        },\r\n      });\r\n\r\n      if (refetchProfileThreads !== undefined) {\r\n        await refetchProfileThreads();\r\n\r\n        setTimeout(() => {\r\n          setShowModal!(false);\r\n          const x = document.querySelector(\"#footer\")?.scrollHeight;\r\n          console.log(x);\r\n        }, 200);\r\n      }\r\n      refetch !== undefined && (await refetch());\r\n      setQuestion(\"\");\r\n    } catch (error) {\r\n      console.log(error.messge);\r\n    }\r\n  };\r\n  return (\r\n    <Box>\r\n      <Heading\r\n        fontSize={{ base: \"14px\", md: \"1.5rem\" }}\r\n        textAlign=\"center\"\r\n        textColor=\"gray.400\"\r\n        marginBottom={{ base: \"6px\", md: \"1rem\" }}\r\n      >\r\n        Create Thread\r\n        <Divider marginTop=\"8px\" />\r\n      </Heading>\r\n\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        p={{\r\n          base: \"1rem\",\r\n          md: \"1.5rem\",\r\n        }}\r\n        my={{\r\n          base: \"5px\",\r\n          md: \"10px\",\r\n        }}\r\n        boxShadow={clickedFromProfilePage ? \"\" : \"lg\"}\r\n        textAlign=\"center\"\r\n      >\r\n        <form onSubmit={(e) => submitQuestion(e)}>\r\n          <FormControl isRequired fontWeight=\"bold\">\r\n            <FormLabel\r\n              color=\"green.400\"\r\n              fontSize={{ base: \"0.7rem\", md: \"1rem\" }}\r\n            >\r\n              {\" \"}\r\n              question\r\n            </FormLabel>\r\n            <Input\r\n              fontSize={{ base: \"0.7rem\", md: \"1rem\" }}\r\n              borderRadius=\"-10px\"\r\n              padding={{ base: \"0.4rem\", md: \"1rem\" }}\r\n              type=\"text\"\r\n              value={question}\r\n              onChange={(e) => setQuestion(e.target.value)}\r\n            />\r\n          </FormControl>\r\n          <FormControl isRequired fontWeight=\"bold\">\r\n            <FormLabel\r\n              color=\"green.400\"\r\n              fontSize={{ base: \"0.7rem\", md: \"1rem\" }}\r\n            >\r\n              specilization\r\n            </FormLabel>\r\n            <Select\r\n              onChange={(e) => setSpecilization(e.target.value)}\r\n              fontSize=\"12px\"\r\n              defaultValue={\"disabled\"}\r\n              name=\"topic\"\r\n              variant=\"flushed\"\r\n            >\r\n              <option value=\"disabled\" disabled>\r\n                choose a topic\r\n              </option>\r\n              {topicsArr &&\r\n                topicsArr.map((topic, idx) => (\r\n                  <option key={idx} value={topic}>\r\n                    {topic}\r\n                  </option>\r\n                ))}\r\n            </Select>\r\n          </FormControl>\r\n          <Button\r\n            isDisabled={!data?.isUserLoggedIn}\r\n            type=\"submit\"\r\n            borderRadius=\"-20px\"\r\n            marginTop={{\r\n              base: \"8px\",\r\n              md: \"12px\",\r\n            }}\r\n            marginX=\"auto\"\r\n            fontSize={{\r\n              base: \"10px\",\r\n              md: \"1rem\",\r\n            }}\r\n          >\r\n            submit\r\n          </Button>\r\n        </form>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n",["176","177"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\OptionsPopover.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Profile.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\App.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\index.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\theme.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\Skeleton.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\routes.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Footer.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\Spinners.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Modal.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\LinkBox.tsx",[],["178","179"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Register.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Home.tsx",["180","181"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Test.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Login.tsx",["182","183","184","185","186","187","188","189","190","191","192","193","194"],"import React, { useState, useEffect, useMemo, useCallback } from 'react'\r\nimport { RouteComponentProps } from \"react-router-dom\"\r\nimport { setAccessToken } from '../accessToken'\r\nimport { Message } from '../components/Message'\r\nimport { IsUserLoggedInDocument, IsUserLoggedInQuery, MeDocument, MeQuery, useIsUserLoggedInQuery, useLoginMutation } from '../generated/graphql'\r\nimport { ApolloError } from \"@apollo/client/errors\"\r\n\r\n\r\nexport const Login: React.FC<RouteComponentProps> = ({ history }) => {\r\n\r\n    const [username, setUsername] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [showMessage, setShowMessage] = useState({\r\n        show: false,\r\n        value: \"\"\r\n    })\r\n    const [login, { data, client }] = useLoginMutation()\r\n\r\n    const loginUser = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n        e.preventDefault()\r\n        try {\r\n\r\n            const response = await login({\r\n                variables: {\r\n                    username,\r\n                    password\r\n                },\r\n                update: (cache, { data }) => {\r\n                    if (!data) {\r\n                        return null;\r\n                    }\r\n                    // cache.writeQuery<MeQuery>({\r\n                    //     query: MeDocument,\r\n                    //     data: {\r\n                    //         me: data.loginUser?.user\r\n                    //     }\r\n                    // })\r\n                    // cache.writeQuery<IsUserLoggedInQuery>({\r\n                    //     query: IsUserLoggedInDocument,\r\n                    //     data: {\r\n                    //         isUserLoggedIn: true\r\n                    //     }\r\n                    // })\r\n\r\n                },\r\n            })\r\n            if (response && response.data) {\r\n                setAccessToken(response.data.loginUser?.accessToken!)\r\n                history.push(\"/\")\r\n                setUsername(\"\")\r\n                setPassword(\"\")\r\n            }\r\n        } catch (error) {\r\n            setShowMessage({ show: true, value: error.message })\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form className=\"login-form\">\r\n                {showMessage.show && (\r\n                    <Message message={showMessage.value} />\r\n                )}\r\n                <label htmlFor=\"username\">username: </label>\r\n                <input id=\"username\" type=\"text\" value={username} onChange={e => setUsername(e.target.value)} />\r\n                <label htmlFor=\"password\">password: </label>\r\n                <input id=\"password\" type=\"password\" value={password} onChange={e => setPassword(e.target.value)} />\r\n                <button onClick={e => loginUser(e)}>Login</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\LoginFrom.tsx",["195"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Message.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\ProfileModal.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\InteractionsSection.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\HeaderComp.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Thread.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\accessToken.ts",["196"],"import jwtDecode from \"jwt-decode\"\r\n\r\nexport const getAccessToken = () => {\r\n    return localStorage.getItem(\"accessToken\")\r\n}\r\n\r\nexport const setAccessToken = (token: string) => {\r\n    localStorage.setItem(\"accessToken\", token)\r\n}",["197","198"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\RegisterForm.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\ThreadSortingBtns.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\LikeSection.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\TopicBox.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\AddReplyModal.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\components\\Header.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\LogoutBtn.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\NotificationBtn.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\ProfileBtn.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\User.tsx",["199"],"import { Flex } from \"@chakra-ui/react\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useListOtherUserThreadsLazyQuery } from \"../generated/graphql\";\r\nimport { QuestionBox } from \"../smallComps/QuestionBox\";\r\nimport { FastBigSpinner } from \"../smallComps/Spinners\";\r\n\r\ninterface UserProps {}\r\n\r\nexport const User: React.FC<UserProps> = () => {\r\n  const params: { username: string } = useParams();\r\n  const [listOtherThreads, { loading, data }] =\r\n    useListOtherUserThreadsLazyQuery({\r\n      fetchPolicy: \"cache-and-network\",\r\n      variables: {\r\n        username: params.username,\r\n      },\r\n    });\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    isMounted && listOtherThreads();\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n  }, []);\r\n\r\n  let ThreadSection: any = null;\r\n  if (loading) {\r\n    ThreadSection = <FastBigSpinner />;\r\n  } else if (data) {\r\n    ThreadSection = (\r\n      <>\r\n        {data.listOtherUserThreads?.map((thread, idx) => {\r\n          return (\r\n            <QuestionBox\r\n              key={idx}\r\n              threadId={thread.id}\r\n              question={thread.question}\r\n              createdAt={thread.createdAt}\r\n              specializtion={thread.specialization}\r\n              fromUserPage={true}\r\n            />\r\n          );\r\n        })}\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Flex\r\n      marginTop=\"3rem\"\r\n      marginX=\"0.4rem\"\r\n      p=\"1.5rem\"\r\n      boxShadow=\"lg\"\r\n      direction=\"column\"\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n    >\r\n      {ThreadSection}\r\n    </Flex>\r\n  );\r\n};\r\n","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\hooks\\usePagintation.tsx",["200"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\PagintationSection.tsx",[],{"ruleId":"201","replacedBy":"202"},{"ruleId":"203","replacedBy":"204"},{"ruleId":"201","replacedBy":"205"},{"ruleId":"203","replacedBy":"206"},{"ruleId":"207","severity":1,"message":"208","line":8,"column":3,"nodeType":"209","messageId":"210","endLine":8,"endColumn":17},{"ruleId":"201","replacedBy":"211"},{"ruleId":"203","replacedBy":"212"},{"ruleId":"201","replacedBy":"213"},{"ruleId":"203","replacedBy":"214"},{"ruleId":"207","severity":1,"message":"215","line":8,"column":15,"nodeType":"209","messageId":"210","endLine":8,"endColumn":21},{"ruleId":"207","severity":1,"message":"216","line":27,"column":54,"nodeType":"209","messageId":"210","endLine":27,"endColumn":69},{"ruleId":"207","severity":1,"message":"217","line":1,"column":27,"nodeType":"209","messageId":"210","endLine":1,"endColumn":36},{"ruleId":"207","severity":1,"message":"218","line":1,"column":38,"nodeType":"209","messageId":"210","endLine":1,"endColumn":45},{"ruleId":"207","severity":1,"message":"219","line":1,"column":47,"nodeType":"209","messageId":"210","endLine":1,"endColumn":58},{"ruleId":"207","severity":1,"message":"220","line":5,"column":10,"nodeType":"209","messageId":"210","endLine":5,"endColumn":32},{"ruleId":"207","severity":1,"message":"221","line":5,"column":34,"nodeType":"209","messageId":"210","endLine":5,"endColumn":53},{"ruleId":"207","severity":1,"message":"222","line":5,"column":55,"nodeType":"209","messageId":"210","endLine":5,"endColumn":65},{"ruleId":"207","severity":1,"message":"223","line":5,"column":67,"nodeType":"209","messageId":"210","endLine":5,"endColumn":74},{"ruleId":"207","severity":1,"message":"224","line":5,"column":76,"nodeType":"209","messageId":"210","endLine":5,"endColumn":98},{"ruleId":"207","severity":1,"message":"225","line":6,"column":10,"nodeType":"209","messageId":"210","endLine":6,"endColumn":21},{"ruleId":"207","severity":1,"message":"226","line":12,"column":12,"nodeType":"209","messageId":"210","endLine":12,"endColumn":17},{"ruleId":"207","severity":1,"message":"227","line":12,"column":19,"nodeType":"209","messageId":"210","endLine":12,"endColumn":27},{"ruleId":"207","severity":1,"message":"228","line":18,"column":21,"nodeType":"209","messageId":"210","endLine":18,"endColumn":25},{"ruleId":"207","severity":1,"message":"229","line":18,"column":27,"nodeType":"209","messageId":"210","endLine":18,"endColumn":33},{"ruleId":"207","severity":1,"message":"230","line":22,"column":10,"nodeType":"209","messageId":"210","endLine":22,"endColumn":21},{"ruleId":"207","severity":1,"message":"231","line":1,"column":8,"nodeType":"209","messageId":"210","endLine":1,"endColumn":17},{"ruleId":"201","replacedBy":"232"},{"ruleId":"203","replacedBy":"233"},{"ruleId":"234","severity":1,"message":"235","line":26,"column":6,"nodeType":"236","endLine":26,"endColumn":8,"suggestions":"237"},{"ruleId":"207","severity":1,"message":"238","line":1,"column":8,"nodeType":"209","messageId":"210","endLine":1,"endColumn":13},"no-native-reassign",["239"],"no-negated-in-lhs",["240"],["239"],["240"],"@typescript-eslint/no-unused-vars","'useMeLazyQuery' is defined but never used.","Identifier","unusedVar",["239"],["240"],["239"],["240"],"'Button' is defined but never used.","'subscribeToMore' is assigned a value but never used.","'useEffect' is defined but never used.","'useMemo' is defined but never used.","'useCallback' is defined but never used.","'IsUserLoggedInDocument' is defined but never used.","'IsUserLoggedInQuery' is defined but never used.","'MeDocument' is defined but never used.","'MeQuery' is defined but never used.","'useIsUserLoggedInQuery' is defined but never used.","'ApolloError' is defined but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'data' is assigned a value but never used.","'client' is assigned a value but never used.","'showMessage' is assigned a value but never used.","'jwtDecode' is defined but never used.",["239"],["240"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'listOtherThreads'. Either include it or remove the dependency array.","ArrayExpression",["241"],"'React' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"242","fix":"243"},"Update the dependencies array to be: [listOtherThreads]",{"range":"244","text":"245"},[805,807],"[listOtherThreads]"]