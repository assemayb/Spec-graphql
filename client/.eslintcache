[{"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\SignleTopicPage.tsx":"1","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\QuestionBox.tsx":"2","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\reportWebVitals.ts":"3","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Topics.tsx":"4","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\generated\\graphql.tsx":"5","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\QuestionForm.tsx":"6","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\OptionsPopover.tsx":"7","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Profile.tsx":"8","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\App.tsx":"9"},{"size":1929,"mtime":1627080253083,"results":"10","hashOfConfig":"11"},{"size":3534,"mtime":1627088852338,"results":"12","hashOfConfig":"11"},{"size":425,"mtime":1607784182783,"results":"13","hashOfConfig":"11"},{"size":2739,"mtime":1627090344082,"results":"14","hashOfConfig":"11"},{"size":26085,"mtime":1627078596809,"results":"15","hashOfConfig":"11"},{"size":3358,"mtime":1627087554497,"results":"16","hashOfConfig":"11"},{"size":1718,"mtime":1627088960562,"results":"17","hashOfConfig":"11"},{"size":3168,"mtime":1627089430533,"results":"18","hashOfConfig":"11"},{"size":1341,"mtime":1627089325956,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"11skg4y",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\SignleTopicPage.tsx",["39","40"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\QuestionBox.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\reportWebVitals.ts",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Topics.tsx",["41","42","43","44","45","46","47","48","49"],"import React, { useState, useEffect, FC } from \"react\";\r\nimport { useIsUserLoggedInQuery } from \"../generated/graphql\";\r\nimport { RouteComponentProps, useHistory } from \"react-router-dom\";\r\nimport {\r\n  Box,\r\n  Container,\r\n  Flex,\r\n  VStack,\r\n  Button,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Grid,\r\n  Spinner,\r\n  Skeleton,\r\n  Divider,\r\n  Center,\r\n} from \"@chakra-ui/react\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\n\r\ninterface TopicBoxProps {\r\n  topic: string;\r\n}\r\nconst TopicBox: FC<TopicBoxProps> = ({ topic }) => {\r\n  const router = useHistory();\r\n  const goToTopic = () => {\r\n    router.push(`/topics/${topic}`);\r\n  };\r\n  return (\r\n    <Box\r\n      onClick={() => goToTopic()}\r\n      cursor=\"pointer\"\r\n      w=\"100%\"\r\n      h=\"100px\"\r\n      bg=\"gray.100\"\r\n      shadow=\"md\"\r\n      borderRadius=\"-10px\"\r\n      _hover={{\r\n        color: \"green.400\",\r\n        bg: \"gray.300\",\r\n        shadow: \"lg\",\r\n      }}\r\n    >\r\n      <Box\r\n        textAlign=\"center\"\r\n        p=\"0.2rem\"\r\n        fontSize={[\"10px\", \"13px\", \"18px\", \"20px\"]}\r\n        fontWeight=\"bold\"\r\n        textShadow=\"md\"\r\n        marginTop=\"5px\"\r\n      >\r\n        {topic}\r\n        <Center marginTop=\"5px\">\r\n          <img\r\n            src={topic === \"Cancer\" ? `${topic}.png` : `${topic}.svg`}\r\n            width={topic === \"Cancer\" ? \"35px\" : \"\"}\r\n            alt=\"\"\r\n          />\r\n        </Center>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport const topicsQuery = gql`\r\n  query listTopics {\r\n    listTopics\r\n  }\r\n`;\r\n\r\nexport const Topics: React.FC<RouteComponentProps> = () => {\r\n  const { data } = useQuery(topicsQuery);\r\n  const [topcis, setTopics] = useState([]);\r\n  const [dummieArr] = useState(new Array(12).fill(\"\"));\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setTimeout(() => {\r\n        setTopics(data.listTopics);\r\n      }, 300);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        marginLeft=\"1rem\"\r\n        marginTop=\"1rem\"\r\n        fontSize=\"30px\"\r\n        fontFamily=\"fantasy\"\r\n        fontWeight=\"bold\"\r\n        color=\"gray.500\"\r\n        textShadow=\"lg\"\r\n      >\r\n        Health Topics\r\n        <Divider />\r\n      </Box>\r\n\r\n      <Box p=\"2rem\" marginTop=\"2rem\" shadow=\"base\">\r\n        <Grid\r\n          templateColumns={[\r\n            \"repeat(2, 1fr)\",\r\n            \"repeat(3, 1fr)\",\r\n            \"repeat(4, 1fr)\",\r\n            \"repeat(5, 1fr)\",\r\n          ]}\r\n          gap={5}\r\n        >\r\n          <>\r\n            {topcis.length < 1\r\n              ? dummieArr.map((item, idx) => {\r\n                  return <Skeleton color=\"green.100\" key={idx} height=\"80px\" />;\r\n                })\r\n              : topcis.map((item, idx) => <TopicBox key={idx} topic={item} />)}\r\n          </>\r\n        </Grid>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n","F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\generated\\graphql.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\QuestionForm.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\smallComps\\OptionsPopover.tsx",[],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\pages\\Profile.tsx",["50","51","52","53","54","55"],"F:\\stuff\\code\\SPEC\\NewSpec\\client\\src\\App.tsx",["56","57","58"],{"ruleId":"59","severity":1,"message":"60","line":2,"column":17,"nodeType":"61","messageId":"62","endLine":2,"endColumn":26},{"ruleId":"63","severity":1,"message":"64","line":10,"column":65,"nodeType":"65","messageId":"66","endLine":10,"endColumn":67},{"ruleId":"59","severity":1,"message":"67","line":2,"column":10,"nodeType":"61","messageId":"62","endLine":2,"endColumn":32},{"ruleId":"59","severity":1,"message":"68","line":6,"column":3,"nodeType":"61","messageId":"62","endLine":6,"endColumn":12},{"ruleId":"59","severity":1,"message":"69","line":7,"column":3,"nodeType":"61","messageId":"62","endLine":7,"endColumn":7},{"ruleId":"59","severity":1,"message":"70","line":8,"column":3,"nodeType":"61","messageId":"62","endLine":8,"endColumn":9},{"ruleId":"59","severity":1,"message":"71","line":9,"column":3,"nodeType":"61","messageId":"62","endLine":9,"endColumn":9},{"ruleId":"59","severity":1,"message":"72","line":10,"column":3,"nodeType":"61","messageId":"62","endLine":10,"endColumn":14},{"ruleId":"59","severity":1,"message":"73","line":11,"column":3,"nodeType":"61","messageId":"62","endLine":11,"endColumn":12},{"ruleId":"59","severity":1,"message":"74","line":12,"column":3,"nodeType":"61","messageId":"62","endLine":12,"endColumn":8},{"ruleId":"59","severity":1,"message":"75","line":14,"column":3,"nodeType":"61","messageId":"62","endLine":14,"endColumn":10},{"ruleId":"59","severity":1,"message":"60","line":1,"column":27,"nodeType":"61","messageId":"62","endLine":1,"endColumn":36},{"ruleId":"59","severity":1,"message":"67","line":3,"column":3,"nodeType":"61","messageId":"62","endLine":3,"endColumn":25},{"ruleId":"59","severity":1,"message":"76","line":4,"column":3,"nodeType":"61","messageId":"62","endLine":4,"endColumn":22},{"ruleId":"59","severity":1,"message":"77","line":9,"column":10,"nodeType":"61","messageId":"62","endLine":9,"endColumn":22},{"ruleId":"59","severity":1,"message":"78","line":18,"column":11,"nodeType":"61","messageId":"62","endLine":18,"endColumn":17},{"ruleId":"59","severity":1,"message":"79","line":18,"column":19,"nodeType":"61","messageId":"62","endLine":18,"endColumn":25},{"ruleId":"59","severity":1,"message":"80","line":1,"column":38,"nodeType":"61","messageId":"62","endLine":1,"endColumn":44},{"ruleId":"59","severity":1,"message":"67","line":9,"column":10,"nodeType":"61","messageId":"62","endLine":9,"endColumn":32},{"ruleId":"59","severity":1,"message":"75","line":11,"column":21,"nodeType":"61","messageId":"62","endLine":11,"endColumn":28},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'useIsUserLoggedInQuery' is defined but never used.","'Container' is defined but never used.","'Flex' is defined but never used.","'VStack' is defined but never used.","'Button' is defined but never used.","'FormControl' is defined but never used.","'FormLabel' is defined but never used.","'Input' is defined but never used.","'Spinner' is defined but never used.","'useListThreadsQuery' is defined but never used.","'QuestionForm' is defined but never used.","'isOpen' is assigned a value but never used.","'onOpen' is assigned a value but never used.","'useRef' is defined but never used."]